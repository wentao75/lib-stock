{"version":3,"file":"lib-stock.js","sources":["src/util.js","src/transaction-engine.js","src/transaction.js","src/reports.js","src/simulator.js","src/search.js","src/momentum-breakthrough.js","src/stoploss.js","src/benchmark-basic.js","src/outsideday.js","src/opensell.js","src/smashday.js","src/indicators/utils.js","src/indicators/ma.js","src/indicators/atr.js","src/indicators/keltner-channel.js","src/indicators/boll.js","src/indicators/mtm.js","src/indicators/ao.js","src/indicators/squeeze.js","src/index.js"],"sourcesContent":["function formatFxstr(num) {\n    return num.toLocaleString(\"zh-CN\"); //, { style: \"currency\", currency: \"CNY\" });\n}\n\nexport { formatFxstr };\n","import _ from \"lodash\";\nimport { formatFxstr } from \"./util\";\nimport debugpkg from \"debug\";\n\n// import trans from \"./transaction\";\n\nconst debug = debugpkg(\"engine\");\n\n/**\n * 主处理过程\n * 1. 查看设置中的卖出模型列表，按序执行，如果成交，则直接清算\n * 2. 如果执行完卖出，仍然有持仓，检查配置是否许可买入\n * 3. 如果需要买入，查看设置的买入模型列表，按序执行，如果成交，则直接清算\n *\n * 2020.8.26 目前已经支持按照规则，非固定头寸方式下，可以在持仓下仍然买入\n *           持仓卖出按照每笔单独进行，不合并进行\n *\n * @param {*} index 当前日股票数据索引\n * @param {*} stockData 股票数据信息\n * @param {*} capitalData 账户信息\n * @param {*} options 算法参数\n */\nasync function executeTransaction(index, stockData, capitalData, options) {\n    let translog = null;\n    // 首先检查卖出\n    // 所有算法首先检查并处理止损\n    // 检查是否需要止损\n    let tradeDate = stockData[index].trade_date;\n    let stockInfo = capitalData.info;\n\n    let sellRules = options.rules && options.rules.sell;\n    let buyRules = options.rules && options.rules.buy;\n\n    // 目前的持仓情况\n    let stocks = capitalData && capitalData.stocks;\n    if (sellRules) {\n        // 每个买入持股单独处理\n        let stockId = 0;\n        while (stockId < stocks.length) {\n            let stock = stocks[stockId];\n            debug(`卖出股票信息: %o`, stock);\n\n            let sold = false;\n            for (let rule of sellRules) {\n                if (rule) {\n                    debug(\n                        `${rule.name} 卖出检查：${tradeDate}, %o`,\n                        stockData[index]\n                    );\n                    translog = rule.checkSellTransaction(\n                        stockInfo,\n                        stock,\n                        index,\n                        stockData,\n                        options\n                    );\n                    if (translog) translog.transeq = stock.transeq;\n                    if (\n                        executeCapitalSettlement(\n                            stockInfo,\n                            translog,\n                            capitalData,\n                            options\n                        )\n                    ) {\n                        debug(\n                            `${\n                                rule.name\n                            } 卖出：${tradeDate}，价格：${formatFxstr(\n                                translog.price\n                            )}元，数量：${\n                                translog.count / 100\n                            }手，总价：${translog.total.toFixed(\n                                2\n                            )}元[佣金${translog.commission.toFixed(\n                                2\n                            )}元，过户费${translog.fee.toFixed(\n                                2\n                            )}，印花税${translog.duty.toFixed(2)}元], ${\n                                translog.memo\n                            }`\n                        );\n                        sold = true;\n                        break;\n                    }\n                }\n            }\n            if (!sold) {\n                // 没有卖出，需要查看下一条持股进行检查\n                stockId++;\n            }\n        }\n    }\n\n    // 如果非固定头寸，则检查是否有持仓，如果有不进行买入\n    if (!options.fixCash && capitalData.stocks.length > 0) return;\n    // if (capitalData && capitalData.stock && capitalData.stock.count > 0) return;\n\n    // 执行买入\n    // debug(\"执行买入检查\");\n    let cash = capitalData.balance;\n    if (options.fixCash) cash = options.initBalance;\n    if (buyRules) {\n        for (let rule of buyRules) {\n            translog = rule.checkBuyTransaction(\n                stockInfo,\n                cash,\n                index,\n                stockData,\n                options\n            );\n            if (translog) translog.transeq = capitalData._transeq++;\n            // debug(`买入结果：%o`, translog);\n            if (\n                executeCapitalSettlement(\n                    stockInfo,\n                    translog,\n                    capitalData,\n                    options\n                )\n            ) {\n                debug(\n                    `${\n                        rule.name\n                    } 买入交易：${tradeDate}，价格：${translog.price.toFixed(\n                        2\n                    )}元，数量：${\n                        translog.count / 100\n                    }手，总价：${translog.total.toFixed(\n                        2\n                    )}元[佣金${translog.commission.toFixed(\n                        2\n                    )}元，过户费${translog.fee.toFixed(\n                        2\n                    )}，印花税${translog.duty.toFixed(2)}元], ${translog.memo}`\n                );\n                // debug(`股票信息：%o`, stockInfo);\n                // debug(`账户信息：%o`, capitalData);\n                // return translog;\n            }\n        }\n    }\n}\n\n/**\n * 根据交易记录完成账户清算\n * @param {*} stockInfo 股票信息\n * @param {*} translog 交易记录\n * @param {*} capitalData 账户数据\n * @param {*} options 配置参数\n */\nfunction executeCapitalSettlement(stockInfo, translog, capitalData, options) {\n    // debug(`执行清算 %o`, translog);\n    if (_.isEmpty(translog)) return false;\n    // 如果非固定头寸，检查当前提供的交易余额是否可执行\n    if (!options.fixCash && translog.total + capitalData.balance < 0) {\n        debug(\n            `账户余额${capitalData.balance}不足(${\n                translog.total\n            })，无法完成清算，交易取消! 交易信息: ${\n                translog.type === \"buy\" ? \"买入\" : \"卖出\"\n            }${stockInfo.ts_code} ${translog.count}股，价格${\n                translog.price\n            }，共计${translog.total}元[含佣金${translog.commission}元，过户费${\n                translog.fee\n            }，印花税${translog.duty}元]`\n        );\n        return false;\n    }\n\n    // 处理交易信息\n    capitalData.balance += translog.total;\n    // 如果当前买入，stock中放置持股信息和买入交易日志，只有卖出发生时才合并生成一条交易记录，包含两个部分\n    if (translog.type === \"buy\") {\n        capitalData.stocks.push({\n            transeq: translog.transeq,\n            count: translog.count,\n            price: translog.price,\n            buy: translog,\n        });\n    } else {\n        let stock;\n        for (let i = 0; i < capitalData.stocks.length; i++) {\n            if (capitalData.stocks[i].transeq === translog.transeq) {\n                stock = capitalData.stocks[i];\n                capitalData.stocks.splice(i, 1);\n                break;\n            }\n        }\n        if (!stock) {\n            debug(\n                `没有找到要执行的交易序号：${translog.transeq}, %o`,\n                capitalData.stocks\n            );\n            return false;\n        }\n\n        let settledlog = {\n            transeq: stock.transeq,\n            tradeDate: translog.date,\n            profit: stock.buy.total + translog.total,\n            income: translog.count * translog.price - stock.count * stock.price,\n            buy: stock.buy,\n            sell: translog,\n        };\n        // capitalData.stock = {\n        //     //info: null,\n        //     count: 0,\n        //     price: 0,\n        // };\n        capitalData.transactions.push(settledlog);\n    }\n    // debug(\"完成清算！\");\n    return true;\n}\n\nexport default {\n    executeTransaction,\n    executeCapitalSettlement,\n};\n","import _ from \"lodash\";\nimport { formatFxstr } from \"./util\";\nimport debugpkg from \"debug\";\n\nconst debug = debugpkg(\"transaction\");\n\n/**\n * 创建指定日期和股票信息的卖出交易\n * @param {*} stockInfo\n * @param {*} tradeDate\n * @param {*} tradeDateIndex\n * @param {*} count\n * @param {*} price\n * @param {*} memo\n */\nfunction createSellTransaction(\n    stockInfo,\n    tradeDate,\n    tradeDateIndex,\n    count,\n    price,\n    methodType,\n    memo\n) {\n    // 计算费用\n    let total = calculateTransactionFee(false, stockInfo, count, price);\n    // 创建卖出交易记录\n    return {\n        date: tradeDate,\n        dateIndex: tradeDateIndex,\n        type: \"sell\",\n        count,\n        price,\n        total: total.total,\n        amount: total.amount,\n        fee: total.fee,\n        commission: total.commission,\n        duty: total.duty,\n        methodType,\n        memo,\n    };\n}\n\n/**\n * 构建买入交易信息\n * @param {*} stockInfo 股票信息\n * @param {*} tradeDate 交易日期\n * @param {*} tradeDateIndex 交易日期索引（方便用于计算交易日数）\n * @param {*} balance 可用余额\n * @param {*} price 买入价格\n * @param {*} memo 交易备注\n */\nfunction createBuyTransaction(\n    stockInfo,\n    tradeDate,\n    tradeDateIndex,\n    balance,\n    price,\n    methodType,\n    memo\n) {\n    // 计算费用\n    let count = parseInt(balance / price / 100) * 100;\n    // 最小交易单位为1手，资金不足放弃！\n    if (count < 100) return;\n    let total = calculateTransactionFee(true, stockInfo, count, price);\n    while (total.total + balance < 0) {\n        count -= 100;\n        if (count < 100) return;\n        total = calculateTransactionFee(true, stockInfo, count, price);\n    }\n    // 创建买入交易记录\n    return {\n        date: tradeDate,\n        dateIndex: tradeDateIndex,\n        type: \"buy\",\n        count: count,\n        price,\n        total: total.total,\n        amount: total.amount,\n        fee: total.fee,\n        commission: total.commission,\n        duty: total.duty,\n        methodType,\n        memo,\n    };\n}\n\n/**\n * 计算交易价格和费用\n * @param {boolean}} buy 买卖标记\n * @param {*} stockInfo 股票信息\n * @param {*} count 买卖数量\n * @param {*} price 买卖单价\n */\nfunction calculateTransactionFee(buy, stockInfo, count, price) {\n    let amount = count * price;\n    let commission = (amount * 0.25) / 1000;\n    let fee = 0.0;\n    let duty = 0.0;\n    if (stockInfo.exchange === \"SSE\") {\n        // 上海，过户费千分之0.2\n        fee += (amount * 0.02) / 1000;\n    } else if (stockInfo.exchange === \"SZSE\") {\n        // 深圳，无\n    }\n    // 印花税，仅对卖方收取\n    if (!buy) {\n        duty += (amount * 1) / 1000;\n    }\n\n    let total = 0.0;\n    if (buy) {\n        total = 0 - (amount + commission + fee + duty);\n    } else {\n        total = amount - commission - fee - duty;\n    }\n\n    return { total, amount, commission, fee, duty };\n}\n\nfunction parseCapitalReports(capitalData) {\n    if (_.isEmpty(capitalData)) return;\n    // 账户信息中主要需分析交易过程，正常都是为一次买入，一次卖出，这样作为一组交易，获得一次盈利结果\n    let count = capitalData.transactions.length;\n    let count_win = 0;\n    let total_win = 0;\n    let count_loss = 0;\n    let total_loss = 0;\n    let total_profit = 0;\n    let total_fee = 0;\n    let max_profit = 0;\n    let max_loss = 0;\n    let average_profit = 0;\n    let average_win = 0;\n    let average_loss = 0;\n    let max_wintimes = 0; // 连续盈利次数\n    let max_losstimes = 0; // 连续亏损次数\n    let max_windays = 0;\n    let max_lossdays = 0;\n    let average_windays = 0;\n    let average_lossdays = 0;\n    // {times: 总次数, win_times: 盈利次数, loss_times: 损失次数}\n    let selltypes = {};\n    //let selltype_times = {};\n\n    // 收益率：表示单位成本的收入比例\n    let ror_win = 0;\n    let ror_loss = 0;\n    let ror = 0;\n\n    let tmp_cost = 0;\n    let tmp_cost_win = 0;\n    let tmp_cost_loss = 0;\n\n    let currentType = 0;\n    let tmp_times = 0;\n    let tmp_windays = 0;\n    let tmp_lossdays = 0;\n    for (let log of capitalData.transactions) {\n        let days = log.sell.dateIndex - log.buy.dateIndex + 1;\n\n        let selltype = selltypes[log.sell.methodType];\n        if (!selltype) {\n            selltypes[log.sell.methodType] = {\n                times: 0,\n                win_times: 0,\n                loss_times: 0,\n            };\n        }\n        selltypes[log.sell.methodType].times += 1;\n\n        if (log.profit >= 0) {\n            count_win++;\n            total_win += log.profit;\n            tmp_cost_win += -log.buy.total;\n            if (max_profit < log.profit) max_profit = log.profit;\n\n            tmp_windays += days;\n            if (max_windays < days) max_windays = days;\n\n            // 连续计数\n            if (currentType === 1) {\n                tmp_times++;\n            } else {\n                if (currentType === -1) {\n                    if (max_losstimes < tmp_times) max_losstimes = tmp_times;\n                }\n                // 初始化\n                currentType = 1;\n                tmp_times = 1;\n            }\n\n            selltypes[log.sell.methodType].win_times += 1;\n        } else {\n            count_loss++;\n            total_loss += log.profit;\n            tmp_cost_loss += -log.buy.total;\n            if (max_loss > log.profit) max_loss = log.profit;\n\n            tmp_lossdays += days;\n            if (max_lossdays < days) max_lossdays = days;\n\n            // 连续计数\n            if (currentType === -1) {\n                tmp_times++;\n            } else {\n                if (currentType === 1) {\n                    if (max_wintimes < tmp_times) max_wintimes = tmp_times;\n                }\n                // 初始化\n                currentType = -1;\n                tmp_times = 1;\n            }\n\n            selltypes[log.sell.methodType].loss_times += 1;\n        }\n\n        total_profit += log.profit;\n        total_fee +=\n            log.buy.commission +\n            log.buy.fee +\n            log.buy.duty +\n            (log.sell.commission + log.sell.fee + log.sell.duty);\n        tmp_cost += -log.buy.total;\n    }\n\n    if (currentType === 1) {\n        if (max_wintimes < tmp_times) max_wintimes = tmp_times;\n    } else if (currentType === -1) {\n        if (max_losstimes < tmp_times) max_losstimes = tmp_times;\n    }\n\n    average_profit = total_profit / count;\n    average_win = total_win / count_win;\n    average_loss = -total_loss / count_loss;\n\n    average_windays = Number((tmp_windays / count_win).toFixed(1));\n    average_lossdays = Number((tmp_lossdays / count_loss).toFixed(1));\n\n    ror = total_profit / tmp_cost;\n    ror_win = total_win / tmp_cost_win;\n    ror_loss = total_loss / tmp_cost_loss;\n\n    return {\n        count,\n        total_profit,\n        total_fee,\n        count_win,\n        total_win,\n        count_loss,\n        total_loss,\n        max_profit,\n        max_loss,\n        average_profit,\n        average_win,\n        average_loss,\n        max_wintimes,\n        max_losstimes,\n        max_windays,\n        max_lossdays,\n        average_windays,\n        average_lossdays,\n        selltypes,\n\n        ror,\n        ror_win,\n        ror_loss,\n    };\n}\n\nfunction showCapitalReports(log, capitalData) {\n    log(\n        `******************************************************************************************`\n    );\n    // log(\n    //     \"*                                                                                                                      *\"\n    // );\n    if (capitalData.stocks && capitalData.stocks.length > 0) {\n        let stockvalue = 0;\n        for (let stock of capitalData.stocks) {\n            stockvalue += stock.count * stock.price;\n        }\n        log(\n            `  账户价值 ${formatFxstr(\n                capitalData.balance + stockvalue\n            )}元  【余额 ${formatFxstr(\n                capitalData.balance\n            )}元, 持股: ${formatFxstr(stockvalue)}元】`\n        );\n    } else {\n        log(`  账户余额 ${formatFxstr(capitalData.balance)}元`);\n    }\n\n    let capitalResult = parseCapitalReports(capitalData);\n    // log(``);\n    log(\n        `  总净利润：${formatFxstr(capitalResult.total_profit)},  收益率 ${(\n            capitalResult.ror * 100\n        ).toFixed(2)}%`\n    );\n    log(\n        `  毛利润： ${formatFxstr(\n            capitalResult.total_win\n        )},  总亏损：${formatFxstr(capitalResult.total_loss)}`\n    );\n    log(\n        `  盈利收益率： ${(capitalResult.ror_win * 100).toFixed(\n            2\n        )}%,  亏损收益率：${(capitalResult.ror_loss * 100).toFixed(2)}%`\n    );\n    log(\"\");\n    log(\n        `  总交易次数： ${capitalResult.count},  利润率：${(\n            (capitalResult.count_win * 100) /\n            capitalResult.count\n        ).toFixed(1)}%`\n    );\n    log(\n        `  总盈利次数： ${capitalResult.count_win},  总亏损次数：${capitalResult.count_loss}`\n    );\n    log(\"\");\n    log(\n        `  最大单笔盈利： ${formatFxstr(\n            capitalResult.max_profit\n        )},  最大单笔亏损：${formatFxstr(capitalResult.max_loss)}`\n    );\n    log(\n        `  平均盈利： ${formatFxstr(\n            capitalResult.average_win\n        )},  平均亏损：${formatFxstr(capitalResult.average_loss)}`\n    );\n    log(\n        `  平均盈利/平均亏损： ${(\n            capitalResult.average_win / capitalResult.average_loss\n        ).toFixed(2)},  平均每笔总盈利：${formatFxstr(\n            capitalResult.average_profit\n        )}`\n    );\n    log(\"\");\n    log(\n        `  最多连续盈利次数： ${capitalResult.max_wintimes},  最多连续亏损次数：${capitalResult.max_losstimes}`\n    );\n    log(\n        `  盈利最多持有天数： ${capitalResult.max_windays},  亏损最多持有天数：${capitalResult.max_lossdays}`\n    );\n    log(\n        `  盈利平均持有天数： ${capitalResult.average_windays},  亏损平均持有天数：${capitalResult.average_lossdays}`\n    );\n\n    log(\"\");\n    for (let methodType in capitalResult.selltypes) {\n        let selltype = capitalResult.selltypes[methodType];\n        log(\n            `  卖出类型${methodType} 共${selltype.times}次,  盈利${selltype.win_times}次， 损失${selltype.loss_times}次`\n        );\n    }\n    // log(\n    //     \"*                                                                                                                      *\"\n    // );\n    log(\n        `******************************************************************************************`\n    );\n    log(\"\");\n}\n\nfunction showTransactions(log, capitalData) {\n    log(`  交易日志分析\n******************************************************************************************`);\n    for (let translog of capitalData.transactions) {\n        log(logTransaction(translog));\n    }\n    if (capitalData.stock && capitalData.stock.count > 0) {\n        let holdlog = { buy: capitalData.stock.buy };\n        log(logTransaction(holdlog));\n    }\n    log(\n        `******************************************************************************************`\n    );\n}\n\n// settledlog = {\n//     transeq: 交易序号\n//     tradeDate: translog.tradeDate,\n//     profit: capitalData.stock.buy.total + translog.total,\n//     income:\n//         translog.count * translog.price -\n//         capitalData.stock.count * capitalData.stock.price,\n//     buy: capitalData.stock.buy,\n//     sell: translog,\n// };\n// trans: {\n// date: tradeDate.format(\"YYYYMMDD\"),\n// dateIndex: tradeDateIndex,\n// type: \"sell\",\n// count,\n// price,\n// total: total.total,\n// amount: total.amount,\n// fee: total.fee,\n// commission: total.commission,\n// duty: total.duty,\n// methodType,\n// memo,\n// }\nfunction logTransaction(translog) {\n    if (!translog) return \"\";\n    let buy = translog.buy;\n    let sell = translog.sell;\n    if (sell) {\n        return `收入：${formatFxstr(translog.profit)}, 持有 ${\n            sell.dateIndex - buy.dateIndex + 1\n        }天，盈利 ${(-(translog.profit * 100) / buy.total).toFixed(2)}%, ${\n            translog.transeq\n        }\n       [买入 ${buy.date}, ${formatFxstr(buy.price)}, ${\n            buy.count\n        }, ${formatFxstr(buy.total)}, ${buy.transeq}] \n       [卖出 ${sell.date}, ${formatFxstr(sell.price)}, ${\n            sell.count\n        }, ${formatFxstr(sell.total)}, ${sell.methodType}, ${sell.memo}, ${\n            sell.transeq\n        }]`;\n    } else {\n        // 持有未卖出\n        return `收入：---, 持有 ---天，盈利 ---\n       [买入 ${buy.date}, ${formatFxstr(buy.price)}, ${\n            buy.count\n        }, ${formatFxstr(buy.total)}]`;\n    }\n}\n\nexport default {\n    createSellTransaction,\n    createBuyTransaction,\n    calculateTransactionFee,\n    parseCapitalReports,\n    showCapitalReports,\n    showTransactions,\n};\n","import moment from \"moment\";\nimport CG from \"console-grid\";\nimport { formatFxstr } from \"./util\";\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"reports\");\n\nfunction parseWorkdayReports(transactions) {\n    if (!transactions || transactions.length <= 0) return;\n    // 报告包含5+1行信息，1-5对应周一到周五的信息，0表示汇总\n    // 每行信息包括：count(交易次数), win_ratio(盈利比例)，win(平均盈利金额)，\n    //      loss_ratio(亏损比例) ，loss（平均亏损金额），ratio_winloss(盈利亏损比),\n    //      average(平均交易规模), max_loss（最大亏损），profit(利润)\n    let results = [\n        {\n            day: \"\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周一\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周二\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周三\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周四\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周五\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n    ];\n\n    for (let trans of transactions) {\n        let buy = trans.buy;\n        // let sell = trans.sell;\n        let date = moment(buy.date, \"YYYYMMDD\");\n        let day = date.day();\n        if (day < 1 && day > 5) {\n            // 超出了周一～周五的范围，跳过这个日期\n            debug(`${buy.tradeDate}交易超出星期范围：${day}, %o`, trans);\n            continue;\n        }\n\n        let days = [0, day];\n        // console.log(`%o`, days);\n        // console.log(\n        //     `%o, ${buy.tradeDate}, ${date}, ${day}, %o %o`,\n        //     trans,\n        //     days,\n        //     results\n        // );\n        for (let index of days) {\n            let res = results[index];\n            res.count++;\n            res.profit += trans.profit;\n            if (trans.profit >= 0) {\n                res.count_win++;\n                res.win += trans.profit;\n                if (res.max_win < trans.profit) res.max_win = trans.profit;\n            } else {\n                res.count_loss++;\n                res.loss += trans.profit;\n                if (res.max_loss > trans.profit) res.max_loss = trans.profit;\n            }\n            // console.log(`${index}, %o`, res);\n        }\n    }\n    for (let res of results) {\n        res.win_ratio = res.count_win / res.count;\n        res.win = res.win / res.count_win;\n        res.loss_ratio = res.count_loss / res.count;\n        res.loss = res.loss / res.count_loss;\n        res.ratio_winloss = res.win / res.loss;\n        res.average = res.profit / res.count;\n    }\n    return results;\n}\n\nfunction showWorkdayReports(log, transactions) {\n    let reports = parseWorkdayReports(transactions);\n    // console.log(\"%o\", reports);\n\n    //     let days = [\"总计\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\"];\n    //     log(`\n    // 工作日    交易次数    盈利比例    平均盈利    亏损比例    平均亏损    盈亏比    平均利润    最大亏损    利润`);\n    //     for (let report of reports) {\n    //         log(\n    //             `${report.day}       ${report.count}          ${(\n    //                 report.win_ratio * 100\n    //             ).toFixed(1)}%    ${report.win.toFixed(2)}    ${(\n    //                 report.loss_ratio * 100\n    //             ).toFixed(1)}%    ${report.loss.toFixed(\n    //                 2\n    //             )}    ${report.ratio_winloss.toFixed(\n    //                 2\n    //             )}    ${report.average.toFixed(2)}    ${report.max_loss.toFixed(\n    //                 2\n    //             )}    ${report.profit.toFixed(2)}`\n    //         );\n    //     }\n\n    // 采用console-grid打印格式\n    let grid = new CG();\n    let CGS = CG.Style;\n    let columns = [\n        { id: \"workday\", name: \"日期\", type: \"string\", align: \"left\" },\n        { id: \"count\", name: \"交易次数\", type: \"number\", align: \"right\" },\n        { id: \"win_ratio\", name: \"盈利比例\", type: \"number\", align: \"right\" },\n        { id: \"win_average\", name: \"平均盈利\", type: \"number\", align: \"right\" },\n        { id: \"loss_ratio\", name: \"亏损比例\", type: \"number\", align: \"right\" },\n        {\n            id: \"loss_average\",\n            name: \"平均亏损\",\n            type: \"number\",\n            align: \"right\",\n        },\n        { id: \"ratio_winloss\", name: \"盈亏比\", type: \"number\", align: \"right\" },\n        {\n            id: \"profit_average\",\n            name: \"平均利润\",\n            type: \"number\",\n            align: \"right\",\n        },\n        { id: \"max_loss\", name: \"最大亏损\", type: \"number\", align: \"right\" },\n        { id: \"profit\", name: \"利润\", type: \"number\", align: \"right\" },\n    ];\n    let rows = [];\n    for (let report of reports) {\n        rows.push({\n            workday:\n                report.win_ratio > 0.5 && report.profit >= 0\n                    ? CGS.red(report.day)\n                    : report.day,\n            count: report.count,\n            win_ratio:\n                report.win_ratio >= 0.5\n                    ? CGS.red(`${(report.win_ratio * 100).toFixed(1)}%`)\n                    : `${(report.win_ratio * 100).toFixed(1)}%`, //CGS.green\n            win_average: `${formatFxstr(report.win)}`,\n            loss_ratio:\n                report.loss_ratio >= 0.5\n                    ? CGS.green(`${(report.loss_ratio * 100).toFixed(1)}%`)\n                    : `${(report.loss_ratio * 100).toFixed(1)}%`,\n            loss_average: `${formatFxstr(report.loss)}`,\n            ratio_winloss:\n                report.ratio_winloss < -1\n                    ? CGS.cyan(`${(-report.ratio_winloss).toFixed(2)}`)\n                    : `${(-report.ratio_winloss).toFixed(2)}`,\n            profit_average:\n                report.average >= 0\n                    ? CGS.red(`${formatFxstr(report.average)}`)\n                    : CGS.green(`${formatFxstr(report.average)}`),\n            max_loss: `${formatFxstr(report.max_loss)}`,\n            profit:\n                report.profit >= 0\n                    ? CGS.red(`${report.profit.toFixed(2)}`)\n                    : CGS.green(`${report.profit.toFixed(2)}`),\n        });\n    }\n    let data = {\n        option: {},\n        columns,\n        rows,\n    };\n    grid.render(data);\n\n    // 采用console-table-printer库打印格式\n    // const p = new Table({\n    //     columns: [\n    //         { name: \"workday\", alignment: \"center\" },\n    //         { name: \"count\", alignment: \"right\" },\n    //         { name: \"win ratio\", alignment: \"right\" },\n    //         { name: \"win/trade\", alignment: \"right\" },\n    //         { name: \"loss ratio\", alignment: \"right\" },\n    //         { name: \"loss/trade\", alignment: \"right\" },\n    //         { name: \"ratio win/loss\", alignment: \"right\" },\n    //         { name: \"profit/trade\", alignment: \"right\" },\n    //         { name: \"max loss\", alignment: \"right\" },\n    //         { name: \"profit\", alignment: \"right\" },\n    //     ],\n    // });\n    // for (let report of reports) {\n    //     p.addRow(\n    //         {\n    //             workday: report.day,\n    //             count: report.count,\n    //             \"win ratio\": `${(report.win_ratio * 100).toFixed(1)}%`,\n    //             \"win/trade\": `${report.win.toFixed(2)}`,\n    //             \"loss ratio\": `${(report.loss_ratio * 100).toFixed(1)}%`,\n    //             \"loss/trade\": `${report.loss.toFixed(2)}`,\n    //             \"ratio win/loss\": `${(-report.ratio_winloss).toFixed(2)}`,\n    //             \"profit/trade\": `${report.average.toFixed(2)}`,\n    //             \"max loss\": `${report.max_loss.toFixed(2)}`,\n    //             profit: `${report.profit.toFixed(2)}`,\n    //         },\n    //         { color: report.win_ratio > 0.5 ? \"red\" : \"green\" }\n    //     );\n    // }\n    // p.printTable();\n}\n\nexport { parseWorkdayReports, showWorkdayReports };\n\n//\n// {\n//     transeq: stock.transeq,\n//     tradeDate: translog.tradeDate,\n//     profit: stock.buy.total + translog.total,\n//     income: translog.count * translog.price - stock.count * stock.price,\n//     buy: stock.buy,\n//     sell: translog,\n// }\n// transaction\n// {\n//     date: tradeDate,\n//     dateIndex: tradeDateIndex,\n//     type: \"buy\",\n//     count: count,\n//     price,\n//     total: total.total,\n//     amount: total.amount,\n//     fee: total.fee,\n//     commission: total.commission,\n//     duty: total.duty,\n//     methodType,\n//     memo,\n// }\n","import {\n    readStockList,\n    readStockData,\n    stockDataNames,\n} from \"@wt/lib-wtda-query\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport debugpkg from \"debug\";\n\nimport { formatFxstr } from \"./util\";\n\n// import stoploss from \"./stoploss\";\n// import mmb from \"./momentum-breakthrough\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\nimport * as reports from \"./reports\";\n\nconst log = console.log;\nconst debug = debugpkg(\"sim\");\n\nfunction showOptionsInfo(options) {\n    let buys = \"\";\n    let usedRules = {};\n    for (let rule of options.rules.buy) {\n        buys += `${rule.name}, `;\n        if (!(rule.label in usedRules)) {\n            usedRules[rule.label] = rule;\n        }\n    }\n\n    let sells = \"\";\n    for (let rule of options.rules.sell) {\n        sells += `${rule.name}, `;\n        if (!(rule.label in usedRules)) {\n            usedRules[rule.label] = rule;\n        }\n    }\n\n    let rules_desc = \"\";\n    for (let label in usedRules) {\n        rules_desc += usedRules[label].showOptions(options);\n    }\n\n    console.log(\n        `初始资金:        ${formatFxstr(options.initBalance)}元 \n测试交易资金模式:  ${options.fixCash ? \"固定头寸\" : \"累计账户\"}\n测试数据周期: ${options.startDate}\n\n规则：\n买入模型：${buys}\n卖出模型：${sells}\n\n${rules_desc}\n`\n    );\n}\n\nasync function simulate(options) {\n    // 显示目前的配置模拟信息\n    showOptionsInfo(options);\n\n    // 首先根据设置获得列表，列表内容为需要进行算法计算的各个股票\n    //  TODO: 这里先读取全部的列表\n    let stockListData = await readStockList();\n    if (!stockListData || !stockListData.data) {\n        log(`没有读取到股票列表，无法处理日线数据`);\n        return;\n    }\n    let stockList = stockListData.data;\n    // 重新过滤可用的\n    stockList = await filterStockList(stockList, options);\n    log(`算法执行 ${stockList && stockList.length} 条数据`);\n    // data存放股票列表的基本信息：\n    // {\n    //      ts_code: '000001.SZ', symbol: '000001', name: '平安银行',\n    //      market: '主板', exchange: 'SZSE',\n    //      area: '深圳', industry: '银行', fullname: '平安银行股份有限公司',\n    //      enname: 'Ping An Bank Co., Ltd.', curr_type: 'CNY',\n    //      list_status: 'L', list_date: '19910403', delist_date: null, is_hs: 'S'\n    // }\n    // this.log(`%o`, stockList[0]);\n    // 后续的执行为列表的循环计算，这里的算法因为主要是CPU计算类型，只有输入和输出部分有I/O运算，因此不考虑\n\n    log(\"\");\n    // 下一步开始按照给出的数据循环进行处理\n    for (let stockItem of stockList) {\n        // this.log(`处理数据：%o`, stockItem);\n\n        // 首先读取日线信息\n        let stockData = await readStockData(\n            stockDataNames.daily,\n            stockItem.ts_code\n        );\n        // 准备资金账户数据\n        let capitalData = {\n            info: stockItem,\n            balance: options.fixCash ? 0 : options.initBalance, // 初始资金\n            stocks: [], // 持有的股票信息，每次买入单独一笔记录，分别进行处理，结构{ count: 0, price: 0, buy: transaction }, // 持有股票信息\n            transactions: [], // 交易记录 {tradeDate: 完成日期, profit: 利润, income: 收入, buy: transaction, sell: transaction}\n            //transaction { date: , count: 交易数量, price: 交易价格, total: 总金额, amount: 总价, fee: 交易费用, memo: 备注信息 }\n            _transeq: 0, // 当前交易序号，获取后要自己增加，对应一次股票的买卖使用同一个序号\n        };\n        if (stockData) {\n            log(\n                `[${stockItem.ts_code}]${\n                    stockItem.name\n                } 【数据更新时间：${moment(stockData.updateTime).format(\n                    \"YYYY-MM-DD HH:mm\"\n                )}】`\n            );\n            // 日线数据条数 ${\n            //     stockData.data && stockData.data.length\n            // }, 从${stockData.startDate}到${\n            //     stockData.endDate\n            // }，\n\n            // 首先过滤历史数据，这里将日线数据调整为正常日期从历史到现在\n            stockData = await filterStockData(stockData);\n\n            // 全部数据调整为前复权后再执行计算\n            calculatePrevAdjPrice(stockData);\n\n            // 开始按照日期执行交易算法\n            let startDate = moment(options.startDate, \"YYYYMMDD\");\n            let currentDate = null;\n            for (let index = 0; index < stockData.data.length; index++) {\n                let daily = stockData.data[index];\n                let tradeDate = moment(daily.trade_date, \"YYYYMMDD\");\n                if (_.isEmpty(currentDate)) {\n                    if (startDate.isAfter(tradeDate)) {\n                        continue;\n                    }\n                    debug(\n                        `找到开始日期，开始执行算法！${index}, ${daily.trade_date}`\n                    );\n                } else {\n                    debug(`执行算法！${index}, ${daily.trade_date}`);\n                }\n                currentDate = tradeDate;\n                // this.log(`%o`, engine);\n                // let trans =\n                await engine.executeTransaction(\n                    index,\n                    stockData.data,\n                    capitalData,\n                    options\n                );\n            }\n\n            trans.showCapitalReports(log, capitalData);\n            if (options.showTrans) {\n                trans.showTransactions(log, capitalData);\n            }\n            if (options.showWorkdays) {\n                reports.showWorkdayReports(log, capitalData.transactions);\n            }\n        } else {\n            log(\n                `[${stockItem.ts_code}]${stockItem.name} 没有日线数据，请检查！`\n            );\n        }\n    }\n}\n\n/**\n * 将日线数据中的历史价位根据复权因子全部处理为前复权结果，方便后续计算\n *\n * @param {*} dailyData 日线数据\n * @param {int} digits 保留位数\n */\nfunction calculatePrevAdjPrice(dailyData, digits = 2) {\n    if (dailyData && dailyData.data && dailyData.data.length > 0) {\n        dailyData.data.forEach((item) => {\n            if (item.prevadj_factor) {\n                item.open = Number(\n                    (item.open * item.prevadj_factor).toFixed(digits)\n                );\n                item.close = Number(\n                    (item.close * item.prevadj_factor).toFixed(digits)\n                );\n                item.high = Number(\n                    (item.high * item.prevadj_factor).toFixed(digits)\n                );\n                item.low = Number(\n                    (item.low * item.prevadj_factor).toFixed(digits)\n                );\n                item.pre_close = Number(\n                    (item.pre_close * item.prevadj_factor).toFixed(digits)\n                );\n                item.change = Number(\n                    (item.change * item.prevadj_factor).toFixed(digits)\n                );\n            }\n        });\n    }\n}\n\n/**\n * 这里定义一个过滤列表的接口方法，利用options来过滤后续使用的股票\n * 返回为一个符合条件的列表\n * 这里后续考虑调整一下接口定义，目前暂时简化处理\n */\nasync function filterStockList(stockList, options) {\n    // let retStockList = [];\n    return options.selectedStocks.map((tsCode) => {\n        let tmp = stockList.filter((item) => {\n            return item.ts_code === tsCode;\n        });\n        // console.log(`${tmp && tmp.length}, %o`, tmp[0]);\n        return tmp[0];\n    });\n}\n\n/**\n * 这里提供对单个数据的调整，主要应当是一些额外的数据计算添加，周期过滤等\n *\n * @param {*} stockData 股票日线数据对象\n * @param {*} options 数据过滤条件\n */\nasync function filterStockData(stockData, options) {\n    stockData.data.reverse();\n    return stockData;\n}\n\nexport default simulate;\n","import {\n    readStockList,\n    readStockData,\n    stockDataNames,\n} from \"@wt/lib-wtda-query\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport debugpkg from \"debug\";\n\nimport { formatFxstr } from \"./util\";\n\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\n\nconst log = console.log;\nconst debug = debugpkg(\"search\");\n\nfunction showOptionsInfo(options) {\n    console.log(\n        `测试数据周期: ${options.startDate}\n\n模型：${options.rule}\n\n${options.rule.showOptions(options)}\n`\n    );\n}\n\nasync function search(options) {\n    // 显示目前的配置模拟信息\n    showOptionsInfo(options);\n\n    // 首先根据设置获得列表，列表内容为需要进行算法计算的各个股票\n    let stockListData = await readStockList();\n    if (!stockListData || !stockListData.data) {\n        log(`没有读取到股票列表，无法处理日线数据`);\n        return;\n    }\n    let stockList = stockListData.data;\n    // 重新过滤可用的\n    stockList = await filterStockList(stockList, options);\n    log(`算法执行 ${stockList && stockList.length} 条数据`);\n\n    log(\"\");\n    // 下一步开始按照给出的数据循环进行处理\n    for (let stockItem of stockList) {\n        // this.log(`处理数据：%o`, stockItem);\n\n        // 首先读取日线信息\n        let stockData = await readStockData(\n            stockDataNames.daily,\n            stockItem.ts_code\n        );\n\n        if (stockData) {\n            log(\n                `[${stockItem.ts_code}]${\n                    stockItem.name\n                } 【数据更新时间：${moment(stockData.updateTime).format(\n                    \"YYYY-MM-DD HH:mm\"\n                )}】`\n            );\n\n            // 首先过滤历史数据，这里将日线数据调整为正常日期从历史到现在\n            stockData = await filterStockData(stockData);\n\n            // 全部数据调整为前复权后再执行计算\n            calculatePrevAdjPrice(stockData);\n\n            // 开始按照日期执行交易算法\n            let startDate = moment(options.startDate, \"YYYYMMDD\");\n            let currentDate = null;\n            for (let index = 0; index < stockData.data.length; index++) {\n                let daily = stockData.data[index];\n                let tradeDate = moment(daily.trade_date, \"YYYYMMDD\");\n                if (_.isEmpty(currentDate)) {\n                    if (startDate.isAfter(tradeDate)) {\n                        continue;\n                    }\n                    debug(\n                        `找到开始日期，开始查找匹配模型数据！${index}, ${daily.trade_date}`\n                    );\n                } else {\n                    debug(`执行算法！${index}, ${daily.trade_date}`);\n                }\n                currentDate = tradeDate;\n\n                let matched = options.rule.check(\n                    index,\n                    stockData.data,\n                    options\n                );\n                if (matched) {\n                    log(`${matched.memo}`);\n                }\n\n                // await engine.executeTransaction(\n                //     index,\n                //     stockData.data,\n                //     capitalData,\n                //     options\n                // );\n            }\n\n            // engine.showCapitalReports(log, capitalData);\n            // if (options.showTrans) {\n            //     engine.showTransactions(log, capitalData);\n            // }\n            // if (options.showWorkdays) {\n            //     reports.showWorkdayReports(log, capitalData.transactions);\n            // }\n        } else {\n            log(\n                `[${stockItem.ts_code}]${stockItem.name} 没有日线数据，请检查！`\n            );\n        }\n    }\n}\n\n/**\n * 将日线数据中的历史价位根据复权因子全部处理为前复权结果，方便后续计算\n *\n * @param {*} dailyData 日线数据\n * @param {int} digits 保留位数\n */\nfunction calculatePrevAdjPrice(dailyData, digits = 2) {\n    if (dailyData && dailyData.data && dailyData.data.length > 0) {\n        dailyData.data.forEach((item) => {\n            if (item.prevadj_factor) {\n                item.open = Number(\n                    (item.open * item.prevadj_factor).toFixed(digits)\n                );\n                item.close = Number(\n                    (item.close * item.prevadj_factor).toFixed(digits)\n                );\n                item.high = Number(\n                    (item.high * item.prevadj_factor).toFixed(digits)\n                );\n                item.low = Number(\n                    (item.low * item.prevadj_factor).toFixed(digits)\n                );\n                item.pre_close = Number(\n                    (item.pre_close * item.prevadj_factor).toFixed(digits)\n                );\n                item.change = Number(\n                    (item.change * item.prevadj_factor).toFixed(digits)\n                );\n            }\n        });\n    }\n}\n\n/**\n * 这里定义一个过滤列表的接口方法，利用options来过滤后续使用的股票\n * 返回为一个符合条件的列表\n * 这里后续考虑调整一下接口定义，目前暂时简化处理\n */\nasync function filterStockList(stockList, options) {\n    // let retStockList = [];\n    return options.selectedStocks.map((tsCode) => {\n        let tmp = stockList.filter((item) => {\n            return item.ts_code === tsCode;\n        });\n        // console.log(`${tmp && tmp.length}, %o`, tmp[0]);\n        return tmp[0];\n    });\n}\n\n/**\n * 这里提供对单个数据的调整，主要应当是一些额外的数据计算添加，周期过滤等\n *\n * @param {*} stockData 股票日线数据对象\n * @param {*} options 数据过滤条件\n */\nasync function filterStockData(stockData, options) {\n    stockData.data.reverse();\n    return stockData;\n}\n\nexport default search;\n","import _ from \"lodash\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"mmb\");\n\nconst OPTIONS_NAME = \"mmb\";\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {*} tradeDate 交易日期\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkMMBBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    let mmboptions = options && options[OPTIONS_NAME];\n    // 平均波幅的计算日数\n    let N = mmboptions.N;\n    // 波幅突破的百分比\n    let P = mmboptions.P;\n\n    let moment = 0;\n    for (let i = 0; i < N; i++) {\n        if (index - i - 1 >= 0) {\n            let tmp = stockData[index - i - 1];\n            if (mmboptions.mmbType === \"hl\") {\n                moment += tmp.high - tmp.low;\n            } else {\n                moment += tmp.high - tmp.close;\n            }\n        }\n    }\n    moment = moment / N;\n\n    let currentData = stockData[index];\n    // console.log(`跟踪信息： ${stockData.length}, ${index}`, currentData);\n    let targetPrice = currentData.open + moment * P;\n    let tradeDate = stockData[index].trade_date;\n\n    debug(\n        `买入条件检查${tradeDate}: ${targetPrice.toFixed(2)}=${\n            currentData.open\n        }+${moment.toFixed(2)}*${P} [o: ${currentData.open}, h: ${\n            currentData.high\n        }, l: ${currentData.low}, c: ${currentData.close}, d: ${\n            currentData.trade_date\n        }]`\n    );\n    if (currentData.high >= targetPrice && currentData.open <= targetPrice) {\n        // 执行买入交易\n        debug(`符合条件：${tradeDate}`);\n        return trans.createBuyTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            balance,\n            targetPrice,\n            \"mmb\",\n            `动能突破买入 ${targetPrice.toFixed(2)} (=${\n                currentData.open\n            }+${moment.toFixed(2)}*${(P * 100).toFixed(2)}%)`\n        );\n    }\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkMMBSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    // 检查是否符合动能突破买入条件\n    // if (\n    //     !options.nommbsell &&\n    //     !_.isEmpty(\n    //         checkMMBBuyTransaction(\n    //             stockInfo,\n    //             options.initBalance,\n    //             index,\n    //             stockData,\n    //             options\n    //         )\n    //     )\n    // ) {\n    //     // 可以买入，那么当日保持\n    //     return;\n    // }\n\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n    let mmboptions = options && options[OPTIONS_NAME];\n\n    // 目前有持仓，检查是否达到盈利卖出条件\n    if (!mmboptions.nommb1 && currentData.open > stock.price) {\n        // 采用第二天开盘价盈利就卖出的策略\n        debug(\n            `开盘盈利策略符合：${currentData.open.toFixed(\n                2\n            )} (> ${stock.price.toFixed(2)})`\n        );\n        return engine.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            \"mmb1\",\n            `开盘盈利卖出 ${currentData.open} (> ${stock.price.toFixed(2)})`\n        );\n    }\n\n    if (!mmboptions.nommb2) {\n        // 平均波幅的计算日数\n        let N = mmboptions.N;\n        // 止损使用的波幅下降百分比\n        let L = mmboptions.L;\n        // 有持仓，检查是否达到卖出条件\n        // 第一个卖出条件是买入后按照买入价格及波动数据的反向百分比设置\n        let moment = 0;\n        for (let i = 0; i < N; i++) {\n            if (index - i - 1 >= 0) {\n                let tmp = stockData[index - i - 1];\n                if (mmboptions.mmbType === \"hl\") {\n                    moment += tmp.high - tmp.low;\n                } else {\n                    moment += tmp.high - tmp.close;\n                }\n            }\n        }\n        moment = moment / N;\n\n        let targetPrice = currentData.open - moment * L;\n        if (targetPrice <= currentData.open && targetPrice >= currentData.low) {\n            // 执行波动卖出\n            return trans.createSellTransaction(\n                stockInfo,\n                tradeDate,\n                index,\n                stock.count,\n                targetPrice,\n                \"mmb2\",\n                `动能突破卖出：${targetPrice.toFixed(2)} (= ${\n                    currentData.open\n                }-${moment.toFixed(2)}*${L * 100}%)`\n            );\n        }\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${mmb.name}[${mmb.label}] 参数：\n波幅类型 [${options.mmb.mmbType === \"hc\" ? \"最高-收盘\" : \"最高-最低\"}]\n动能平均天数: ${options.mmb.N}\n动能突破买入比例: ${options.mmb.P * 100}%\n动能突破卖出比例: ${options.mmb.L * 100}%\n规则：\n  1. [${options.mmb.nommb1 ? \"🚫\" : \"✅\"}] 开盘盈利锁定\n  2. [${options.mmb.nommb2 ? \"🚫\" : \"✅\"}] 动能向下突破卖出\n`;\n}\n\nlet mmb = {\n    name: \"MMB(动能穿透)\",\n    label: \"mmb\",\n    description: \"动能穿透\",\n    methodTypes: {\n        mmb: \"动能突破买入\",\n        mmb1: \"开盘盈利卖出\",\n        mmb2: \"动能突破卖出\",\n    },\n    checkBuyTransaction: checkMMBBuyTransaction,\n    checkSellTransaction: checkMMBSellTransaction,\n    showOptions,\n};\n\nexport default mmb;\n","// const _ = require(\"lodash\");\nimport _ from \"lodash\";\n// const engine = require(\"./transaction-engine\");\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"stoploss\");\n\nconst OPTIONS_NAME = \"stoploss\";\n\n/**\n * 检查是否需要执行止损\n * @param {*} stocks 持仓信息\n * @param {int} index 交易日索引位置\n * @param {*} stockData 日线数据\n */\nfunction checkStoplossTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let currentData = stockData[index];\n    // 止损最大损失比例\n    let S = options && options[OPTIONS_NAME].S;\n\n    // 这里检查纯粹的百分比止损\n    let tradeDate = currentData.trade_date;\n    let lossPrice = stock.price * (1 - S);\n    debug(\n        `止损检查${tradeDate}: ${currentData.low}] <= ${lossPrice.toFixed(\n            2\n        )} (=${stock.price.toFixed(2)}*(1-${(S * 100).toFixed(2)}%))`\n    );\n    if (currentData.low <= lossPrice) {\n        // 当日价格范围达到止损值\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            lossPrice,\n            \"stoploss\",\n            `止损 ${lossPrice.toFixed(2)} (=${stock.price.toFixed(2)}*(1-${\n                S * 100\n            }%))`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${stoploss.name}[${stoploss.label}] 参数：\n止损比例: ${options.stoploss.S * 100}%\n`;\n}\n\nlet stoploss = {\n    name: \"止损\",\n    label: \"stoploss\",\n    description: \"止损\",\n    methodTypes: {\n        stoploss: \"止损卖出\",\n    },\n    checkSellTransaction: checkStoplossTransaction,\n    showOptions,\n};\n\nexport default stoploss;\n","import _ from \"lodash\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"benchmark\");\n\n/**\n * 基准参数，用于测量正常买入卖出情况下的基准效果\n * 采用的买入策略为开盘买入，第二天收盘卖出；或者止损平仓\n */\nconst RULE_NAME = \"benchmark\";\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    // let bmOptions = options && options[RULE_NAME];\n    let currentData = stockData[index];\n    // console.log(`跟踪信息： ${stockData.length}, ${index}`, currentData);\n    let targetPrice = currentData.open;\n    let tradeDate = stockData[index].trade_date;\n\n    debug(\n        `基准买入：[${tradeDate} price=${targetPrice} open=${currentData.open} close=${currentData.close}]`\n    );\n    return trans.createBuyTransaction(\n        stockInfo,\n        tradeDate,\n        index,\n        balance,\n        targetPrice,\n        RULE_NAME,\n        `基准买入 ${targetPrice.toFixed(2)}`\n    );\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n    let bmoptions = options && options[RULE_NAME];\n    let priceType = bmoptions.sellPrice;\n\n    if (priceType === \"open\") {\n        debug(\n            `基准卖出：[${tradeDate} price=${currentData.open} open=${currentData.open} close=${currentData.close}]`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            priceType,\n            `开盘卖出 ${currentData.open})`\n        );\n    } else if (priceType === \"close\") {\n        debug(\n            `基准卖出：[${tradeDate} price=${currentData.close} open=${currentData.open} close=${currentData.close}]`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            priceType,\n            `收盘卖出 ${currentData.close}`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${benchmark.name}[${benchmark.label}] 参数：\n卖出类型: ${options.benchmark.sellPrice}\n`;\n}\n\nlet benchmark = {\n    name: \"基准\",\n    label: RULE_NAME,\n    description: \"基准测试\",\n    methodTypes: {\n        open: \"开盘卖出\",\n        close: \"收盘卖出\",\n    },\n    checkBuyTransaction,\n    checkSellTransaction,\n    showOptions,\n};\n\nexport default benchmark;\n","import _ from \"lodash\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"outsideday\");\n\n/**\n * 外包日模式，主要针对买入定义\n */\nconst RULE_NAME = \"outsideday\";\n\n/**\n * 检查外包日买入条件\n * 1. 前一天为外包日结构，T-1， T-2两天的价格要求满足，T-1价格范围外包T-2，并且T-1收盘价低于T-2最低价\n * 2. 今日T日的开盘价低于T-1外包日收盘价以下\n *\n * 买入价格定为T-1日收盘价\n *\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    if (index < 2) return;\n    // debug(`外包日买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    // let bmOptions = options && options[RULE_NAME];\n    let data2 = stockData[index - 2];\n    let data1 = stockData[index - 1];\n    let currentData = stockData[index];\n\n    // 外包日条件\n    if (data1.high < data2.high || data1.low > data2.low) return;\n    // 外包日收盘低于前一日最低\n    if (data1.close > data2.low) return;\n    // 今日开盘低于外包日收盘\n    if (currentData.open >= data1.close) return;\n\n    // console.log(`跟踪信息： ${stockData.length}, ${index}`, currentData);\n    let targetPrice = currentData.close; // data1.close;\n    let tradeDate = currentData.trade_date;\n\n    debug(`找到外包日模式：\n    [${tradeDate} open=${currentData.open}, close=${currentData.close}] \n    [${data1.trade_date}: high=${data1.high}, low=${data1.low}, close=${data1.close}]\n    [${data2.trade_date}: high=${data1.high}, low=${data1.low}]\n    `);\n    return trans.createBuyTransaction(\n        stockInfo,\n        tradeDate,\n        index,\n        balance,\n        targetPrice,\n        RULE_NAME,\n        `外包日买入 ${targetPrice.toFixed(2)}`\n    );\n}\n\n// /**\n//  * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n//  *\n//  * @param {*} info 股票信息\n//  * @param {*} stock 持仓信息\n//  * @param {*} index 今日数据索引位置\n//  * @param {*} stockData 日线数据\n//  * @param {*} options 算法参数\n//  */\n// function checkSellTransaction(stockInfo, stock, index, stockData, options) {\n//     if (_.isEmpty(stock) || stock.count <= 0) return;\n\n//     let currentData = stockData[index];\n//     let tradeDate = currentData.trade_date;\n//     let bmoptions = options && options[RULE_NAME];\n//     let priceType = bmoptions.sellPrice;\n\n//     if (priceType === \"open\") {\n//         return engine.createSellTransaction(\n//             stockInfo,\n//             tradeDate,\n//             index,\n//             stock.count,\n//             currentData.open,\n//             priceType,\n//             `开盘卖出 ${currentData.open})`\n//         );\n//     } else if (priceType === \"close\") {\n//         return engine.createSellTransaction(\n//             stockInfo,\n//             tradeDate,\n//             index,\n//             stock.count,\n//             currentData.open,\n//             priceType,\n//             `收盘卖出 ${currentData.close}`\n//         );\n//     }\n// }\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n`;\n}\n\nlet outsideday = {\n    name: \"外包日\",\n    label: RULE_NAME,\n    description: \"外包日买入\",\n    methodTypes: {},\n    checkBuyTransaction,\n    // checkSellTransaction,\n    showOptions,\n};\n\nexport default outsideday;\n","import _ from \"lodash\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"opensell\");\n\nconst OPTIONS_NAME = \"opensell\";\n\n/**\n * 开盘盈利卖出\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n\n    // 目前有持仓，检查是否达到开盘盈利卖出条件\n    if (currentData.open > stock.price) {\n        debug(\n            `开盘盈利策略符合：${currentData.open.toFixed(\n                2\n            )} (> ${stock.price.toFixed(2)})`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            OPTIONS_NAME,\n            `开盘盈利卖出 ${currentData.open} (> ${stock.price.toFixed(2)})`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n`;\n}\n\nlet opensell = {\n    name: \"开盘盈利\",\n    label: OPTIONS_NAME,\n    description: \"开盘盈利卖出\",\n    methodTypes: {},\n    // checkBuyTransaction: checkMMBBuyTransaction,\n    checkSellTransaction,\n    showOptions,\n};\n\nexport default opensell;\n","import _ from \"lodash\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"smashday\");\n\n/**\n * 攻击日模式\n */\nconst RULE_NAME = \"smashday\";\n\n/**\n * 检查指定序号的日期数据是否符合当前模型定义形态\n *\n * @param {int} index 日期序号\n * @param {*} stockData 数据\n * @param {*} options 参数配置\n */\nfunction check(index, stockData, options) {\n    if (index < 1) return;\n    let type = options && options.smashday.type;\n    let currentData = stockData[index];\n    let data1 = stockData[index - 1];\n    let tradeDate = currentData.trade_date;\n\n    if (type === \"smash1\" && currentData.close < data1.low) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"buy\",\n            type: \"smash1\",\n            targetPrice: currentData.high,\n            memo: `突出收盘买入 [${tradeDate} ${currentData.close} < ${data1.low}，小于前一日最低]，在达到今日最大为反转可买入 ${currentData.high}`,\n        };\n    } else if (type === \"smash1\" && currentData.close > data1.high) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"sell\",\n            type: \"smash1\",\n            targetPrice: currentData.low,\n            memo: `突出收盘卖出 [${tradeDate} ${currentData.close} > ${data1.high}，大于前一日最高]，在达到今日最低为反转可卖出 ${currentData.low}`,\n        };\n    } else if (\n        type === \"smash2\" &&\n        currentData.close > data1.close &&\n        (currentData.close - currentData.low) /\n            (currentData.high - currentData.low) <\n            0.25\n    ) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"buy\",\n            type: \"smash2\",\n            targetPrice: currentData.high,\n            memo: `隐藏攻击买入 [${tradeDate} ${currentData.close} > ${data1.close}，收盘上涨，且在今日价格下方25% (${currentData.high}, ${currentData.low})]，在达到今日最高可买入 ${currentData.high}`,\n        };\n    } else if (\n        type === \"smash2\" &&\n        currentData.close < data1.close &&\n        (currentData.close - currentData.low) /\n            (currentData.high - currentData.low) >\n            0.75\n    ) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"sell\",\n            type: \"smash2\",\n            targetPrice: currentData.low,\n            memo: `隐藏攻击卖出 [${tradeDate} ${currentData.close} < ${data1.close}，收盘下跌，且在今日价格上方25% (${currentData.high}, ${currentData.low})]，在达到今日最低可卖出 ${currentData.low}`,\n        };\n    }\n}\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    let buy = options.smashday && options.smashday.buy;\n    let validDays = buy.validDays || 3;\n    for (let i = 0; i < validDays; i++) {\n        let matched = check(index - i, stockData, options);\n        let smashType = buy.type || \"smash1\";\n        let currentData = stockData[index];\n        let tradeDate = currentData.trade_date;\n        let targetPrice = matched.targetPrice;\n        if (matched && matched.trade_date === \"buy\") {\n            if (\n                matched.type === smashType &&\n                currentData.high >= matched.targetPrice\n            ) {\n                debug(\n                    `攻击日为[${matched.date}]，今日满足目标价位：${matched.targetPrice} [${currentData.low}, ${currentData.high}]`\n                );\n                return trans.createBuyTransaction(\n                    stockInfo,\n                    tradeDate,\n                    index,\n                    balance,\n                    targetPrice,\n                    RULE_NAME,\n                    `攻击日[${matched.type}]买入${targetPrice.toFixed(2)}`\n                );\n            }\n        }\n    }\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let sell = options.smashday && options.smashday.sell;\n    let validDays = sell.validDays || 3;\n    for (let i = 0; i < validDays; i++) {\n        let matched = check(index - i, stockData, options);\n        let smashType = sell.type || \"smash1\";\n        let currentData = stockData[index];\n        let tradeDate = currentData.trade_date;\n        let targetPrice = matched.targetPrice;\n        if (matched && matched.trade_date === \"sell\") {\n            if (matched.type === smashType && currentData.low <= targetPrice) {\n                debug(\n                    `攻击日为[${matched.date}]，今日满足目标价位：${targetPrice} [${currentData.low}, ${currentData.high}]`\n                );\n                return trans.createSellTransaction(\n                    stockInfo,\n                    tradeDate,\n                    index,\n                    stock.count,\n                    targetPrice,\n                    RULE_NAME,\n                    `攻击日[${matched.type}]卖出${targetPrice.toFixed(2)}`\n                );\n            }\n        }\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    let buy = options && options.smashday && options.smashday.buy;\n    let sell = options && options.smashday && options.smashday.sell;\n    return `\n模型 ${smashday.name}[${smashday.label}] 参数：\n买入有效期: ${buy.validDays}\n买入类型: ${buy.type}, ${smashday.methodTypes[buy.type]}\n\n卖出有效期: ${sell.validDays}\n卖出类型: ${sell.type}, ${smashday.methodTypes[sell.type]}\n`;\n}\n\nlet smashday = {\n    name: \"攻击日\",\n    label: RULE_NAME,\n    description: \"攻击日模型\",\n    methodTypes: {\n        smash1: \"突出收盘价\",\n        smash2: \"隐藏攻击日\",\n    },\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n};\n\nexport default smashday;\n","import _ from \"lodash\";\n\nconst ORGANIZED = Symbol(\"表示数据是否经过检查和整理\");\n\n/**\n * 对交易数据按照结构进行检查，检查后需要满足\n * 1. 数组结构\n * 2. 交易日期按照时间升序排列，0为最早的数据\n * 3. 如果提供了赋权因子，进行前复权计算\n * 4. 设置ORGANIZED标记为true\n *\n * @param {*} data 交易数据（日线）\n */\nfunction checkTradeData(data, digits = 3) {\n    if (_.isEmpty(data) || data[ORGANIZED]) return data;\n    if (!_.isArray(data)) return data;\n\n    // 检查数据排序，如果是降序，则反过来\n    if (checkOrder(data)) {\n        data.reverse();\n    }\n\n    if (data[0] && data[0].prevadj_factor) {\n        calculatePrevAdjPrice(data, digits);\n    }\n\n    data[ORGANIZED] = true;\n    return data;\n}\n\n/**\n * 将日线数据中的历史价位根据复权因子全部处理为前复权结果，方便后续计算\n *\n * @param {*} dailyData 日线数据\n * @param {int} digits 保留位数\n */\nfunction calculatePrevAdjPrice(dailyData, digits = 3) {\n    if (dailyData && dailyData.length > 0) {\n        dailyData.forEach((item) => {\n            if (item.prevadj_factor) {\n                item.open = toFixed(item.open * item.prevadj_factor, digits);\n                item.close = toFixed(item.close * item.prevadj_factor, digits);\n                item.high = toFixed(item.high * item.prevadj_factor, digits);\n                item.low = toFixed(item.low * item.prevadj_factor, digits);\n                item.pre_close = toFixed(\n                    item.pre_close * item.prevadj_factor,\n                    digits\n                );\n                item.change = toFixed(\n                    item.change * item.prevadj_factor,\n                    digits\n                );\n            }\n        });\n    }\n}\n\nfunction readData(item, prop) {\n    if (_.isFunction(prop)) {\n        return prop(item);\n    } else if (_.isString(prop)) {\n        return item && item[prop];\n    }\n    return item;\n}\n\nfunction toFixed(num, digits = 3) {\n    return Number(num.toFixed(digits));\n}\n\nfunction checkOrder(array) {\n    return (\n        array &&\n        _.isArray(array) &&\n        array.length > 1 &&\n        array[0].trade_date > array[array.length - 1].trade_date\n    );\n}\n\nfunction average(array, index, n, prop, digits = 3) {\n    if (\n        index >= 0 &&\n        array &&\n        Array.isArray(array) &&\n        array.length > index &&\n        n > 0\n    ) {\n        let desc = checkOrder(array);\n\n        let step = desc ? -1 : 1;\n        let lastIndex = index - step * n;\n        if (lastIndex < 0 || lastIndex >= array.length) {\n            return;\n        }\n\n        let i = index;\n        let count = 0;\n        let sum = 0;\n        while (i >= 0 && i < array.length && count < n) {\n            sum += readData(array[i], prop);\n            i -= step;\n            count++;\n        }\n        if (count === n) {\n            return toFixed(sum / n, digits);\n        }\n        // let calcArr = array.slice(index - n + 1, index + 1);\n        // return (\n        //     calcArr\n        //         .map((item, i, all) => {\n        //             return readData(item, prop);\n        //         })\n        //         .reduce((total, item) => {\n        //             return total + item;\n        //         }, 0) / n\n        // );\n    }\n}\n\nfunction ma(array, n, prop, type, digits = 3) {\n    if (type === \"ma\") {\n        return sma(array, n, prop, digits);\n    } else {\n        return ema(array, n, prop, digits);\n    }\n}\n\nfunction sma(array, n, prop, digits = 3) {\n    if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n        let desc = checkOrder(array);\n        let step = desc ? -1 : 1;\n        let i = desc ? array.length - 1 : 0;\n        let index = 0;\n        let ret = [];\n        while (i >= 0 && i < array.length) {\n            ret[index] = average(array, i, n, prop, digits);\n            index++;\n            i += step;\n        }\n        return ret;\n    }\n}\n\nfunction ema(array, n, prop, digits = 3) {\n    if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n        let desc = checkOrder(array);\n        let step = desc ? -1 : 1;\n        let i = desc ? array.length - 1 : 0;\n        let index = 0;\n        let ret = [];\n        let tmp = 0;\n        while (i >= 0 && i < array.length) {\n            if (index === 0) {\n                tmp = readData(array[i], prop);\n            } else {\n                tmp = (2 * readData(array[i], prop) + (n - 1) * tmp) / (n + 1);\n            }\n            ret[index] = toFixed(tmp, digits);\n            index++;\n            i += step;\n        }\n        return ret;\n    }\n}\n\n/**\n * 计算指定数据的TR值\n * @param {*} data 日线数据\n */\nfunction tr(data) {\n    if (data) {\n        return Math.max(\n            data.high - data.low,\n            Math.abs(data.high - data.pre_close),\n            Math.abs(data.pre_close - data.low)\n        );\n    }\n}\n\nfunction ohlc(data) {\n    if (data) {\n        return (data.open + data.high + data.low + data.close) / 4;\n    }\n}\n\n/**\n *\n * @param {Array} array 数据数组\n * @param {number} n 平均天数\n * @param {*} prop 数据属性或转换方法\n * @param {string} type 偏差类型\n * @param {boolean} desc 数据数组是否降序\n * @param {number} digits 小数保留位数\n */\nfunction stdev(array, n, prop, digits = 3) {\n    if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n        let desc = checkOrder(array);\n        let step = desc ? -1 : 1;\n        let i = desc ? array.length - 1 : 0;\n        let index = 0;\n        let ret = [];\n        while (i >= 0 && i < array.length) {\n            let ma = average(array, i, n, prop, digits);\n            let d;\n\n            if (ma) {\n                let sum = 0;\n                let j = i;\n                let count = 0;\n                while (j >= 0 && j < array.length && count < n) {\n                    sum += (readData(array[j], prop) - ma) ** 2;\n                    count++;\n                    j -= step;\n                }\n                d = toFixed(Math.sqrt(sum / (n - 1)), digits);\n            }\n\n            ret[index] = d;\n            index++;\n            i += step;\n        }\n        return ret;\n    }\n}\n\nexport default {\n    average,\n    ma,\n    sma,\n    ema,\n    stdev,\n    tr,\n    ohlc,\n    readData,\n    toFixed,\n    checkTradeData,\n};\n","/**\n * 平均价\n *\n * 参数\n *  type：ma，算术平均； ema，指数移动平均\n *  source: close | ohlc\n */\nimport _ from \"lodash\";\nimport utils from \"./utils\";\n\n/**\n * 计算移动平均，返回ma数据\n * @param {*} tradeData 所有数据\n * @param {*} options 参数，n 平均周期, type 平均类型, digits 保留小数位数\n */\nfunction ma(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    return utils.ma(\n        tradeData,\n        options && options.n,\n        (options && options.source) === \"ohlc\" ? utils.ohlc : \"close\",\n        options && options.type,\n        options && options.digits\n    );\n}\n\nexport default {\n    name: \"均值\",\n    label: \"MA\",\n    description: \"平均收盘价\",\n    calculate: ma,\n};\n","/**\n * ATR 指标，平均真实幅度\n *\n * 参数\n *  n: 表示平均天数\n *  type：表示均值类型，ma 算术平均，ema 指数移动平均\n *\n * TR = max[h-l, abs(h-cp), abs(l-cp)]\n * cp 表示昨日收盘\n *\n * ATR = Sum(TR, n)/n, 表示n天TR的算术平均\n */\n\nimport _ from \"lodash\";\nimport utils from \"./utils\";\n\n/**\n * 计算ATR指标\n * @param {Array} tradeData 数据数组\n * @param {*} options 参数配置，ATR包含n属性\n */\nfunction atr(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    return utils.ma(\n        tradeData,\n        options.n,\n        utils.tr,\n        options && options.type,\n        options && options.digits\n    );\n}\n\nexport default {\n    name: \"ATR\",\n    label: \"平均真实波幅\",\n    description: \"表示在一定周期内价格的最大波动偏离幅度\",\n    calculate: atr,\n};\n","/**\n * Keltner Channel，肯特钠通道\n * 类似于布林带的带状指标，由上中下三条轨道组成\n *\n * 中轨：移动平均线，参数n\n * 上/下轨：移动平均线上下ATR*m距离\n *\n * 参数定义：\n *  n：移动平均天数，默认12，（Squeeze 为20）\n *  m：通道和中轨之间ATR值的倍数，默认1.5\n *  type1：价格移动平均类型，ma 简单移动平均，ema 指数移动平均，默认ema\n *  type2：atr移动平均类型，ma ｜ ema，默认 ma\n *  source: close | ohlc\n */\nimport _ from \"lodash\";\nimport MA from \"./ma\";\nimport ATR from \"./atr\";\nimport utils from \"./utils\";\n\nfunction keltner(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    let ma = MA.calculate(tradeData, {\n        n: options.n,\n        type: options.type1,\n        source: options.source,\n        digits: options.digits,\n    });\n    let atr = ATR.calculate(tradeData, {\n        n: options.n,\n        type: options.type2,\n        digits: options.digits,\n    });\n    let up = [];\n    let down = [];\n    for (let i = 0; i < ma.length; i++) {\n        up[i] = utils.toFixed(ma[i] + options.m * atr[i], options.digits);\n        down[i] = utils.toFixed(ma[i] - options.m * atr[i], options.digits);\n    }\n\n    return [ma, up, down, atr];\n}\n\nexport default {\n    name: \"科特钠通道\",\n    label: \"KC\",\n    description: \"科特钠通道\",\n    calculate: keltner,\n};\n","/**\n * 布林线指标\n *\n * 参数：\n *  n: 移动平均天数\n *  m: 上下轨到移动平均的标准差倍数\n *  source: close | ohlc\n *  ma: 移动平均类型，ma | ema\n *\n */\nimport utils from \"./utils\";\nimport MA from \"./ma\";\n\nfunction boll(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    let ma = MA.calculate(tradeData, {\n        n: options.n,\n        type: options.ma,\n        source: options.source,\n        digits: options.digits,\n    });\n    let stdev = utils.stdev(\n        tradeData,\n        options.n,\n        (options && options.source) === \"ohlc\" ? utils.ohlc : \"close\",\n        options.digits\n    );\n\n    let up = [];\n    let down = [];\n    for (let i = 0; i < ma.length; i++) {\n        up[i] = utils.toFixed(ma[i] + options.m * stdev[i], options.digits);\n        down[i] = utils.toFixed(ma[i] - options.m * stdev[i], options.digits);\n    }\n\n    return [ma, up, down, stdev];\n}\n\nexport default {\n    name: \"BOLL\",\n    label: \"布林线\",\n    description: \"布林线指标\",\n    calculate: boll,\n};\n","/**\n * 基本动量指标\n *\n * 参数：\n *  n: 动量周期\n *  m: 平均天数\n *  source: close, ohlc\n */\n\nimport _ from \"lodash\";\nimport utils from \"./utils\";\n\nfunction mtm(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        !_.isEmpty(tradeData) &&\n        _.isArray(tradeData) &&\n        tradeData.length > 0 &&\n        options &&\n        options.n > 1\n    ) {\n        let source =\n            options && options.source === \"ohlc\" ? utils.ohlc : \"close\";\n        let digits = options.digits || 2;\n        let ma;\n        if (options && options.m && options.m > 1) {\n            ma = utils.ma(tradeData, options.m, source, \"ma\", digits);\n        } else {\n            ma = utils.ma(tradeData, 1, source, \"ma\", digits);\n        }\n\n        let momentum = tradeData.map((item, i, all) => {\n            if (i > options.n) {\n                return utils.toFixed(\n                    utils.readData(item, source) - ma[i - options.n],\n                    //utils.readData(all[i - options.n], source),\n                    digits\n                );\n            } else {\n                return 0;\n            }\n        });\n        // momentum = utils.ma(momentum, 6, undefined, \"ma\");\n        return momentum;\n    }\n}\n\nexport default {\n    name: \"MTM\",\n    label: \"动量指标\",\n    description: \"动量振荡器指标\",\n    calculate: mtm,\n};\n","/**\n * 基本动量指标\n *\n * 参数：\n *  n: 短期平均天数\n *  m: 长期平均天数\n *  source: close, ohlc\n */\n\nimport _ from \"lodash\";\nimport utils from \"./utils\";\n\nfunction ao(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        !_.isEmpty(tradeData) &&\n        _.isArray(tradeData) &&\n        tradeData.length > 0 &&\n        options &&\n        options.n >= 1 &&\n        options.m >= 1\n    ) {\n        let source =\n            options && options.source === \"ohlc\" ? utils.ohlc : \"close\";\n        let digits = options.digits || 2;\n\n        let ma1 = utils.ma(tradeData, options.n, source, \"ma\", digits);\n        let ma2 = utils.ma(tradeData, options.m, source, \"ma\", digits);\n\n        let momentum = tradeData.map((item, i, all) => {\n            if (i >= options.n && i > options.m) {\n                return utils.toFixed(ma1[i] - ma2[i], digits);\n            } else {\n                return 0;\n            }\n        });\n        return momentum;\n    }\n}\n\nexport default {\n    name: \"AO\",\n    label: \"动量震动指标\",\n    description: \"比尔威廉姆斯动量振荡器指标\",\n    calculate: ao,\n};\n","/**\n * 鸡排指标，Squeeze，From Mastering the Trade (3rd Ed)\n *\n * 参数：\n *  source: close | ohlc\n *  ma: ma | ema\n *  n: 20\n *  bm: 2\n *  km: 1.5\n *  mt: \"AO\" || \"MTM\"\n *  mn: 5\n *  mm: 12\n *\n *  ditis: 3\n *\n */\nimport _ from \"lodash\";\nimport KC from \"./keltner-channel\";\nimport BOLL from \"./boll\";\nimport MTM from \"./mtm\";\nimport AO from \"./ao\";\nimport utils from \"./utils\";\n\nconst READY = \"READY\";\nconst REST = \"--\";\nconst BUY = \"BUY\";\nconst SELL = \"SELL\";\n\nfunction squeeze(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    let source = (options && options.source) || \"close\";\n    let digits = (options && options.digits) || 3;\n    let ma = (options && options.ma) || \"ema\";\n    let n = (options && options.n) || 20;\n    let km = (options && options.km) || 1.5;\n    let bm = (options && options.bm) || 2;\n    let mt = (options && options.mt) || \"AO\";\n    let mn = (options && options.mn) || 5;\n    let mm = (options && options.mm) || 12;\n\n    let kcData = KC.calculate(tradeData, {\n        n,\n        m: km,\n        type1: ma,\n        type2: ma,\n        source,\n        digits,\n    });\n    let bollData = BOLL.calculate(tradeData, {\n        n,\n        m: bm,\n        ma,\n        source,\n        digits,\n    });\n\n    let mmData;\n    if (mt === \"MTM\") {\n        mmData = MTM.calculate(tradeData, {\n            n: mn,\n            m: mm,\n            source,\n            digits,\n        });\n    } else {\n        mmData = AO.calculate(tradeData, {\n            n: mn,\n            m: mm,\n            source,\n            digits,\n        });\n    }\n\n    // 下面根据轨道情况，判断状态，状态区分如下\n    // 1. boll进kc，启动警告状态：READY\n    // 2. boll出kc，进入交易状态：\n    //   2.1 mm>0，买入（多头）：BUY\n    //   2.2 mm<=0，卖出（空头）：SELL\n    // 3. mm 降低，交易结束：--\n    let currentState = REST;\n    let states = tradeData.map((item, i, all) => {\n        let ready =\n            bollData &&\n            kcData &&\n            bollData[1][i] &&\n            kcData[1][i] &&\n            bollData[1][i] <= kcData[1][i];\n\n        let mmUp = mmData && mmData[i] && mmData[i] > 0;\n\n        let nextState = currentState;\n        if (currentState === REST) {\n            if (ready) {\n                nextState = READY;\n            }\n        } else if (currentState === READY) {\n            if (!ready) {\n                nextState = mmUp ? BUY : SELL;\n            }\n        } else if (currentState === BUY || currentState === SELL) {\n            // 检查是否出现动能减弱\n            if (\n                mmData &&\n                mmData[i] &&\n                mmData[i - 1] &&\n                ((currentState === BUY && mmData[i] < mmData[i - 1]) ||\n                    (currentState === SELL && mmData[i] > mmData[i - 1]))\n            ) {\n                nextState = REST;\n            }\n        }\n        currentState = nextState;\n        return nextState;\n    });\n\n    return [\n        kcData[0],\n        bollData[1],\n        bollData[2],\n        kcData[1],\n        kcData[2],\n        mmData,\n        states,\n    ];\n}\n\nexport default {\n    name: \"SQUEEZE\",\n    label: \"鸡排\",\n    description: \"挤牌信号器指标\",\n    calculate: squeeze,\n    states: {\n        REST,\n        READY,\n        BUY,\n        SELL,\n    },\n};\n","// const simulate = require(\"./simulator\");\nimport simulate from \"./simulator\";\nimport search from \"./search\";\nimport mmb from \"./momentum-breakthrough\";\nimport stoploss from \"./stoploss\";\nimport benchmark from \"./benchmark-basic\";\nimport outsideday from \"./outsideday\";\nimport opensell from \"./opensell\";\nimport smashday from \"./smashday\";\nimport engine from \"./transaction-engine\";\nimport * as reports from \"./reports\";\nimport { formatFxstr } from \"./util\";\n\nimport MA from \"./indicators/ma\";\nimport ATR from \"./indicators/atr\";\nimport KC from \"./indicators/keltner-channel\";\nimport BOLL from \"./indicators/boll\";\nimport MTM from \"./indicators/mtm\";\nimport AO from \"./indicators/ao\";\nimport SQUEEZE from \"./indicators/squeeze\";\nimport utils from \"./indicators/utils\";\n\nconst indicators = {\n    MA,\n    ATR,\n    KC,\n    BOLL,\n    MTM,\n    AO,\n    SQUEEZE,\n};\n\nconst rules = {\n    mmb,\n    stoploss,\n    benchmark,\n    outsideday,\n    opensell,\n    smashday,\n};\n\nexport {\n    simulate,\n    search,\n    engine,\n    rules,\n    reports,\n    formatFxstr,\n    indicators,\n    utils,\n};\n"],"names":["formatFxstr","num","toLocaleString","debug","debugpkg","executeTransaction","index","stockData","capitalData","options","translog","tradeDate","trade_date","stockInfo","info","sellRules","rules","sell","buyRules","buy","stocks","stockId","length","stock","sold","rule","name","checkSellTransaction","transeq","executeCapitalSettlement","price","count","total","toFixed","commission","fee","duty","memo","fixCash","cash","balance","initBalance","checkBuyTransaction","_transeq","_","isEmpty","type","ts_code","push","i","splice","settledlog","date","profit","income","transactions","createSellTransaction","tradeDateIndex","methodType","calculateTransactionFee","dateIndex","amount","createBuyTransaction","parseInt","exchange","parseCapitalReports","count_win","total_win","count_loss","total_loss","total_profit","total_fee","max_profit","max_loss","average_profit","average_win","average_loss","max_wintimes","max_losstimes","max_windays","max_lossdays","average_windays","average_lossdays","selltypes","ror_win","ror_loss","ror","tmp_cost","tmp_cost_win","tmp_cost_loss","currentType","tmp_times","tmp_windays","tmp_lossdays","log","days","selltype","times","win_times","loss_times","Number","showCapitalReports","stockvalue","capitalResult","showTransactions","logTransaction","holdlog","parseWorkdayReports","results","day","win_ratio","win","loss_ratio","loss","ratio_winloss","average","max_win","trans","moment","res","showWorkdayReports","reports","grid","CG","CGS","Style","columns","id","align","rows","report","workday","red","win_average","green","loss_average","cyan","profit_average","data","option","render","console","showOptionsInfo","buys","usedRules","label","sells","rules_desc","showOptions","startDate","simulate","stockListData","readStockList","stockList","filterStockList","stockItem","readStockData","stockDataNames","daily","updateTime","format","filterStockData","calculatePrevAdjPrice","currentDate","isAfter","engine","showTrans","showWorkdays","dailyData","digits","forEach","item","prevadj_factor","open","close","high","low","pre_close","change","selectedStocks","map","tsCode","tmp","filter","reverse","search","matched","check","OPTIONS_NAME","checkMMBBuyTransaction","mmboptions","N","P","mmbType","currentData","targetPrice","checkMMBSellTransaction","nommb1","nommb2","L","mmb","description","methodTypes","mmb1","mmb2","checkStoplossTransaction","S","lossPrice","stoploss","RULE_NAME","bmoptions","priceType","sellPrice","benchmark","data2","data1","outsideday","opensell","smashday","dataIndex","tradeType","validDays","smashType","smash1","smash2","ORGANIZED","Symbol","checkTradeData","isArray","checkOrder","readData","prop","isFunction","isString","array","n","Array","desc","step","lastIndex","sum","ma","sma","ema","ret","tr","Math","max","abs","ohlc","stdev","d","j","sqrt","tradeData","utils","source","calculate","atr","keltner","MA","type1","ATR","type2","up","down","m","boll","mtm","momentum","all","ao","ma1","ma2","READY","REST","BUY","SELL","squeeze","km","bm","mt","mn","mm","kcData","KC","bollData","BOLL","mmData","MTM","AO","currentState","states","ready","mmUp","nextState","indicators","SQUEEZE"],"mappings":"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"}