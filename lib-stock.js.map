{"version":3,"file":"lib-stock.js","sources":["src/utils.js","src/transaction-engine.js","src/transaction.js","src/reports.js","src/simulator.js","src/search.js","src/rules/benchmark-basic.js","src/rules/momentum-breakthrough.js","src/rules/stoploss.js","src/rules/outsideday.js","src/rules/opensell.js","src/rules/smashday.js","src/indicators/ma.js","src/indicators/atr.js","src/indicators/keltner-channel.js","src/indicators/boll.js","src/indicators/mtm.js","src/indicators/ttmwave.js","src/indicators/squeeze.js","src/rules/squeeze.js","src/rules/swing.js","src/rules/holp.js","src/indicators/rsi.js","src/rules/rsi-panic.js","src/indicators/wvf.js","src/rules/vixfix.js","src/indicators/ao.js","src/indicators/ttmtrend.js","src/indicators/scalper.js","src/favorites.js","src/index.js"],"sourcesContent":["import _ from \"lodash\";\n\nconst ORGANIZED = Symbol(\"表示数据是否经过检查和整理\");\nconst ADJUSTED = Symbol(\"已经复权处理\");\n\n/**\n * 对交易数据按照结构进行检查，检查后需要满足\n * 1. 数组结构\n * 2. 交易日期按照时间升序排列，0为最早的数据\n * 3. 如果提供了赋权因子，进行前复权计算\n * 4. 设置ORGANIZED标记为true\n *\n * @param {*} data 交易数据（日线）\n */\nfunction checkTradeData(data, digits = 3) {\n    if (_.isEmpty(data) || data[ORGANIZED]) return data;\n    if (!_.isArray(data)) return data;\n\n    // 检查数据排序，如果是降序，则反过来\n    if (checkOrder(data)) {\n        data.reverse();\n    }\n\n    if (data[0] && data[0].prevadj_factor) {\n        calculatePrevAdjPrice(data, digits);\n    }\n\n    data[ORGANIZED] = true;\n    return data;\n}\n\n/**\n * 将日线数据中的历史价位根据复权因子全部处理为前复权结果，方便后续计算\n *\n * @param {*} dailyData 日线数据\n * @param {int} digits 保留位数\n */\nfunction calculatePrevAdjPrice(dailyData, digits = 3) {\n    if (dailyData && dailyData.length > 0 && !dailyData[ADJUSTED]) {\n        dailyData.forEach((item) => {\n            if (item.prevadj_factor && !item.origin) {\n                // console.log(\n                //     `复权前 ${item.trade_date}, ${item.open}, ${item.close}`\n                // );\n                item.origin = {\n                    open: item.open,\n                    close: item.close,\n                    high: item.high,\n                    low: item.low,\n                    pre_close: item.pre_close,\n                    change: item.change,\n                };\n                item.open = toFixed(item.open * item.prevadj_factor, digits);\n                item.close = toFixed(item.close * item.prevadj_factor, digits);\n                item.high = toFixed(item.high * item.prevadj_factor, digits);\n                item.low = toFixed(item.low * item.prevadj_factor, digits);\n                item.pre_close = toFixed(\n                    item.pre_close * item.prevadj_factor,\n                    digits\n                );\n                item.change = toFixed(\n                    item.change * item.prevadj_factor,\n                    digits\n                );\n                // console.log(\n                //     `复权后 ${item.trade_date}, ${item.open}, ${item.close}`\n                // );\n            }\n        });\n        dailyData[ADJUSTED] = true;\n    }\n}\n\nfunction readData(item, prop) {\n    if (_.isFunction(prop)) {\n        return prop(item);\n    } else if (_.isString(prop)) {\n        return item && item[prop];\n    }\n    return item;\n}\n\nfunction toFixed(num, digits = 3) {\n    return Number(num.toFixed(digits));\n}\n\nfunction checkOrder(array) {\n    return (\n        array &&\n        _.isArray(array) &&\n        array.length > 1 &&\n        _.isObject(array[0]) &&\n        _.has(array[0], \"trade_date\") &&\n        array[0].trade_date > array[array.length - 1].trade_date\n    );\n}\n\nfunction average(array, index, n, prop, digits = 3) {\n    if (\n        index >= 0 &&\n        array &&\n        Array.isArray(array) &&\n        array.length > index &&\n        n > 0\n    ) {\n        let desc = checkOrder(array);\n\n        let step = desc ? -1 : 1;\n        let lastIndex = index - step * n;\n        if (lastIndex < 0 || lastIndex >= array.length) {\n            return;\n        }\n\n        let i = index;\n        let count = 0;\n        let sum = 0;\n        while (i >= 0 && i < array.length && count < n) {\n            sum += readData(array[i], prop);\n            i -= step;\n            count++;\n        }\n        if (count === n) {\n            return toFixed(sum / n, digits);\n        }\n        // let calcArr = array.slice(index - n + 1, index + 1);\n        // return (\n        //     calcArr\n        //         .map((item, i, all) => {\n        //             return readData(item, prop);\n        //         })\n        //         .reduce((total, item) => {\n        //             return total + item;\n        //         }, 0) / n\n        // );\n    }\n}\n\nfunction highest(array, index, n, prop, digits = 3) {\n    if (\n        index >= 0 &&\n        array &&\n        Array.isArray(array) &&\n        array.length > index &&\n        n > 0\n    ) {\n        let lastIndex = index - n + 1;\n        if (lastIndex < 0 || lastIndex >= array.length) {\n            return;\n        }\n\n        let tmp = readData(array[index], prop);\n        for (let i = 1; i < n; i++) {\n            if (index - i < 0 || index - i >= array.length) continue;\n            tmp = Math.max(tmp, readData(array[index - i], prop));\n        }\n        return tmp;\n    }\n}\n\nfunction lowest(array, index, n, prop, digits = 3) {\n    if (\n        index >= 0 &&\n        array &&\n        Array.isArray(array) &&\n        array.length > index &&\n        n > 0\n    ) {\n        let lastIndex = index - n + 1;\n        if (lastIndex < 0 || lastIndex >= array.length) {\n            return;\n        }\n\n        let tmp = readData(array[index], prop);\n        for (let i = 1; i < n; i++) {\n            if (index - i < 0 || index - i >= array.length) continue;\n            tmp = Math.min(tmp, readData(array[index - i], prop));\n        }\n        return tmp;\n    }\n}\n\nfunction ma(array, n, prop, type, digits = 3) {\n    if (type === \"ma\") {\n        return sma(array, n, prop, digits);\n    } else {\n        return ema(array, n, prop, digits);\n    }\n}\n\nfunction sma(array, n, prop, digits = 3) {\n    if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n        let desc = checkOrder(array);\n        let step = desc ? -1 : 1;\n        let i = desc ? array.length - 1 : 0;\n        let index = 0;\n        let ret = [];\n        while (i >= 0 && i < array.length) {\n            ret[index] = average(array, i, n, prop, digits);\n            index++;\n            i += step;\n        }\n        return ret;\n    }\n}\n\nfunction ema(array, n, prop, digits = 3) {\n    if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n        let desc = checkOrder(array);\n        let step = desc ? -1 : 1;\n        let i = desc ? array.length - 1 : 0;\n        let index = 0;\n        let ret = [];\n        let tmp = 0;\n        while (i >= 0 && i < array.length) {\n            if (index === 0) {\n                tmp = readData(array[i], prop);\n            } else {\n                tmp = (2 * readData(array[i], prop) + (n - 1) * tmp) / (n + 1);\n            }\n            ret[index] = toFixed(tmp, digits);\n            index++;\n            i += step;\n        }\n        return ret;\n    }\n}\n\n/**\n * 计算指定数据的TR值\n * @param {*} data 日线数据\n */\nfunction tr(data) {\n    if (data) {\n        return Math.max(\n            data.high - data.low,\n            Math.abs(data.high - data.pre_close),\n            Math.abs(data.pre_close - data.low)\n        );\n    }\n}\n\nfunction ohlc(data) {\n    if (data) {\n        return (data.open + data.high + data.low + data.close) / 4;\n    }\n}\n\nfunction hl(data) {\n    if (data) {\n        return (data.high + data.low) / 2;\n    }\n}\n\n/**\n * 用于计算数组数据的布林线结果，返回数组\n * @param {Array} array 数据数组\n * @param {number} n 均线周期\n * @param {number} multi 布林线偏差倍数\n * @param {number}} digits 保留小数位数\n */\nfunction boll(array, n = 20, multi = 2.0, prop = null, digits = 3) {\n    let ret = [];\n    let ma = sma(array, n, prop, digits);\n    if (!ma) return;\n\n    let std = stdev(array, n, prop, digits);\n    if (!std) return;\n\n    let up = [];\n    let down = [];\n    for (let i = 0; i < ma.length; i++) {\n        up[i] = toFixed(ma[i] + multi * std[i], digits);\n        down[i] = toFixed(ma[i] - multi * std[i], digits);\n\n        ret[i] = [ma[i], up[i], down[i], std[i]];\n    }\n\n    // return [ma, up, down, stdev];\n    return ret;\n}\n\n// function osc(array, prop = null, n = 14, digits = 3) {\n//     if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n//         let ret = [];\n\n//         for (let i = 0; i < array.length; i++) {\n//             let ohc = highest(array, i, n, prop, digits);\n//             let olc = lowest(array, i, n, prop, digits);\n//             osc =\n//         }\n//     }\n// }\n\n/**\n *\n * @param {Array} array 数据数组\n * @param {number} n 平均天数\n * @param {*} prop 数据属性或转换方法\n * @param {string} type 偏差类型\n * @param {boolean} desc 数据数组是否降序\n * @param {number} digits 小数保留位数\n */\nfunction stdev(array, n, prop, digits = 3) {\n    if (array && Array.isArray(array) && array.length > 0 && n > 0) {\n        let desc = checkOrder(array);\n        let step = desc ? -1 : 1;\n        let i = desc ? array.length - 1 : 0;\n        let index = 0;\n        let ret = [];\n        while (i >= 0 && i < array.length) {\n            let ma = average(array, i, n, prop, digits);\n            let d;\n\n            if (ma) {\n                let sum = 0;\n                let j = i;\n                let count = 0;\n                while (j >= 0 && j < array.length && count < n) {\n                    sum += (readData(array[j], prop) - ma) ** 2;\n                    count++;\n                    j -= step;\n                }\n                d = toFixed(Math.sqrt(sum / (n - 1)), digits);\n            }\n\n            ret[index] = d;\n            index++;\n            i += step;\n        }\n        return ret;\n    }\n}\n\nfunction formatFxstr(num) {\n    return num.toLocaleString(\"zh-CN\"); //, { style: \"currency\", currency: \"CNY\" });\n}\n\nexport default {\n    formatFxstr,\n    average,\n    ma,\n    sma,\n    ema,\n    stdev,\n    tr,\n    ohlc,\n    hl,\n    readData,\n    toFixed,\n    checkTradeData,\n    boll,\n    highest,\n    lowest,\n};\n","import _ from \"lodash\";\n// import { formatFxstr } from \"./util\";\nimport utils from \"./utils\";\nimport debugpkg from \"debug\";\n\n// import trans from \"./transaction\";\n\nconst debug = debugpkg(\"engine\");\n\n/**\n * 主处理过程\n * 1. 查看设置中的卖出模型列表，按序执行，如果成交，则直接清算\n * 2. 如果执行完卖出，仍然有持仓，检查配置是否许可买入\n * 3. 如果需要买入，查看设置的买入模型列表，按序执行，如果成交，则直接清算\n *\n * 2020.8.26 目前已经支持按照规则，非固定头寸方式下，可以在持仓下仍然买入\n *           持仓卖出按照每笔单独进行，不合并进行\n *\n * @param {*} index 当前日股票数据索引\n * @param {*} stockData 股票数据信息\n * @param {*} capitalData 账户信息\n * @param {*} options 算法参数\n */\nasync function executeTransaction(index, stockData, capitalData, options) {\n    let translog = null;\n    // 首先检查卖出\n    // 所有算法首先检查并处理止损\n    // 检查是否需要止损\n    let tradeDate = stockData[index].trade_date;\n    let stockInfo = capitalData.info;\n\n    let sellRules = options.rules && options.rules.sell;\n    let buyRules = options.rules && options.rules.buy;\n\n    // 目前的持仓情况\n    let stocks = capitalData && capitalData.stocks;\n    if (sellRules) {\n        // 每个买入持股单独处理\n        let stockId = 0;\n        while (stockId < stocks.length) {\n            let stock = stocks[stockId];\n            debug(`检查卖出股票信息: %o`, stock);\n\n            let sold = false;\n            for (let rule of sellRules) {\n                if (rule) {\n                    debug(\n                        `${rule.name} 卖出检查：${tradeDate}, %o`,\n                        stockData[index]\n                    );\n                    translog = rule.checkSellTransaction(\n                        stockInfo,\n                        stock,\n                        index,\n                        stockData,\n                        options\n                    );\n                    if (translog) translog.transeq = stock.transeq;\n                    if (\n                        executeCapitalSettlement(\n                            stockInfo,\n                            translog,\n                            capitalData,\n                            options\n                        )\n                    ) {\n                        debug(\n                            `${\n                                rule.name\n                            } 卖出：${tradeDate}，价格：${utils.formatFxstr(\n                                translog.price\n                            )}元，数量：${\n                                translog.count / 100\n                            }手，总价：${translog.total.toFixed(\n                                2\n                            )}元[佣金${translog.commission.toFixed(\n                                2\n                            )}元，过户费${translog.fee.toFixed(\n                                2\n                            )}，印花税${translog.duty.toFixed(2)}元], ${\n                                translog.memo\n                            }`\n                        );\n                        sold = true;\n                        break;\n                    }\n                }\n            }\n            if (!sold) {\n                // 没有卖出，需要查看下一条持股进行检查\n                stockId++;\n            }\n        }\n    }\n\n    // 如果非固定头寸，则检查是否有持仓，如果有不进行买入\n    if (!options.fixCash && capitalData.stocks.length > 0) return;\n    // if (capitalData && capitalData.stock && capitalData.stock.count > 0) return;\n\n    // 执行买入\n    // debug(\"执行买入检查\");\n    let cash = capitalData.balance;\n    if (options.fixCash) cash = options.initBalance;\n    if (buyRules) {\n        for (let rule of buyRules) {\n            translog = rule.checkBuyTransaction(\n                stockInfo,\n                cash,\n                index,\n                stockData,\n                options\n            );\n            if (translog) translog.transeq = capitalData._transeq++;\n            // debug(`买入结果：%o`, translog);\n            if (\n                executeCapitalSettlement(\n                    stockInfo,\n                    translog,\n                    capitalData,\n                    options\n                )\n            ) {\n                debug(\n                    `${\n                        rule.name\n                    } 买入交易：${tradeDate}，价格：${translog.price.toFixed(\n                        2\n                    )}元，数量：${\n                        translog.count / 100\n                    }手，总价：${translog.total.toFixed(\n                        2\n                    )}元[佣金${translog.commission.toFixed(\n                        2\n                    )}元，过户费${translog.fee.toFixed(\n                        2\n                    )}，印花税${translog.duty.toFixed(2)}元], ${translog.memo}`\n                );\n                // debug(`股票信息：%o`, stockInfo);\n                // debug(`账户信息：%o`, capitalData);\n                // return translog;\n            }\n        }\n    }\n}\n\n/**\n * 根据交易记录完成账户清算\n * @param {*} stockInfo 股票信息\n * @param {*} translog 交易记录\n * @param {*} capitalData 账户数据\n * @param {*} options 配置参数\n */\nfunction executeCapitalSettlement(stockInfo, translog, capitalData, options) {\n    // debug(`执行清算 %o`, translog);\n    if (_.isEmpty(translog)) return false;\n    // 如果非固定头寸，检查当前提供的交易余额是否可执行\n    if (!options.fixCash && translog.total + capitalData.balance < 0) {\n        debug(\n            `账户余额${capitalData.balance}不足(${\n                translog.total\n            })，无法完成清算，交易取消! 交易信息: ${\n                translog.type === \"buy\" ? \"买入\" : \"卖出\"\n            }${stockInfo.ts_code} ${translog.count}股，价格${\n                translog.price\n            }，共计${translog.total}元[含佣金${translog.commission}元，过户费${\n                translog.fee\n            }，印花税${translog.duty}元]`\n        );\n        return false;\n    }\n\n    // 处理交易信息\n    capitalData.balance += translog.total;\n    // 如果当前买入，stock中放置持股信息和买入交易日志，只有卖出发生时才合并生成一条交易记录，包含两个部分\n    if (translog.type === \"buy\") {\n        capitalData.stocks.push({\n            transeq: translog.transeq,\n            count: translog.count,\n            price: translog.price,\n            buy: translog,\n        });\n    } else {\n        let stock;\n        for (let i = 0; i < capitalData.stocks.length; i++) {\n            if (capitalData.stocks[i].transeq === translog.transeq) {\n                stock = capitalData.stocks[i];\n                capitalData.stocks.splice(i, 1);\n                break;\n            }\n        }\n        if (!stock) {\n            debug(\n                `没有找到要执行的交易序号：${translog.transeq}, %o`,\n                capitalData.stocks\n            );\n            return false;\n        }\n\n        let settledlog = {\n            transeq: stock.transeq,\n            tradeDate: translog.date,\n            profit: stock.buy.total + translog.total,\n            income: translog.count * translog.price - stock.count * stock.price,\n            buy: stock.buy,\n            sell: translog,\n        };\n        // capitalData.stock = {\n        //     //info: null,\n        //     count: 0,\n        //     price: 0,\n        // };\n        capitalData.transactions.push(settledlog);\n    }\n    // debug(\"完成清算！\");\n    return true;\n}\n\nexport default {\n    executeTransaction,\n    executeCapitalSettlement,\n};\n","import _ from \"lodash\";\nimport utils from \"./utils\";\n// import { formatFxstr } from \"./util\";\nimport debugpkg from \"debug\";\n\nconst debug = debugpkg(\"transaction\");\n\n/**\n * 创建指定日期和股票信息的卖出交易\n * @param {*} stockInfo\n * @param {*} tradeDate\n * @param {*} tradeDateIndex\n * @param {*} count\n * @param {*} price\n * @param {*} memo\n */\nfunction createSellTransaction(\n    stockInfo,\n    tradeDate,\n    tradeDateIndex,\n    count,\n    price,\n    methodType,\n    memo\n) {\n    // 计算费用\n    let total = calculateTransactionFee(false, stockInfo, count, price);\n    // 创建卖出交易记录\n    return {\n        date: tradeDate,\n        dateIndex: tradeDateIndex,\n        type: \"sell\",\n        count,\n        price,\n        total: total.total,\n        amount: total.amount,\n        fee: total.fee,\n        commission: total.commission,\n        duty: total.duty,\n        methodType,\n        memo,\n    };\n}\n\n/**\n * 构建买入交易信息\n * @param {*} stockInfo 股票信息\n * @param {*} tradeDate 交易日期\n * @param {*} tradeDateIndex 交易日期索引（方便用于计算交易日数）\n * @param {*} balance 可用余额\n * @param {*} price 买入价格\n * @param {*} memo 交易备注\n */\nfunction createBuyTransaction(\n    stockInfo,\n    tradeDate,\n    tradeDateIndex,\n    balance,\n    price,\n    methodType,\n    memo\n) {\n    // 计算费用\n    let count = parseInt(balance / price / 100) * 100;\n    // 最小交易单位为1手，资金不足放弃！\n    if (count < 100) return;\n    let total = calculateTransactionFee(true, stockInfo, count, price);\n    while (total.total + balance < 0) {\n        count -= 100;\n        if (count < 100) return;\n        total = calculateTransactionFee(true, stockInfo, count, price);\n    }\n    // 创建买入交易记录\n    return {\n        date: tradeDate,\n        dateIndex: tradeDateIndex,\n        type: \"buy\",\n        count: count,\n        price,\n        total: total.total,\n        amount: total.amount,\n        fee: total.fee,\n        commission: total.commission,\n        duty: total.duty,\n        methodType,\n        memo,\n    };\n}\n\n/**\n * 计算交易价格和费用\n * @param {boolean}} buy 买卖标记\n * @param {*} stockInfo 股票信息\n * @param {*} count 买卖数量\n * @param {*} price 买卖单价\n */\nfunction calculateTransactionFee(buy, stockInfo, count, price) {\n    let amount = count * price;\n    let commission = (amount * 0.25) / 1000;\n    let fee = 0.0;\n    let duty = 0.0;\n    if (stockInfo.exchange === \"SSE\") {\n        // 上海，过户费千分之0.2\n        fee += (amount * 0.02) / 1000;\n    } else if (stockInfo.exchange === \"SZSE\") {\n        // 深圳，无\n    }\n    // 印花税，仅对卖方收取\n    if (!buy) {\n        duty += (amount * 1) / 1000;\n    }\n\n    let total = 0.0;\n    if (buy) {\n        total = 0 - (amount + commission + fee + duty);\n    } else {\n        total = amount - commission - fee - duty;\n    }\n\n    return { total, amount, commission, fee, duty };\n}\n\nfunction parseCapitalReports(capitalData) {\n    if (_.isEmpty(capitalData)) return;\n    // 账户信息中主要需分析交易过程，正常都是为一次买入，一次卖出，这样作为一组交易，获得一次盈利结果\n    let count = capitalData.transactions.length;\n    let count_win = 0;\n    let total_win = 0;\n    let count_loss = 0;\n    let total_loss = 0;\n    let total_profit = 0;\n    let total_fee = 0;\n    let max_profit = 0;\n    let max_loss = 0;\n    let average_profit = 0;\n    let average_win = 0;\n    let average_loss = 0;\n    let max_wintimes = 0; // 连续盈利次数\n    let max_losstimes = 0; // 连续亏损次数\n    let max_windays = 0;\n    let max_lossdays = 0;\n    let average_windays = 0;\n    let average_lossdays = 0;\n    // {times: 总次数, win_times: 盈利次数, loss_times: 损失次数}\n    let selltypes = {};\n    //let selltype_times = {};\n\n    // 收益率：表示单位成本的收入比例\n    let ror_win = 0;\n    let ror_loss = 0;\n    let ror = 0;\n\n    let tmp_cost = 0;\n    let tmp_cost_win = 0;\n    let tmp_cost_loss = 0;\n\n    let currentType = 0;\n    let tmp_times = 0;\n    let tmp_windays = 0;\n    let tmp_lossdays = 0;\n    for (let log of capitalData.transactions) {\n        let days = log.sell.dateIndex - log.buy.dateIndex + 1;\n\n        let selltype = selltypes[log.sell.methodType];\n        if (!selltype) {\n            selltypes[log.sell.methodType] = {\n                times: 0,\n                win_times: 0,\n                loss_times: 0,\n            };\n        }\n        selltypes[log.sell.methodType].times += 1;\n\n        if (log.profit >= 0) {\n            count_win++;\n            total_win += log.profit;\n            tmp_cost_win += -log.buy.total;\n            if (max_profit < log.profit) max_profit = log.profit;\n\n            tmp_windays += days;\n            if (max_windays < days) max_windays = days;\n\n            // 连续计数\n            if (currentType === 1) {\n                tmp_times++;\n            } else {\n                if (currentType === -1) {\n                    if (max_losstimes < tmp_times) max_losstimes = tmp_times;\n                }\n                // 初始化\n                currentType = 1;\n                tmp_times = 1;\n            }\n\n            selltypes[log.sell.methodType].win_times += 1;\n        } else {\n            count_loss++;\n            total_loss += log.profit;\n            tmp_cost_loss += -log.buy.total;\n            if (max_loss > log.profit) max_loss = log.profit;\n\n            tmp_lossdays += days;\n            if (max_lossdays < days) max_lossdays = days;\n\n            // 连续计数\n            if (currentType === -1) {\n                tmp_times++;\n            } else {\n                if (currentType === 1) {\n                    if (max_wintimes < tmp_times) max_wintimes = tmp_times;\n                }\n                // 初始化\n                currentType = -1;\n                tmp_times = 1;\n            }\n\n            selltypes[log.sell.methodType].loss_times += 1;\n        }\n\n        total_profit += log.profit;\n        total_fee +=\n            log.buy.commission +\n            log.buy.fee +\n            log.buy.duty +\n            (log.sell.commission + log.sell.fee + log.sell.duty);\n        tmp_cost += -log.buy.total;\n    }\n\n    if (currentType === 1) {\n        if (max_wintimes < tmp_times) max_wintimes = tmp_times;\n    } else if (currentType === -1) {\n        if (max_losstimes < tmp_times) max_losstimes = tmp_times;\n    }\n\n    average_profit = total_profit / count;\n    average_win = total_win / count_win;\n    average_loss = -total_loss / count_loss;\n\n    average_windays = Number((tmp_windays / count_win).toFixed(1));\n    average_lossdays = Number((tmp_lossdays / count_loss).toFixed(1));\n\n    ror = total_profit / tmp_cost;\n    ror_win = total_win / tmp_cost_win;\n    ror_loss = total_loss / tmp_cost_loss;\n\n    return {\n        count,\n        total_profit,\n        total_fee,\n        count_win,\n        total_win,\n        count_loss,\n        total_loss,\n        max_profit,\n        max_loss,\n        average_profit,\n        average_win,\n        average_loss,\n        max_wintimes,\n        max_losstimes,\n        max_windays,\n        max_lossdays,\n        average_windays,\n        average_lossdays,\n        selltypes,\n\n        ror,\n        ror_win,\n        ror_loss,\n    };\n}\n\nfunction showCapitalReports(log, capitalData) {\n    log(\n        `******************************************************************************************`\n    );\n    // log(\n    //     \"*                                                                                                                      *\"\n    // );\n    if (capitalData.stocks && capitalData.stocks.length > 0) {\n        let stockvalue = 0;\n        for (let stock of capitalData.stocks) {\n            stockvalue += stock.count * stock.price;\n        }\n        log(\n            `  账户价值 ${utils.formatFxstr(\n                capitalData.balance + stockvalue\n            )}元  【余额 ${utils.formatFxstr(\n                capitalData.balance\n            )}元, 持股: ${utils.formatFxstr(stockvalue)}元】`\n        );\n    } else {\n        log(`  账户余额 ${utils.formatFxstr(capitalData.balance)}元`);\n    }\n\n    let capitalResult = parseCapitalReports(capitalData);\n    // log(``);\n    log(\n        `  总净利润：${utils.formatFxstr(\n            capitalResult.total_profit\n        )},  收益率 ${(capitalResult.ror * 100).toFixed(2)}%`\n    );\n    log(\n        `  毛利润： ${utils.formatFxstr(\n            capitalResult.total_win\n        )},  总亏损：${utils.formatFxstr(capitalResult.total_loss)}`\n    );\n    log(\n        `  盈利收益率： ${(capitalResult.ror_win * 100).toFixed(\n            2\n        )}%,  亏损收益率：${(capitalResult.ror_loss * 100).toFixed(2)}%`\n    );\n    log(\"\");\n    log(\n        `  总交易次数： ${capitalResult.count},  利润率：${(\n            (capitalResult.count_win * 100) /\n            capitalResult.count\n        ).toFixed(1)}%`\n    );\n    log(\n        `  总盈利次数： ${capitalResult.count_win},  总亏损次数：${capitalResult.count_loss}`\n    );\n    log(\"\");\n    log(\n        `  最大单笔盈利： ${utils.formatFxstr(\n            capitalResult.max_profit\n        )},  最大单笔亏损：${utils.formatFxstr(capitalResult.max_loss)}`\n    );\n    log(\n        `  平均盈利： ${utils.formatFxstr(\n            capitalResult.average_win\n        )},  平均亏损：${utils.formatFxstr(capitalResult.average_loss)}`\n    );\n    log(\n        `  平均盈利/平均亏损： ${(\n            capitalResult.average_win / capitalResult.average_loss\n        ).toFixed(2)},  平均每笔总盈利：${utils.formatFxstr(\n            capitalResult.average_profit\n        )}`\n    );\n    log(\"\");\n    log(\n        `  最多连续盈利次数： ${capitalResult.max_wintimes},  最多连续亏损次数：${capitalResult.max_losstimes}`\n    );\n    log(\n        `  盈利最多持有天数： ${capitalResult.max_windays},  亏损最多持有天数：${capitalResult.max_lossdays}`\n    );\n    log(\n        `  盈利平均持有天数： ${capitalResult.average_windays},  亏损平均持有天数：${capitalResult.average_lossdays}`\n    );\n\n    log(\"\");\n    for (let methodType in capitalResult.selltypes) {\n        let selltype = capitalResult.selltypes[methodType];\n        log(\n            `  卖出类型${methodType} 共${selltype.times}次,  盈利${selltype.win_times}次， 损失${selltype.loss_times}次`\n        );\n    }\n    // log(\n    //     \"*                                                                                                                      *\"\n    // );\n    log(\n        `******************************************************************************************`\n    );\n    log(\"\");\n}\n\nfunction showTransactions(log, capitalData) {\n    log(`  交易日志分析\n******************************************************************************************`);\n    for (let translog of capitalData.transactions) {\n        log(logTransaction(translog));\n    }\n    if (capitalData.stock && capitalData.stock.count > 0) {\n        let holdlog = { buy: capitalData.stock.buy };\n        log(logTransaction(holdlog));\n    }\n    log(\n        `******************************************************************************************`\n    );\n}\n\n// settledlog = {\n//     transeq: 交易序号\n//     tradeDate: translog.tradeDate,\n//     profit: capitalData.stock.buy.total + translog.total,\n//     income:\n//         translog.count * translog.price -\n//         capitalData.stock.count * capitalData.stock.price,\n//     buy: capitalData.stock.buy,\n//     sell: translog,\n// };\n// trans: {\n// date: tradeDate.format(\"YYYYMMDD\"),\n// dateIndex: tradeDateIndex,\n// type: \"sell\",\n// count,\n// price,\n// total: total.total,\n// amount: total.amount,\n// fee: total.fee,\n// commission: total.commission,\n// duty: total.duty,\n// methodType,\n// memo,\n// }\nfunction logTransaction(translog) {\n    if (!translog) return \"\";\n    let buy = translog.buy;\n    let sell = translog.sell;\n    if (sell) {\n        return `收入：${utils.formatFxstr(translog.profit)}, 持有 ${\n            sell.dateIndex - buy.dateIndex + 1\n        }天，盈利 ${(-(translog.profit * 100) / buy.total).toFixed(2)}%, ${\n            translog.transeq\n        }\n       [买入 ${buy.date}, ${utils.formatFxstr(buy.price)}, ${\n            buy.count\n        }, ${utils.formatFxstr(buy.total)}, ${buy.transeq}] \n       [卖出 ${sell.date}, ${utils.formatFxstr(sell.price)}, ${\n            sell.count\n        }, ${utils.formatFxstr(sell.total)}, ${sell.methodType}, ${\n            sell.memo\n        }, ${sell.transeq}]`;\n    } else {\n        // 持有未卖出\n        return `收入：---, 持有 ---天，盈利 ---\n       [买入 ${buy.date}, ${utils.formatFxstr(buy.price)}, ${\n            buy.count\n        }, ${utils.formatFxstr(buy.total)}]`;\n    }\n}\n\nexport default {\n    createSellTransaction,\n    createBuyTransaction,\n    calculateTransactionFee,\n    parseCapitalReports,\n    showCapitalReports,\n    showTransactions,\n};\n","import moment from \"moment\";\nimport CG from \"console-grid\";\nimport utils from \"./utils\";\n// import { formatFxstr } from \"./util\";\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"reports\");\n\nfunction parseWorkdayReports(transactions) {\n    if (!transactions || transactions.length <= 0) return;\n    // 报告包含5+1行信息，1-5对应周一到周五的信息，0表示汇总\n    // 每行信息包括：count(交易次数), win_ratio(盈利比例)，win(平均盈利金额)，\n    //      loss_ratio(亏损比例) ，loss（平均亏损金额），ratio_winloss(盈利亏损比),\n    //      average(平均交易规模), max_loss（最大亏损），profit(利润)\n    let results = [\n        {\n            day: \"\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周一\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周二\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周三\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周四\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n        {\n            day: \"周五\",\n            count: 0,\n            count_win: 0,\n            count_loss: 0,\n            win_ratio: 0,\n            win: 0,\n            loss_ratio: 0,\n            loss: 0,\n            ratio_winloss: 0,\n            average: 0,\n            max_win: 0,\n            max_loss: 0,\n            profit: 0,\n        },\n    ];\n\n    for (let trans of transactions) {\n        let buy = trans.buy;\n        // let sell = trans.sell;\n        let date = moment(buy.date, \"YYYYMMDD\");\n        let day = date.day();\n        if (day < 1 && day > 5) {\n            // 超出了周一～周五的范围，跳过这个日期\n            debug(`${buy.tradeDate}交易超出星期范围：${day}, %o`, trans);\n            continue;\n        }\n\n        let days = [0, day];\n        // console.log(`%o`, days);\n        // console.log(\n        //     `%o, ${buy.tradeDate}, ${date}, ${day}, %o %o`,\n        //     trans,\n        //     days,\n        //     results\n        // );\n        for (let index of days) {\n            let res = results[index];\n            res.count++;\n            res.profit += trans.profit;\n            if (trans.profit >= 0) {\n                res.count_win++;\n                res.win += trans.profit;\n                if (res.max_win < trans.profit) res.max_win = trans.profit;\n            } else {\n                res.count_loss++;\n                res.loss += trans.profit;\n                if (res.max_loss > trans.profit) res.max_loss = trans.profit;\n            }\n            // console.log(`${index}, %o`, res);\n        }\n    }\n    for (let res of results) {\n        res.win_ratio = res.count_win / res.count;\n        res.win = res.win / res.count_win;\n        res.loss_ratio = res.count_loss / res.count;\n        res.loss = res.loss / res.count_loss;\n        res.ratio_winloss = res.win / res.loss;\n        res.average = res.profit / res.count;\n    }\n    return results;\n}\n\nfunction showWorkdayReports(log, transactions) {\n    let reports = parseWorkdayReports(transactions);\n    // console.log(\"%o\", reports);\n\n    //     let days = [\"总计\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\"];\n    //     log(`\n    // 工作日    交易次数    盈利比例    平均盈利    亏损比例    平均亏损    盈亏比    平均利润    最大亏损    利润`);\n    //     for (let report of reports) {\n    //         log(\n    //             `${report.day}       ${report.count}          ${(\n    //                 report.win_ratio * 100\n    //             ).toFixed(1)}%    ${report.win.toFixed(2)}    ${(\n    //                 report.loss_ratio * 100\n    //             ).toFixed(1)}%    ${report.loss.toFixed(\n    //                 2\n    //             )}    ${report.ratio_winloss.toFixed(\n    //                 2\n    //             )}    ${report.average.toFixed(2)}    ${report.max_loss.toFixed(\n    //                 2\n    //             )}    ${report.profit.toFixed(2)}`\n    //         );\n    //     }\n\n    // 采用console-grid打印格式\n    let grid = new CG();\n    let CGS = CG.Style;\n    let columns = [\n        { id: \"workday\", name: \"日期\", type: \"string\", align: \"left\" },\n        { id: \"count\", name: \"交易次数\", type: \"number\", align: \"right\" },\n        { id: \"win_ratio\", name: \"盈利比例\", type: \"number\", align: \"right\" },\n        { id: \"win_average\", name: \"平均盈利\", type: \"number\", align: \"right\" },\n        { id: \"loss_ratio\", name: \"亏损比例\", type: \"number\", align: \"right\" },\n        {\n            id: \"loss_average\",\n            name: \"平均亏损\",\n            type: \"number\",\n            align: \"right\",\n        },\n        { id: \"ratio_winloss\", name: \"盈亏比\", type: \"number\", align: \"right\" },\n        {\n            id: \"profit_average\",\n            name: \"平均利润\",\n            type: \"number\",\n            align: \"right\",\n        },\n        { id: \"max_loss\", name: \"最大亏损\", type: \"number\", align: \"right\" },\n        { id: \"profit\", name: \"利润\", type: \"number\", align: \"right\" },\n    ];\n    let rows = [];\n    for (let report of reports) {\n        rows.push({\n            workday:\n                report.win_ratio > 0.5 && report.profit >= 0\n                    ? CGS.red(report.day)\n                    : report.day,\n            count: report.count,\n            win_ratio:\n                report.win_ratio >= 0.5\n                    ? CGS.red(`${(report.win_ratio * 100).toFixed(1)}%`)\n                    : `${(report.win_ratio * 100).toFixed(1)}%`, //CGS.green\n            win_average: `${utils.formatFxstr(report.win)}`,\n            loss_ratio:\n                report.loss_ratio >= 0.5\n                    ? CGS.green(`${(report.loss_ratio * 100).toFixed(1)}%`)\n                    : `${(report.loss_ratio * 100).toFixed(1)}%`,\n            loss_average: `${utils.formatFxstr(report.loss)}`,\n            ratio_winloss:\n                report.ratio_winloss < -1\n                    ? CGS.cyan(`${(-report.ratio_winloss).toFixed(2)}`)\n                    : `${(-report.ratio_winloss).toFixed(2)}`,\n            profit_average:\n                report.average >= 0\n                    ? CGS.red(`${utils.formatFxstr(report.average)}`)\n                    : CGS.green(`${utils.formatFxstr(report.average)}`),\n            max_loss: `${utils.formatFxstr(report.max_loss)}`,\n            profit:\n                report.profit >= 0\n                    ? CGS.red(`${report.profit.toFixed(2)}`)\n                    : CGS.green(`${report.profit.toFixed(2)}`),\n        });\n    }\n    let data = {\n        option: {},\n        columns,\n        rows,\n    };\n    grid.render(data);\n\n    // 采用console-table-printer库打印格式\n    // const p = new Table({\n    //     columns: [\n    //         { name: \"workday\", alignment: \"center\" },\n    //         { name: \"count\", alignment: \"right\" },\n    //         { name: \"win ratio\", alignment: \"right\" },\n    //         { name: \"win/trade\", alignment: \"right\" },\n    //         { name: \"loss ratio\", alignment: \"right\" },\n    //         { name: \"loss/trade\", alignment: \"right\" },\n    //         { name: \"ratio win/loss\", alignment: \"right\" },\n    //         { name: \"profit/trade\", alignment: \"right\" },\n    //         { name: \"max loss\", alignment: \"right\" },\n    //         { name: \"profit\", alignment: \"right\" },\n    //     ],\n    // });\n    // for (let report of reports) {\n    //     p.addRow(\n    //         {\n    //             workday: report.day,\n    //             count: report.count,\n    //             \"win ratio\": `${(report.win_ratio * 100).toFixed(1)}%`,\n    //             \"win/trade\": `${report.win.toFixed(2)}`,\n    //             \"loss ratio\": `${(report.loss_ratio * 100).toFixed(1)}%`,\n    //             \"loss/trade\": `${report.loss.toFixed(2)}`,\n    //             \"ratio win/loss\": `${(-report.ratio_winloss).toFixed(2)}`,\n    //             \"profit/trade\": `${report.average.toFixed(2)}`,\n    //             \"max loss\": `${report.max_loss.toFixed(2)}`,\n    //             profit: `${report.profit.toFixed(2)}`,\n    //         },\n    //         { color: report.win_ratio > 0.5 ? \"red\" : \"green\" }\n    //     );\n    // }\n    // p.printTable();\n}\n\nexport { parseWorkdayReports, showWorkdayReports };\n\n//\n// {\n//     transeq: stock.transeq,\n//     tradeDate: translog.tradeDate,\n//     profit: stock.buy.total + translog.total,\n//     income: translog.count * translog.price - stock.count * stock.price,\n//     buy: stock.buy,\n//     sell: translog,\n// }\n// transaction\n// {\n//     date: tradeDate,\n//     dateIndex: tradeDateIndex,\n//     type: \"buy\",\n//     count: count,\n//     price,\n//     total: total.total,\n//     amount: total.amount,\n//     fee: total.fee,\n//     commission: total.commission,\n//     duty: total.duty,\n//     methodType,\n//     memo,\n// }\n","import {\n    readStockList,\n    readStockData,\n    stockDataNames,\n} from \"@wt/lib-wtda-query\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport debugpkg from \"debug\";\n\nimport utils from \"./utils\";\n// import { formatFxstr, calculatePrevAdjPrice } from \"./util\";\n\n// import stoploss from \"./stoploss\";\n// import mmb from \"./momentum-breakthrough\";\nimport engine from \"./transaction-engine\";\nimport trans from \"./transaction\";\nimport * as reports from \"./reports\";\n\nconst log = console.log;\nconst debug = debugpkg(\"sim\");\n\nfunction showOptionsInfo(options) {\n    let buys = \"\";\n    let usedRules = {};\n    for (let rule of options.rules.buy) {\n        buys += `${rule.name}, `;\n        if (!(rule.label in usedRules)) {\n            usedRules[rule.label] = rule;\n        }\n    }\n\n    let sells = \"\";\n    for (let rule of options.rules.sell) {\n        sells += `${rule.name}, `;\n        if (!(rule.label in usedRules)) {\n            usedRules[rule.label] = rule;\n        }\n    }\n\n    let rules_desc = \"\";\n    for (let label in usedRules) {\n        rules_desc += usedRules[label].showOptions(options);\n    }\n\n    console.log(\n        `初始资金:        ${utils.formatFxstr(options.initBalance)}元 \n测试交易资金模式:  ${options.fixCash ? \"固定头寸\" : \"累计账户\"}\n测试数据周期: ${options.startDate}\n\n规则：\n买入模型：${buys}\n卖出模型：${sells}\n\n${rules_desc}\n`\n    );\n}\n\nasync function simulate(options) {\n    // 显示目前的配置模拟信息\n    showOptionsInfo(options);\n\n    // 首先根据设置获得列表，列表内容为需要进行算法计算的各个股票\n    //  TODO: 这里先读取全部的列表\n    let stockListData = await readStockList();\n    if (!stockListData || !stockListData.data) {\n        log(`没有读取到股票列表，无法处理日线数据`);\n        return;\n    }\n    let stockList = stockListData.data;\n    // 重新过滤可用的\n    stockList = await filterStockList(stockList, options);\n    log(`算法执行 ${stockList && stockList.length} 条数据`);\n    // data存放股票列表的基本信息：\n    // {\n    //      ts_code: '000001.SZ', symbol: '000001', name: '平安银行',\n    //      market: '主板', exchange: 'SZSE',\n    //      area: '深圳', industry: '银行', fullname: '平安银行股份有限公司',\n    //      enname: 'Ping An Bank Co., Ltd.', curr_type: 'CNY',\n    //      list_status: 'L', list_date: '19910403', delist_date: null, is_hs: 'S'\n    // }\n    // this.log(`%o`, stockList[0]);\n    // 后续的执行为列表的循环计算，这里的算法因为主要是CPU计算类型，只有输入和输出部分有I/O运算，因此不考虑\n\n    log(\"\");\n    // 下一步开始按照给出的数据循环进行处理\n    for (let stockItem of stockList) {\n        // this.log(`处理数据：%o`, stockItem);\n\n        // 首先读取日线信息\n        let stockData = await readStockData(\n            stockDataNames.daily,\n            stockItem.ts_code\n        );\n        // 准备资金账户数据\n        let capitalData = {\n            info: stockItem,\n            balance: options.fixCash ? 0 : options.initBalance, // 初始资金\n            stocks: [], // 持有的股票信息，每次买入单独一笔记录，分别进行处理，结构{ count: 0, price: 0, buy: transaction }, // 持有股票信息\n            transactions: [], // 交易记录 {tradeDate: 完成日期, profit: 利润, income: 收入, buy: transaction, sell: transaction}\n            //transaction { date: , count: 交易数量, price: 交易价格, total: 总金额, amount: 总价, fee: 交易费用, memo: 备注信息 }\n            _transeq: 0, // 当前交易序号，获取后要自己增加，对应一次股票的买卖使用同一个序号\n        };\n        if (stockData) {\n            log(\n                `[${stockItem.ts_code}]${\n                    stockItem.name\n                } 【数据更新时间：${moment(stockData.updateTime).format(\n                    \"YYYY-MM-DD HH:mm\"\n                )}】`\n            );\n            // 日线数据条数 ${\n            //     stockData.data && stockData.data.length\n            // }, 从${stockData.startDate}到${\n            //     stockData.endDate\n            // }，\n\n            // log(\n            //     `*** 01: ${stockData.data[440].trade_date}, ${stockData.data[440].open}`\n            // );\n            // 首先过滤历史数据，这里将日线数据调整为正常日期从历史到现在\n            stockData = await filterStockData(stockData, options);\n            // log(\n            //     `*** 02: ${stockData.data[0].trade_date}, ${stockData.data[0].open}`\n            // );\n\n            // 全部数据调整为前复权后再执行计算\n            // calculatePrevAdjPrice(stockData);\n\n            // 开始按照日期执行交易算法\n            let startDate = moment(options.startDate, \"YYYYMMDD\");\n            let currentDate = null;\n            for (let index = 0; index < stockData.data.length; index++) {\n                let daily = stockData.data[index];\n                let tradeDate = moment(daily.trade_date, \"YYYYMMDD\");\n                if (_.isEmpty(currentDate)) {\n                    if (startDate.isAfter(tradeDate)) {\n                        continue;\n                    }\n                    debug(\n                        `找到开始日期，开始执行算法！${index}, ${daily.trade_date}`\n                    );\n                } else {\n                    debug(`执行算法！${index}, ${daily.trade_date}`);\n                }\n                currentDate = tradeDate;\n                // this.log(`%o`, engine);\n                // let trans =\n                await engine.executeTransaction(\n                    index,\n                    stockData.data,\n                    capitalData,\n                    options\n                );\n            }\n\n            trans.showCapitalReports(log, capitalData);\n            if (options.showTrans) {\n                trans.showTransactions(log, capitalData);\n            }\n            if (options.showWorkdays) {\n                reports.showWorkdayReports(log, capitalData.transactions);\n            }\n        } else {\n            log(\n                `[${stockItem.ts_code}]${stockItem.name} 没有日线数据，请检查！`\n            );\n        }\n    }\n}\n\n// /**\n//  * 将日线数据中的历史价位根据复权因子全部处理为前复权结果，方便后续计算\n//  *\n//  * @param {*} dailyData 日线数据\n//  * @param {int} digits 保留位数\n//  */\n// function calculatePrevAdjPrice(dailyData, digits = 2) {\n//     if (dailyData && dailyData.data && dailyData.data.length > 0) {\n//         dailyData.data.forEach((item) => {\n//             if (item.prevadj_factor) {\n//                 item.open = Number(\n//                     (item.open * item.prevadj_factor).toFixed(digits)\n//                 );\n//                 item.close = Number(\n//                     (item.close * item.prevadj_factor).toFixed(digits)\n//                 );\n//                 item.high = Number(\n//                     (item.high * item.prevadj_factor).toFixed(digits)\n//                 );\n//                 item.low = Number(\n//                     (item.low * item.prevadj_factor).toFixed(digits)\n//                 );\n//                 item.pre_close = Number(\n//                     (item.pre_close * item.prevadj_factor).toFixed(digits)\n//                 );\n//                 item.change = Number(\n//                     (item.change * item.prevadj_factor).toFixed(digits)\n//                 );\n//             }\n//         });\n//     }\n// }\n\n/**\n * 这里定义一个过滤列表的接口方法，利用options来过滤后续使用的股票\n * 返回为一个符合条件的列表\n * 这里后续考虑调整一下接口定义，目前暂时简化处理\n */\nasync function filterStockList(stockList, options) {\n    // let retStockList = [];\n    return options.selectedStocks.map((tsCode) => {\n        let tmp = stockList.filter((item) => {\n            return item.ts_code === tsCode;\n        });\n        // console.log(`${tmp && tmp.length}, %o`, tmp[0]);\n        return tmp[0];\n    });\n}\n\n/**\n * 这里提供对单个数据的调整，主要应当是一些额外的数据计算添加，周期过滤等\n *\n * @param {*} stockData 股票日线数据对象\n * @param {*} options 数据过滤条件\n */\nasync function filterStockData(stockData, options) {\n    utils.checkTradeData(stockData && stockData.data);\n\n    debug(\n        `过滤数据范围：${options && options.startDate}, ${\n            stockData && stockData.data && stockData.data.length\n        }`\n    );\n    if (\n        options &&\n        options.startDate &&\n        stockData &&\n        stockData.data &&\n        stockData.data.length > 0\n    ) {\n        if (stockData.data[0].trade_date < options.startDate) {\n            let index = stockData.data.findIndex((data, i) => {\n                return data.trade_date >= options.startDate;\n            });\n\n            if (index) {\n                stockData.data = stockData.data.slice(index);\n            } else {\n                stockData.data = [];\n            }\n        }\n    }\n    debug(\n        `过滤后数据长度：${\n            stockData && stockData.data && stockData.data.length\n        }`\n    );\n\n    // stockData.data.reverse();\n    return stockData;\n}\n\nexport default simulate;\n","import {\n    getDataRoot,\n    readStockList,\n    readStockData,\n    stockDataNames,\n} from \"@wt/lib-wtda-query\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport debugpkg from \"debug\";\n\nimport utils from \"./utils\";\n\n// import { calculatePrevAdjPrice } from \"./util\";\n\n// import engine from \"./transaction-engine\";\n// import trans from \"./transaction\";\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst fp = fs.promises;\n\nconst log = console.log;\nconst debug = debugpkg(\"search\");\n\nfunction showOptionsInfo(options) {\n    let rules = options && options.match && options.match.rules;\n    console.log(`测试数据周期: ${options.startDate}`);\n\n    for (let rule of rules) {\n        console.log(`${rule.showOptions(options)}`);\n    }\n}\n\nasync function search(options) {\n    // 显示目前的配置模拟信息\n    showOptionsInfo(options);\n\n    // 首先根据设置获得列表，列表内容为需要进行算法计算的各个股票\n    let stockListData = await readStockList();\n    if (!stockListData || !stockListData.data) {\n        log(`没有读取到股票列表，无法处理日线数据`);\n        return;\n    }\n    let stockList = stockListData.data;\n    // 重新过滤可用的\n    stockList = await filterStockList(stockList, options);\n    log(`算法执行 ${stockList && stockList.length} 条数据`);\n\n    log(\"\");\n\n    let allSignals = {};\n    // let foundSignals = {};\n    // 下一步开始按照给出的数据循环进行处理\n    for (let stockItem of stockList) {\n        // this.log(`处理数据：%o`, stockItem);\n        if (stockItem.name.match(\"ST\")) {\n            continue;\n        }\n\n        // 首先读取日线信息\n        let stockData = await readStockData(\n            stockDataNames.daily,\n            stockItem.ts_code\n        );\n\n        if (stockData) {\n            debug(\n                `[${stockItem.ts_code}]${\n                    stockItem.name\n                } 【数据更新时间：${moment(stockData.updateTime).format(\n                    \"YYYY-MM-DD HH:mm\"\n                )}】`\n            );\n\n            // 首先过滤历史数据，这里将日线数据调整为正常日期从历史到现在\n            stockData = await prepareStockData(stockData, options);\n\n            debug(`执行算法！${stockData.data.length - 1}`);\n\n            let rules = options && options.match && options.match.rules;\n            for (let rule of rules) {\n                let matched = rule.check(\n                    stockData.data.length - 1,\n                    stockData.data,\n                    options,\n                    stockItem.ts_code\n                );\n                // log(`ret: %o`, matched);\n                if (matched && matched.hasSignals) {\n                    let foundSignals = allSignals[rule.label];\n                    if (!foundSignals) {\n                        allSignals[rule.label] = {};\n                        foundSignals = allSignals[rule.label];\n                    }\n\n                    log(\n                        `**  [${stockItem.ts_code}]${stockItem.name} 信号:${matched.tradeType} ${matched.memo}`\n                    );\n                    let signal = matched.signal;\n                    if (signal) {\n                        if (signal in foundSignals) {\n                            foundSignals[signal].push(matched);\n                        } else {\n                            foundSignals[signal] = [matched];\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //let report = options && options.match && options.match.report;\n    let rules = options && options.match && options.match.rules;\n    let reports = {\n        updateTime: moment().toISOString(),\n        reports: [],\n    };\n\n    // 如果存在多个规则，符合多个规则的信号单独提取并显示\n    let dupList = {};\n    let needDupList = rules && rules.length > 1;\n    for (let rule of rules) {\n        let ruleData = await rule.createReports(\n            allSignals[rule.label],\n            options\n        );\n        if (ruleData && ruleData.length > 0) {\n            reports.reports.push({ label: rule.label, data: ruleData });\n\n            if (needDupList) {\n                // TODO:\n                for (let stateList of ruleData) {\n                    // let stateList = ruleData[state];\n                    // console.log(`stateList ${stateList.label}`);\n                    if (stateList && stateList.data.length > 0) {\n                        for (let codeList of stateList.data) {\n                            // console.log(`codeList ${codeList.label}`);\n                            if (codeList && codeList.data.length > 0) {\n                                for (let code of codeList.data) {\n                                    if (dupList[code]) {\n                                        dupList[code] = dupList[code] + 1;\n                                    } else {\n                                        dupList[code] = 1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // let ruleData = reports[rule.label];\n    }\n\n    if (needDupList) {\n        let dupReports = { label: \"多重信号\", data: [] };\n        for (let i = rules.length; i > 1; i--) {\n            let tmp = { label: \"重叠\" + i, data: [] };\n            for (let code in dupList) {\n                if (dupList[code] && dupList[code] === i) {\n                    tmp.data.push(code);\n                }\n            }\n            if (tmp.data.length > 0) {\n                dupReports.data.push(tmp);\n            }\n        }\n        if (dupReports.data.length > 0) {\n            log(`有发现重叠的重要报告！`);\n            reports.reports.unshift({ label: \"重要\", data: [dupReports] });\n        }\n    }\n\n    // let reports = await report.createReports(foundSignals, options);\n    await saveReports(reports);\n\n    log(` *** 报告存储完毕！ ***`);\n    // for (let item in foundSignals) {\n    //     let list = foundSignals[item];\n    //     log(`*** 信号类型：${item}，共发现${list && list.length} ***`);\n    //     // for (let code of list) {\n    //     //     log(`  \"${code}\",`);\n    //     // }\n    // }\n\n    // let buyList = reports && reports.squeeze && reports.squeeze.buyList;\n    // let readyList = reports && reports.squeeze && reports.squeeze.readyList;\n    // let boundaries = [\"1天\", \"2天\", \"3天\", \"5~8天\", \"8~13天\", \"超13天\"];\n    // for (let i = 0; i < boundaries.length; i++) {\n    //     log(\n    //         `** 买入信号【${boundaries[i]}】： ${buyList && buyList[i].length}`\n    //     );\n    // }\n    // for (let i = 0; i < boundaries.length; i++) {\n    //     log(\n    //         `** 准备信号【${boundaries[i]}】： ${\n    //             readyList && readyList[i].length\n    //         }`\n    //     );\n    // }\n}\n\nfunction getReportsFile() {\n    return path.join(getDataRoot(), \"reports.json\");\n}\n\nasync function saveReports(data) {\n    try {\n        let jsonStr = JSON.stringify(data);\n        let filePath = getReportsFile();\n\n        await fp.writeFile(filePath, jsonStr, { encoding: \"utf-8\" });\n    } catch (error) {\n        throw new Error(\"保存报告数据时出现错误，请检查后重新执行：\" + error);\n    }\n}\n\nasync function readReports() {\n    let retData = {\n        updateTime: null,\n    };\n\n    try {\n        let dataFile = getReportsFile();\n        try {\n            retData = JSON.parse(await fp.readFile(dataFile, \"utf-8\"));\n        } catch (error) {\n            // 文件不存在，不考虑其它错误\n            if (!(error && error.code === \"ENOENT\")) {\n                console.error(\n                    `读取报告文件${dataFile}时发生错误：${error}, %o`,\n                    error\n                );\n            } else {\n                console.error(`读取报告文件${dataFile}不存在，%o`, error);\n            }\n        }\n    } catch (error) {\n        console.error(`从本地读取报告数据发生错误 ${error}`);\n    }\n    return retData;\n}\n\n/**\n * 这里定义一个过滤列表的接口方法，利用options来过滤后续使用的股票\n * 返回为一个符合条件的列表\n * 这里后续考虑调整一下接口定义，目前暂时简化处理\n */\nasync function filterStockList(stockList, options) {\n    if (options.all) return stockList;\n    // let retStockList = [];\n    return options.selectedStocks.map((tsCode) => {\n        let tmp = stockList.filter((item) => {\n            return item.ts_code === tsCode;\n        });\n        // console.log(`${tmp && tmp.length}, %o`, tmp[0]);\n        return tmp[0];\n    });\n}\n\n/**\n * 这里提供对单个数据的调整，主要应当是一些额外的数据计算添加，周期过滤等\n *\n * @param {*} stockData 股票日线数据对象\n * @param {*} options 数据过滤条件\n */\nasync function prepareStockData(stockData, options) {\n    utils.checkTradeData(stockData && stockData.data);\n\n    if (stockData && stockData.data && stockData.data.length > 0) {\n        if (stockData.data[0].trade_date < options.startDate) {\n            let index = stockData.data.findIndex((data, i) => {\n                return data.trade_date >= options.startDate;\n            });\n\n            if (index) {\n                stockData.data = stockData.data.slice(index);\n            } else {\n                stockData.data = [];\n            }\n        }\n    }\n    // stockData.data.reverse();\n    return stockData;\n}\n\nexport default { search, readReports };\n","import _ from \"lodash\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"rules:benchmark\");\n\n/**\n * 基准参数，用于测量正常买入卖出情况下的基准效果\n * 采用的买入策略为开盘买入，第二天收盘卖出；或者止损平仓\n */\nconst RULE_NAME = \"benchmark\";\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    // let bmOptions = options && options[RULE_NAME];\n    let currentData = stockData[index];\n    // console.log(`跟踪信息： ${stockData.length}, ${index}`, currentData);\n    let targetPrice = currentData.open;\n    let tradeDate = stockData[index].trade_date;\n\n    debug(\n        `基准买入：[${tradeDate} price=${targetPrice} open=${currentData.open} close=${currentData.close}]`\n    );\n    return trans.createBuyTransaction(\n        stockInfo,\n        tradeDate,\n        index,\n        balance,\n        targetPrice,\n        RULE_NAME,\n        `基准买入 ${targetPrice.toFixed(2)}`\n    );\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n    let bmoptions = options && options[RULE_NAME];\n    let priceType = bmoptions.sellPrice;\n\n    if (priceType === \"open\") {\n        debug(\n            `基准卖出：[${tradeDate} price=${currentData.open} open=${currentData.open} close=${currentData.close}]`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            priceType,\n            `开盘卖出 ${currentData.open})`\n        );\n    } else if (priceType === \"close\") {\n        debug(\n            `基准卖出：[${tradeDate} price=${currentData.close} open=${currentData.open} close=${currentData.close}]`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            priceType,\n            `收盘卖出 ${currentData.close}`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${benchmark.name}[${benchmark.label}] 参数：\n卖出类型: ${options.benchmark.sellPrice}\n`;\n}\n\nlet benchmark = {\n    name: \"基准\",\n    label: RULE_NAME,\n    description: \"基准测试\",\n    methodTypes: {\n        open: \"开盘卖出\",\n        close: \"收盘卖出\",\n    },\n    checkBuyTransaction,\n    checkSellTransaction,\n    showOptions,\n};\n\nexport default benchmark;\n","import _ from \"lodash\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"rules:mmb\");\n\nconst OPTIONS_NAME = \"mmb\";\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {*} tradeDate 交易日期\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkMMBBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    let mmboptions = options && options[OPTIONS_NAME];\n    // 平均波幅的计算日数\n    let N = mmboptions.N;\n    // 波幅突破的百分比\n    let P = mmboptions.P;\n\n    let moment = 0;\n    for (let i = 0; i < N; i++) {\n        if (index - i - 1 >= 0) {\n            let tmp = stockData[index - i - 1];\n            if (mmboptions.mmbType === \"hl\") {\n                moment += tmp.high - tmp.low;\n            } else {\n                moment += tmp.high - tmp.close;\n            }\n        }\n    }\n    moment = moment / N;\n\n    let currentData = stockData[index];\n    // console.log(`跟踪信息： ${stockData.length}, ${index}`, currentData);\n    let targetPrice = currentData.open + moment * P;\n    let tradeDate = stockData[index].trade_date;\n\n    debug(\n        `买入条件检查${tradeDate}: ${targetPrice.toFixed(2)}=${\n            currentData.open\n        }+${moment.toFixed(2)}*${P} [o: ${currentData.open}, h: ${\n            currentData.high\n        }, l: ${currentData.low}, c: ${currentData.close}, d: ${\n            currentData.trade_date\n        }]`\n    );\n    if (currentData.high >= targetPrice && currentData.open <= targetPrice) {\n        // 执行买入交易\n        debug(`符合条件：${tradeDate}`);\n        return trans.createBuyTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            balance,\n            targetPrice,\n            \"mmb\",\n            `动能突破买入 ${targetPrice.toFixed(2)} (=${\n                currentData.open\n            }+${moment.toFixed(2)}*${(P * 100).toFixed(2)}%)`\n        );\n    }\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkMMBSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    // 检查是否符合动能突破买入条件\n    // if (\n    //     !options.nommbsell &&\n    //     !_.isEmpty(\n    //         checkMMBBuyTransaction(\n    //             stockInfo,\n    //             options.initBalance,\n    //             index,\n    //             stockData,\n    //             options\n    //         )\n    //     )\n    // ) {\n    //     // 可以买入，那么当日保持\n    //     return;\n    // }\n\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n    let mmboptions = options && options[OPTIONS_NAME];\n\n    // 目前有持仓，检查是否达到盈利卖出条件\n    if (!mmboptions.nommb1 && currentData.open > stock.price) {\n        // 采用第二天开盘价盈利就卖出的策略\n        debug(\n            `开盘盈利策略符合：${currentData.open.toFixed(\n                2\n            )} (> ${stock.price.toFixed(2)})`\n        );\n        return engine.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            \"mmb1\",\n            `开盘盈利卖出 ${currentData.open} (> ${stock.price.toFixed(2)})`\n        );\n    }\n\n    if (!mmboptions.nommb2) {\n        // 平均波幅的计算日数\n        let N = mmboptions.N;\n        // 止损使用的波幅下降百分比\n        let L = mmboptions.L;\n        // 有持仓，检查是否达到卖出条件\n        // 第一个卖出条件是买入后按照买入价格及波动数据的反向百分比设置\n        let moment = 0;\n        for (let i = 0; i < N; i++) {\n            if (index - i - 1 >= 0) {\n                let tmp = stockData[index - i - 1];\n                if (mmboptions.mmbType === \"hl\") {\n                    moment += tmp.high - tmp.low;\n                } else {\n                    moment += tmp.high - tmp.close;\n                }\n            }\n        }\n        moment = moment / N;\n\n        let targetPrice = currentData.open - moment * L;\n        if (targetPrice <= currentData.open && targetPrice >= currentData.low) {\n            // 执行波动卖出\n            return trans.createSellTransaction(\n                stockInfo,\n                tradeDate,\n                index,\n                stock.count,\n                targetPrice,\n                \"mmb2\",\n                `动能突破卖出：${targetPrice.toFixed(2)} (= ${\n                    currentData.open\n                }-${moment.toFixed(2)}*${L * 100}%)`\n            );\n        }\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${mmb.name}[${mmb.label}] 参数：\n波幅类型 [${options.mmb.mmbType === \"hc\" ? \"最高-收盘\" : \"最高-最低\"}]\n动能平均天数: ${options.mmb.N}\n动能突破买入比例: ${options.mmb.P * 100}%\n动能突破卖出比例: ${options.mmb.L * 100}%\n规则：\n  1. [${options.mmb.nommb1 ? \"🚫\" : \"✅\"}] 开盘盈利锁定\n  2. [${options.mmb.nommb2 ? \"🚫\" : \"✅\"}] 动能向下突破卖出\n`;\n}\n\nlet mmb = {\n    name: \"MMB(动能穿透)\",\n    label: \"mmb\",\n    description: \"动能穿透\",\n    methodTypes: {\n        mmb: \"动能突破买入\",\n        mmb1: \"开盘盈利卖出\",\n        mmb2: \"动能突破卖出\",\n    },\n    checkBuyTransaction: checkMMBBuyTransaction,\n    checkSellTransaction: checkMMBSellTransaction,\n    showOptions,\n};\n\nexport default mmb;\n","// const _ = require(\"lodash\");\nimport _ from \"lodash\";\n// const engine = require(\"./transaction-engine\");\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"rules:stoploss\");\n\nconst OPTIONS_NAME = \"stoploss\";\n\n/**\n * 检查是否需要执行止损\n * @param {*} stocks 持仓信息\n * @param {int} index 交易日索引位置\n * @param {*} stockData 日线数据\n */\nfunction checkStoplossTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let currentData = stockData[index];\n    // 止损最大损失比例\n    let S = options && options[OPTIONS_NAME].S;\n\n    // 这里检查纯粹的百分比止损\n    let tradeDate = currentData.trade_date;\n    let lossPrice = stock.price * (1 - S);\n    debug(\n        `止损检查${tradeDate}: ${currentData.low}] <= ${lossPrice.toFixed(\n            2\n        )} (=${stock.price.toFixed(2)}*(1-${(S * 100).toFixed(2)}%))`\n    );\n    if (currentData.low <= lossPrice) {\n        // 当日价格范围达到止损值\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            lossPrice,\n            \"stoploss\",\n            `止损 ${lossPrice.toFixed(2)} (=${stock.price.toFixed(2)}*(1-${\n                S * 100\n            }%))`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${stoploss.name}[${stoploss.label}] 参数：\n止损比例: ${options.stoploss.S * 100}%\n`;\n}\n\nlet stoploss = {\n    name: \"止损\",\n    label: \"stoploss\",\n    description: \"止损\",\n    methodTypes: {\n        stoploss: \"止损卖出\",\n    },\n    checkSellTransaction: checkStoplossTransaction,\n    showOptions,\n};\n\nexport default stoploss;\n","import _ from \"lodash\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"outsideday\");\n\n/**\n * 外包日模式，主要针对买入定义\n */\nconst RULE_NAME = \"outsideday\";\n\n/**\n * 检查外包日买入条件\n * 1. 前一天为外包日结构，T-1， T-2两天的价格要求满足，T-1价格范围外包T-2，并且T-1收盘价低于T-2最低价\n * 2. 今日T日的开盘价低于T-1外包日收盘价以下\n *\n * 买入价格定为T-1日收盘价\n *\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    if (index < 2) return;\n    // debug(`外包日买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    // let bmOptions = options && options[RULE_NAME];\n    let data2 = stockData[index - 2];\n    let data1 = stockData[index - 1];\n    let currentData = stockData[index];\n\n    // 外包日条件\n    if (data1.high < data2.high || data1.low > data2.low) return;\n    // 外包日收盘低于前一日最低\n    if (data1.close > data2.low) return;\n    // 今日开盘低于外包日收盘\n    if (currentData.open >= data1.close) return;\n\n    // console.log(`跟踪信息： ${stockData.length}, ${index}`, currentData);\n    let targetPrice = currentData.close; // data1.close;\n    let tradeDate = currentData.trade_date;\n\n    debug(`找到外包日模式：\n    [${tradeDate} open=${currentData.open}, close=${currentData.close}] \n    [${data1.trade_date}: high=${data1.high}, low=${data1.low}, close=${data1.close}]\n    [${data2.trade_date}: high=${data1.high}, low=${data1.low}]\n    `);\n    return trans.createBuyTransaction(\n        stockInfo,\n        tradeDate,\n        index,\n        balance,\n        targetPrice,\n        RULE_NAME,\n        `外包日买入 ${targetPrice.toFixed(2)}`\n    );\n}\n\n// /**\n//  * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n//  *\n//  * @param {*} info 股票信息\n//  * @param {*} stock 持仓信息\n//  * @param {*} index 今日数据索引位置\n//  * @param {*} stockData 日线数据\n//  * @param {*} options 算法参数\n//  */\n// function checkSellTransaction(stockInfo, stock, index, stockData, options) {\n//     if (_.isEmpty(stock) || stock.count <= 0) return;\n\n//     let currentData = stockData[index];\n//     let tradeDate = currentData.trade_date;\n//     let bmoptions = options && options[RULE_NAME];\n//     let priceType = bmoptions.sellPrice;\n\n//     if (priceType === \"open\") {\n//         return engine.createSellTransaction(\n//             stockInfo,\n//             tradeDate,\n//             index,\n//             stock.count,\n//             currentData.open,\n//             priceType,\n//             `开盘卖出 ${currentData.open})`\n//         );\n//     } else if (priceType === \"close\") {\n//         return engine.createSellTransaction(\n//             stockInfo,\n//             tradeDate,\n//             index,\n//             stock.count,\n//             currentData.open,\n//             priceType,\n//             `收盘卖出 ${currentData.close}`\n//         );\n//     }\n// }\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n`;\n}\n\nlet outsideday = {\n    name: \"外包日\",\n    label: RULE_NAME,\n    description: \"外包日买入\",\n    methodTypes: {},\n    checkBuyTransaction,\n    // checkSellTransaction,\n    showOptions,\n};\n\nexport default outsideday;\n","import _ from \"lodash\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"opensell\");\n\nconst OPTIONS_NAME = \"opensell\";\n\n/**\n * 开盘盈利卖出\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n\n    // 目前有持仓，检查是否达到开盘盈利卖出条件\n    if (currentData.open > stock.price) {\n        debug(\n            `开盘盈利策略符合：${currentData.open.toFixed(\n                2\n            )} (> ${stock.price.toFixed(2)})`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            currentData.open,\n            OPTIONS_NAME,\n            `开盘盈利卖出 ${currentData.open} (> ${stock.price.toFixed(2)})`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n`;\n}\n\nlet opensell = {\n    name: \"开盘盈利\",\n    label: OPTIONS_NAME,\n    description: \"开盘盈利卖出\",\n    methodTypes: {},\n    // checkBuyTransaction: checkMMBBuyTransaction,\n    checkSellTransaction,\n    showOptions,\n};\n\nexport default opensell;\n","import _ from \"lodash\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"smashday\");\n\n/**\n * 攻击日模式\n */\nconst RULE_NAME = \"smashday\";\n\n/**\n * 检查指定序号的日期数据是否符合当前模型定义形态\n *\n * @param {int} index 日期序号\n * @param {*} stockData 数据\n * @param {*} options 参数配置\n */\nfunction check(index, stockData, options) {\n    if (index < 1) return;\n    let type = options && options.smashday.type;\n    let currentData = stockData[index];\n    let data1 = stockData[index - 1];\n    let tradeDate = currentData.trade_date;\n\n    if (type === \"smash1\" && currentData.close < data1.low) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"buy\",\n            type: \"smash1\",\n            targetPrice: currentData.high,\n            memo: `突出收盘买入 [${tradeDate} ${currentData.close} < ${data1.low}，小于前一日最低]，在达到今日最大为反转可买入 ${currentData.high}`,\n        };\n    } else if (type === \"smash1\" && currentData.close > data1.high) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"sell\",\n            type: \"smash1\",\n            targetPrice: currentData.low,\n            memo: `突出收盘卖出 [${tradeDate} ${currentData.close} > ${data1.high}，大于前一日最高]，在达到今日最低为反转可卖出 ${currentData.low}`,\n        };\n    } else if (\n        type === \"smash2\" &&\n        currentData.close > data1.close &&\n        (currentData.close - currentData.low) /\n            (currentData.high - currentData.low) <\n            0.25\n    ) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"buy\",\n            type: \"smash2\",\n            targetPrice: currentData.high,\n            memo: `隐藏攻击买入 [${tradeDate} ${currentData.close} > ${data1.close}，收盘上涨，且在今日价格下方25% (${currentData.high}, ${currentData.low})]，在达到今日最高可买入 ${currentData.high}`,\n        };\n    } else if (\n        type === \"smash2\" &&\n        currentData.close < data1.close &&\n        (currentData.close - currentData.low) /\n            (currentData.high - currentData.low) >\n            0.75\n    ) {\n        return {\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"sell\",\n            type: \"smash2\",\n            targetPrice: currentData.low,\n            memo: `隐藏攻击卖出 [${tradeDate} ${currentData.close} < ${data1.close}，收盘下跌，且在今日价格上方25% (${currentData.high}, ${currentData.low})]，在达到今日最低可卖出 ${currentData.low}`,\n        };\n    }\n}\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    let buy = options.smashday && options.smashday.buy;\n    let validDays = buy.validDays || 3;\n    for (let i = 0; i < validDays; i++) {\n        let matched = check(index - i, stockData, options);\n        let smashType = buy.type || \"smash1\";\n        let currentData = stockData[index];\n        let tradeDate = currentData.trade_date;\n        let targetPrice = matched.targetPrice;\n        if (matched && matched.trade_date === \"buy\") {\n            if (\n                matched.type === smashType &&\n                currentData.high >= matched.targetPrice\n            ) {\n                debug(\n                    `攻击日为[${matched.date}]，今日满足目标价位：${matched.targetPrice} [${currentData.low}, ${currentData.high}]`\n                );\n                return trans.createBuyTransaction(\n                    stockInfo,\n                    tradeDate,\n                    index,\n                    balance,\n                    targetPrice,\n                    RULE_NAME,\n                    `攻击日[${matched.type}]买入${targetPrice.toFixed(2)}`\n                );\n            }\n        }\n    }\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let sell = options.smashday && options.smashday.sell;\n    let validDays = sell.validDays || 3;\n    for (let i = 0; i < validDays; i++) {\n        let matched = check(index - i, stockData, options);\n        let smashType = sell.type || \"smash1\";\n        let currentData = stockData[index];\n        let tradeDate = currentData.trade_date;\n        let targetPrice = matched.targetPrice;\n        if (matched && matched.trade_date === \"sell\") {\n            if (matched.type === smashType && currentData.low <= targetPrice) {\n                debug(\n                    `攻击日为[${matched.date}]，今日满足目标价位：${targetPrice} [${currentData.low}, ${currentData.high}]`\n                );\n                return trans.createSellTransaction(\n                    stockInfo,\n                    tradeDate,\n                    index,\n                    stock.count,\n                    targetPrice,\n                    RULE_NAME,\n                    `攻击日[${matched.type}]卖出${targetPrice.toFixed(2)}`\n                );\n            }\n        }\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    let buy = options && options.smashday && options.smashday.buy;\n    let sell = options && options.smashday && options.smashday.sell;\n    return `\n模型 ${smashday.name}[${smashday.label}] 参数：\n买入有效期: ${buy.validDays}\n买入类型: ${buy.type}, ${smashday.methodTypes[buy.type]}\n\n卖出有效期: ${sell.validDays}\n卖出类型: ${sell.type}, ${smashday.methodTypes[sell.type]}\n`;\n}\n\nlet smashday = {\n    name: \"攻击日\",\n    label: RULE_NAME,\n    description: \"攻击日模型\",\n    methodTypes: {\n        smash1: \"突出收盘价\",\n        smash2: \"隐藏攻击日\",\n    },\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n};\n\nexport default smashday;\n","/**\n * 平均价\n *\n * 参数\n *  type：ma，算术平均； ema，指数移动平均\n *  source: close | ohlc\n */\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\n/**\n * 计算移动平均，返回ma数据\n * @param {*} tradeData 所有数据\n * @param {*} options 参数，n 平均周期, type 平均类型, digits 保留小数位数\n */\nfunction ma(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    return utils.ma(\n        tradeData,\n        options && options.n,\n        (options && options.source) === \"ohlc\" ? utils.ohlc : \"close\",\n        options && options.type,\n        options && options.digits\n    );\n}\n\nexport default {\n    name: \"均值\",\n    label: \"MA\",\n    description: \"平均收盘价\",\n    calculate: ma,\n};\n","/**\n * ATR 指标，平均真实幅度\n *\n * 参数\n *  n: 表示平均天数\n *  type：表示均值类型，ma 算术平均，ema 指数移动平均\n *\n * TR = max[h-l, abs(h-cp), abs(l-cp)]\n * cp 表示昨日收盘\n *\n * ATR = Sum(TR, n)/n, 表示n天TR的算术平均\n */\n\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\n/**\n * 计算ATR指标\n * @param {Array} tradeData 数据数组\n * @param {*} options 参数配置，ATR包含n属性\n */\nfunction atr(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    return utils.ma(\n        tradeData,\n        options.n,\n        utils.tr,\n        options && options.type,\n        options && options.digits\n    );\n}\n\nexport default {\n    name: \"ATR\",\n    label: \"平均真实波幅\",\n    description: \"表示在一定周期内价格的最大波动偏离幅度\",\n    calculate: atr,\n};\n","/**\n * Keltner Channel，肯特钠通道\n * 类似于布林带的带状指标，由上中下三条轨道组成\n *\n * 中轨：移动平均线，参数n\n * 上/下轨：移动平均线上下ATR*m距离\n *\n * 参数定义：\n *  n：移动平均天数，默认12，（Squeeze 为20）\n *  m：通道和中轨之间ATR值的倍数，默认1.5\n *  type1：价格移动平均类型，ma 简单移动平均，ema 指数移动平均，默认ema\n *  type2：atr移动平均类型，ma ｜ ema，默认 ma\n *  source: close | ohlc\n */\nimport _ from \"lodash\";\nimport MA from \"./ma\";\nimport ATR from \"./atr\";\nimport utils from \"../utils\";\n\nfunction keltner(tradeData, options) {\n    if (!tradeData || tradeData.length < 0) return;\n    utils.checkTradeData(tradeData);\n\n    let ma = MA.calculate(tradeData, {\n        n: options.n,\n        type: options.type1,\n        source: options.source,\n        digits: options.digits,\n    });\n    if (!ma) return;\n    let atr = ATR.calculate(tradeData, {\n        n: options.n,\n        type: options.type2,\n        digits: options.digits,\n    });\n    if (!atr) return;\n    let up = [];\n    let down = [];\n    for (let i = 0; i < ma.length; i++) {\n        up[i] = utils.toFixed(ma[i] + options.m * atr[i], options.digits);\n        down[i] = utils.toFixed(ma[i] - options.m * atr[i], options.digits);\n    }\n\n    return [ma, up, down, atr];\n}\n\nexport default {\n    name: \"科特钠通道\",\n    label: \"KC\",\n    description: \"科特钠通道\",\n    calculate: keltner,\n};\n","/**\n * 布林线指标\n *\n * 参数：\n *  n: 移动平均天数\n *  m: 上下轨到移动平均的标准差倍数\n *  source: close | ohlc\n *  ma: 移动平均类型，ma | ema\n *\n */\nimport utils from \"../utils\";\nimport MA from \"./ma\";\n\nfunction boll(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    let ma = MA.calculate(tradeData, {\n        n: options.n,\n        type: options.ma,\n        source: options.source,\n        digits: options.digits,\n    });\n    if (!ma) return;\n    let stdev = utils.stdev(\n        tradeData,\n        options.n,\n        (options && options.source) === \"ohlc\" ? utils.ohlc : \"close\",\n        options.digits\n    );\n    if (!stdev) return;\n\n    let up = [];\n    let down = [];\n    for (let i = 0; i < ma.length; i++) {\n        up[i] = utils.toFixed(ma[i] + options.m * stdev[i], options.digits);\n        down[i] = utils.toFixed(ma[i] - options.m * stdev[i], options.digits);\n    }\n\n    return [ma, up, down, stdev];\n}\n\nexport default {\n    name: \"BOLL\",\n    label: \"布林线\",\n    description: \"布林线指标\",\n    calculate: boll,\n};\n","/**\n * 基本动量指标\n *\n * 参数：\n *  n: 动量周期\n *  m: 平均天数\n *  source: close, ohlc\n */\n\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\nfunction mtm(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        !_.isEmpty(tradeData) &&\n        _.isArray(tradeData) &&\n        tradeData.length > 0 &&\n        options &&\n        options.n > 1\n    ) {\n        let source =\n            options && options.source === \"ohlc\" ? utils.ohlc : \"close\";\n        let digits = options.digits || 3;\n        let ma;\n        if (options && options.m && options.m > 1) {\n            ma = utils.ma(tradeData, options.m, source, \"ma\", digits);\n        } else {\n            ma = utils.ma(tradeData, 1, source, \"ma\", digits);\n        }\n\n        let momentum = tradeData.map((item, i, all) => {\n            if (i > options.n) {\n                return utils.toFixed(\n                    ma[i] - ma[i - options.n],\n                    //utils.readData(item, source) - ma[i - options.n],\n                    //utils.readData(all[i - options.n], source),\n                    digits\n                );\n            } else {\n                return 0;\n            }\n        });\n        // momentum = utils.ma(momentum, 6, undefined, \"ma\");\n        return momentum;\n    }\n}\n\nexport default {\n    name: \"MTM\",\n    label: \"动量指标\",\n    description: \"动量振荡器指标\",\n    calculate: mtm,\n};\n","/**\n * TTM Wave A & B & C\n *\n * 参数：\n *  n: wave 短周期平均\n *  ma: wave a 周期平均1\n *  la: wave a 周期平均2\n *  mb: wave b 周期平均1\n *  lb: wave b 周期平均2\n *  mc: wave c 周期平均1\n *  lc: wave c 周期平均2\n *\n *  useb: true\n *  usec: true\n *  source: close, ohlc\n */\n\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\nfunction subtract(array1, array2, digits) {\n    if (\n        _.isEmpty(array1) ||\n        _.isEmpty(array2) ||\n        array1.length !== array2.length\n    ) {\n        return;\n    }\n\n    return array1.map((item, i, all) => {\n        if (digits) {\n            return utils.toFixed(item - array2[i], digits);\n        } else {\n            return item - array2[i];\n        }\n    });\n}\n\nfunction ttmwave(\n    tradeData,\n    {\n        n = 8, // 5\n        ma = 34, // 21\n        la = 55, // 34\n        useb = true,\n        mb = 89, // 55\n        lb = 144, // 89\n        usec = true,\n        mc = 233, // 144\n        lc = 377, // 233\n        source = \"close\",\n        digits = 3,\n    } = {}\n) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        _.isEmpty(tradeData) ||\n        !_.isArray(tradeData) ||\n        tradeData.length <= 0\n    ) {\n        return;\n    }\n\n    if (source === \"ohlc\") {\n        source = utils.ohlc;\n    } else {\n        source = \"close\";\n    }\n    // let source = (options && options.source) == \"ohlc\" ? utils.ohlc : \"close\";\n    // let digits = (options && options.digits) || 3;\n    // let n = (options && options.n) || 8;\n\n    // let ma = (options && options.ma) || 34;\n    // let la = (options && options.la) || 55;\n    // let mb = (options && options.mb) || 89;\n    // let lb = (options && options.lb) || 144;\n    // let mc = (options && options.mb) || 233;\n    // let lc = (options && options.lb) || 377;\n\n    // wave A\n    let fastMA1 = utils.ma(tradeData, n, source, \"ema\", digits);\n    let slowMA1 = utils.ma(tradeData, ma, source, \"ema\", digits);\n    let macd1 = subtract(fastMA1, slowMA1);\n    let signal1 = utils.ma(macd1, ma, null, \"ema\", digits);\n    let hist1 = subtract(macd1, signal1, digits);\n\n    let fastMA2 = utils.ma(tradeData, n, source, \"ema\", digits);\n    let slowMA2 = utils.ma(tradeData, la, source, \"ema\", digits);\n    let macd2 = subtract(fastMA2, slowMA2);\n    let signal2 = utils.ma(macd2, la, null, \"ema\", digits);\n    let hist2 = subtract(macd2, signal2, digits);\n\n    // wave B\n    let fastMA3 = useb ? utils.ma(tradeData, n, source, \"ema\", digits) : null;\n    let slowMA3 = useb ? utils.ma(tradeData, mb, source, \"ema\", digits) : null;\n    let macd3 = useb ? subtract(fastMA3, slowMA3) : null;\n    let signal3 = useb ? utils.ma(macd3, mb, null, \"ema\", digits) : null;\n    let hist3 = useb ? subtract(macd3, signal3, digits) : null;\n\n    let fastMA4 = useb ? utils.ma(tradeData, n, source, \"ema\", digits) : null;\n    let slowMA4 = useb ? utils.ma(tradeData, lb, source, \"ema\", digits) : null;\n    let macd4 = useb ? subtract(fastMA4, slowMA4) : null;\n    let signal4 = useb ? utils.ma(macd4, lb, null, \"ema\", digits) : null;\n    let hist4 = useb ? subtract(macd4, signal4, digits) : null;\n\n    // wave C\n    let fastMA5 = usec ? utils.ma(tradeData, n, source, \"ema\", digits) : null;\n    let slowMA5 = usec ? utils.ma(tradeData, mc, source, \"ema\", digits) : null;\n    let macd5 = usec ? subtract(fastMA5, slowMA5) : null;\n    let signal5 = usec ? utils.ma(macd5, mc, null, \"ema\", digits) : null;\n    let hist5 = usec ? subtract(macd5, signal5, digits) : null;\n\n    let fastMA6 = usec ? utils.ma(tradeData, n, source, \"ema\", digits) : null;\n    let slowMA6 = usec ? utils.ma(tradeData, lc, source, \"ema\", digits) : null;\n    let macd6 = usec ? subtract(fastMA6, slowMA6, digits) : null;\n    let signal6 = usec ? utils.ma(macd6, mc, null, \"ema\", digits) : null;\n    let hist6 = usec ? subtract(macd6, signal6, digits) : null;\n\n    return [hist1, hist2, hist3, hist4, hist5, hist6, macd6];\n}\n\nexport default {\n    name: \"TTM Wave\",\n    label: \"TTMWave\",\n    description: \"TTM 波浪A B C\",\n    calculate: ttmwave,\n};\n\n// function ttmwave_ol(tradeData, options) {\n//     utils.checkTradeData(tradeData);\n\n//     if (\n//         _.isEmpty(tradeData) ||\n//         !_.isArray(tradeData) ||\n//         tradeData.length <= 0\n//     ) {\n//         return;\n//     }\n\n//     let source = (options && options.source) == \"ohlc\" ? utils.ohlc : \"close\";\n//     let digits = (options && options.digits) || 3;\n//     let n = (options && options.n) || 8;\n//     // wave A\n//     let ma = (options && options.ma) || 34;\n//     let la = (options && options.la) || 55;\n//     // wave B\n//     let mb = (options && options.mb) || 89;\n//     let lb = (options && options.lb) || 144;\n//     // wave C\n//     let mc = (options && options.mb) || 233;\n//     let lc = (options && options.lb) || 377;\n\n//     // 优化方式下，从头开始，每天的数据一次性完成\n//     let ttmwaves = [];\n//     let last = [];\n//     for (let i = 0; i < tradeData.length; i++) {\n//         let tmp = [];\n//         if (i === 0) {\n//             // 第一天的特殊数据\n\n//         } else {\n//             // wave a\n//             // let fastma1 =\n//         }\n//     }\n// }\n","/**\n * 鸡排指标，Squeeze，From Mastering the Trade (3rd Ed)\n *\n * 参数：\n *  source: close | ohlc\n *  ma: ma | ema\n *  n: 20\n *  bm: 2\n *  km: 1.5\n *  mt: \"MTM\" || \"WAVE\"\n *  mn: 5\n *  mm: 12\n *\n *  ditis: 3\n *\n */\nimport _ from \"lodash\";\nimport KC from \"./keltner-channel\";\nimport BOLL from \"./boll\";\nimport MTM from \"./mtm\";\n// import AO from \"./ao\";\nimport TTMWave from \"./ttmwave\";\nimport utils from \"../utils\";\n\nconst READY = \"READY\";\nconst REST = \"--\";\nconst BUY = \"BUY\";\nconst SELL = \"SELL\";\n\nfunction squeeze(\n    tradeData,\n    {\n        source = \"close\",\n        digits = 3,\n        ma = \"ema\",\n        n = 20,\n        km = 1.5,\n        bm = 2,\n        mt = \"MTM\",\n        mn = 12,\n        mm = 1,\n        tn = 5,\n        tm = 21,\n        tl = 34,\n    } = {}\n) {\n    utils.checkTradeData(tradeData);\n\n    if (source === \"ohlc\") {\n        source = utils.ohlc;\n    } else {\n        source = \"close\";\n    }\n    // let source = (options && options.source) || \"close\";\n    // let digits = (options && options.digits) || 3;\n    // let ma = (options && options.ma) || \"ema\";\n    // let n = (options && options.n) || 20;\n    // // kc边界倍数\n    // let km = (options && options.km) || 1.5;\n    // // boll边界倍数\n    // let bm = (options && options.bm) || 2;\n    // // 动量指标参数\n    // let mt = (options && options.mt) || \"MTM\";\n    // let mn = (options && options.mn) || 12;\n    // let mm = (options && options.mm) || 1;\n    // let mmsource = (options && options.mmsource) || \"hl\";\n\n    // // TTM Wave\n    // let tn = (options && options.tn) || 5;\n    // let tm = (options && options.tm) || 21;\n    // let tl = (options && options.tl) || 34;\n\n    let kcData = KC.calculate(tradeData, {\n        n,\n        m: km,\n        type1: ma,\n        type2: ma,\n        source,\n        digits,\n    });\n    let bollData = BOLL.calculate(tradeData, {\n        n,\n        m: bm,\n        ma,\n        source,\n        digits,\n    });\n\n    let mtmData = MTM.calculate(tradeData, {\n        n: mn,\n        m: mm,\n        source,\n        digits,\n    });\n\n    let waveData = TTMWave.calculate(tradeData, {\n        n: tn,\n        ma: tm,\n        la: tl,\n        source,\n        digits,\n        useb: false,\n        usec: false,\n    });\n\n    let mmData = mt === \"MTM\" ? mtmData : waveData && waveData[0];\n\n    // 下面根据轨道情况，判断状态，状态区分如下\n    // 1. boll进kc，启动警告状态：READY\n    // 2. boll出kc，进入交易状态：\n    //   2.1 mm>0，买入（多头）：BUY\n    //   2.2 mm<=0，卖出（空头）：SELL\n    // 3. mm 降低，交易结束：--\n    let currentState = REST;\n    let states = tradeData.map((item, i, all) => {\n        let ready =\n            bollData &&\n            kcData &&\n            bollData[1][i] &&\n            kcData[1][i] &&\n            bollData[1][i] <= kcData[1][i];\n\n        let mmUp = mmData && mmData[i] && mmData[i] >= 0;\n        // mt === \"MTM\"\n        //     ? mmData && mmData[i] && mmData[i] >= 0\n        //     : waveData && waveData[0] && waveData[0][i] >= 0;\n\n        let nextState = currentState;\n        if (currentState === REST) {\n            if (ready) {\n                nextState = READY;\n            }\n        } else if (currentState === READY) {\n            if (!ready) {\n                nextState = mmUp ? BUY : SELL;\n            }\n        } else if (currentState === BUY || currentState === SELL) {\n            if (ready) {\n                // 再次进入等待\n                nextState = READY;\n            } else {\n                // 检查是否出现动能减弱\n                if (\n                    mmData &&\n                    mmData[i] &&\n                    mmData[i - 1] &&\n                    ((currentState === BUY && mmData[i] < mmData[i - 1]) ||\n                        (currentState === SELL && mmData[i] > mmData[i - 1]))\n                ) {\n                    nextState = REST;\n                }\n            }\n        }\n        currentState = nextState;\n        return nextState;\n    });\n\n    return [\n        kcData && kcData[0],\n        bollData && bollData[1],\n        bollData && bollData[2],\n        kcData && kcData[1],\n        kcData && kcData[2],\n        mmData,\n        states,\n        mtmData,\n        waveData && waveData[0],\n        waveData && waveData[1],\n    ];\n}\n\nexport default {\n    name: \"SQUEEZE\",\n    label: \"鸡排\",\n    description: \"挤牌信号器指标\",\n    calculate: squeeze,\n    states: {\n        REST,\n        READY,\n        BUY,\n        SELL,\n    },\n};\n","import SQUEEZE from \"../indicators/squeeze\";\nimport TTMWave from \"../indicators/ttmwave\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport trans from \"../transaction\";\nimport debugpkg from \"debug\";\nimport { getDataRoot } from \"@wt/lib-wtda-query\";\n\nconst debug = debugpkg(\"rules:squeeze\");\n\nconst RULE_NAME = \"squeeze\";\nconst SQUEEZE_DATA = Symbol(\"SQUEEZE_DATA\");\nconst TTMWAVE_DATA = Symbol(\"TTMWAVE_DATA\");\n\nfunction checkTTM(index, ttmwave) {\n    // 检查TTM Wave ABC的趋势\n    let upTrend = 0;\n    let downTrend = 0;\n    let ups = 0;\n    let downs = 0;\n    if (index - 2 >= 0) {\n        for (let i = 0; i < 6; i++) {\n            if (ttmwave[i][index] >= 0) {\n                ups++;\n            } else {\n                downs++;\n            }\n            if (\n                ttmwave[i][index] > ttmwave[i][index - 1] &&\n                ttmwave[i][index - 1] > ttmwave[i][index - 2]\n            ) {\n                upTrend++;\n            } else {\n                downTrend++;\n            }\n        }\n    }\n    return [ups, downs, upTrend, downTrend];\n}\n\nfunction check(index, stockData, options, tsCode) {\n    let sdata = SQUEEZE.calculate(stockData, options.squeeze);\n\n    // 使用TTMWave同步进行检查\n    let ttmwave = TTMWave.calculate(stockData, options.ttmwave);\n    // 2020.10.10 增加一个针对Wave波浪趋势数量的参数，默认6个波浪至少有3个是对应的趋势发展，否则过滤掉\n    let need_condition_days = (options && options.needCond) || false;\n    let condition_days = (options && options.cond) || 3;\n\n    if (\n        stockData &&\n        _.isArray(stockData) &&\n        index < stockData.length &&\n        index >= 0\n    ) {\n        let tradeDate = stockData[index].trade_date;\n        let days = checkDays(index, sdata[6]);\n        let trends = checkTTM(index, ttmwave);\n        if (sdata[6][index] === SQUEEZE.states.READY) {\n            // 有信号\n            if (\n                !need_condition_days ||\n                (trends[0] >= condition_days && trends[2] >= condition_days)\n            ) {\n                return {\n                    tsCode,\n                    dataIndex: index,\n                    date: tradeDate,\n                    tradeType: \"signal\",\n                    hasSignals: true,\n                    signal: \"READY\",\n                    type: \"squeeze\",\n                    squeeze: {\n                        days,\n                        trends,\n                    },\n                    // targetPrice: stockData[index].close,\n                    memo: `挤牌信号，可考虑挤入 [${stockData[index].trade_date} ${sdata[6][index]}]`,\n                };\n            }\n        } else if (sdata[6][index] === SQUEEZE.states.BUY) {\n            // 检查Wave ABC的趋势变化\n            if (\n                !need_condition_days ||\n                (trends[0] >= condition_days && trends[2] >= condition_days)\n            ) {\n                return {\n                    tsCode,\n                    dataIndex: index,\n                    date: tradeDate,\n                    tradeType: \"buy\",\n                    hasSignals: true,\n                    signal: \"BUY\",\n                    type: \"squeeze\",\n                    squeeze: {\n                        days,\n                        trends,\n                    },\n                    // targetPrice: stockData[index].close,\n                    memo: `挤牌信号明确，买入 [${stockData[index].trade_date} ${sdata[6][index]}]`,\n                };\n            }\n        } else if (\n            sdata[6][index] === SQUEEZE.states.SELL &&\n            options.squeeze.needSell\n        ) {\n            if (\n                !need_condition_days ||\n                (trends[1] <= condition_days && trends[3] <= condition_days)\n            ) {\n                return {\n                    tsCode,\n                    dataIndex: index,\n                    date: tradeDate,\n                    hasSignals: true,\n                    tradeType: \"sell\",\n                    signal: \"SELL\",\n                    type: \"squeeze\",\n                    squeeze: {\n                        days,\n                        trends,\n                    },\n                    // targetPrice: stockData[index].close,\n                    memo: `挤牌信号明确，卖出 [${stockData[index].trade_date} ${sdata[6][index]}]`,\n                };\n            }\n        }\n    }\n}\n\nfunction checkDays(index, states) {\n    if (states[index] === SQUEEZE.states.REST) return [0, 0];\n    let trade_days = 0;\n    let state = states[index];\n    if (state === SQUEEZE.states.BUY || state === SQUEEZE.states.SELL) {\n        while (\n            index - trade_days >= 0 &&\n            states[index - trade_days] === state\n        ) {\n            trade_days++;\n        }\n    }\n    let ready_days = 0;\n    if (states[index - trade_days] === SQUEEZE.states.READY) {\n        while (\n            index - trade_days - ready_days >= 0 &&\n            states[index - trade_days - ready_days] === SQUEEZE.states.READY\n        ) {\n            ready_days++;\n        }\n    }\n    return [ready_days, trade_days];\n}\n\nfunction calculateSqueeze(stockData, options) {\n    if (_.isNil(stockData)) return;\n    // debug(\n    //     `squeeze? ${_.isNil(stockData[SQUEEZE_DATA])} ${_.isNil(\n    //         stockData[TTMWAVE_DATA]\n    //     )}`\n    // );\n    if (_.isNil(stockData[SQUEEZE_DATA])) {\n        stockData[SQUEEZE_DATA] = SQUEEZE.calculate(stockData, options.squeeze);\n    }\n    if (_.isNil(stockData[TTMWAVE_DATA])) {\n        stockData[TTMWAVE_DATA] = TTMWave.calculate(stockData, options.ttmwave);\n    }\n}\n\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    debug(`检查挤牌买入：${index}, ${balance}`);\n    if (balance <= 0) return;\n    calculateSqueeze(stockData, options);\n\n    if (index < 1) return;\n    // 检查今天index的条件\n    let squeeze = stockData[SQUEEZE_DATA];\n    // debug(`%o`, squeeze);\n    let squeeze_today = squeeze && squeeze[6] && squeeze[6][index];\n    let squeeze_lday = squeeze && squeeze[6] && squeeze[6][index - 1];\n    // if (_.isNil(squeeze_today)) {\n    //     debug(`意外退出...`);\n    //     return;\n    // }\n    debug(`检查买入规则：${squeeze_today}, ${squeeze_lday}`);\n    if (\n        squeeze_today === SQUEEZE.states.BUY &&\n        squeeze_lday === SQUEEZE.states.READY\n    ) {\n        let currentData = stockData[index];\n        let tradeDate = currentData.trade_date;\n        let targetPrice = currentData.close;\n        return trans.createBuyTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            balance,\n            targetPrice,\n            RULE_NAME,\n            `挤牌买入 ${targetPrice.toFixed(2)}`\n        );\n    }\n}\n\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isNil(stock) || stock.count <= 0) return;\n    calculateSqueeze(stockData, options);\n\n    if (index < 1) return;\n    // 检查今天index的条件\n    let squeeze = stockData[SQUEEZE_DATA];\n    let squeeze_today = squeeze && squeeze[6] && squeeze[6][index];\n    let squeeze_lday = squeeze && squeeze[6] && squeeze[6][index - 1];\n    // if (_.isNil(squeeze_today)) {\n    //     return;\n    // }\n    if (\n        squeeze_today === SQUEEZE.states.REST &&\n        squeeze_lday === SQUEEZE.states.BUY\n    ) {\n        let currentData = stockData[index];\n        let tradeDate = currentData.trade_date;\n        let targetPrice = currentData.close;\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            targetPrice,\n            RULE_NAME,\n            `挤牌卖出 ${targetPrice.toFixed(2)}`\n        );\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    let opt = options && options.squeeze;\n    // let buy = opt && options.squeeze.buy;\n    // let sell = opt && options.squeeze.sell;\n    return `\n模型 ${squeeze.name}[${squeeze.label}] 参数：\nsource: ${opt.source}\n均值类型: ${opt.ma},    平均天数: ${opt.n}\n布林线倍率: ${opt.bm}   Keltner通道倍率: ${opt.km}\n动量类型:  ${opt.mt}\n动量平均天数：  ${opt.mn},     动量天数：${opt.mm}\n价格类型: ${opt.source}\n\n`;\n}\n\n/**\n * 将搜索得到的列表生成分析报表\n *\n * @param {*} results 搜索的匹配列表\n * @param {*} options 匹配使用的参数\n */\nasync function createReports(results, options) {\n    if (_.isNil(results)) return;\n\n    let reports = [];\n    // results 当中按照signal进行了分组\n    // 下面主要分析signal===\"READY\"情况下，时间的分布\n    let readyList = results && results[SQUEEZE.states.READY];\n    // 1, 2, 3, 5, 8, 13\n    // let boundaries = [1, 2, 3, 5, 8, 13, _];\n    let days = [\n        { label: \"1天\", data: [] },\n        { label: \"2天\", data: [] },\n        { label: \"3天\", data: [] },\n        { label: \"4~5天\", data: [] },\n        { label: \"6~8天\", data: [] },\n        { label: \"8~13天\", data: [] },\n        { label: \"多于13天\", data: [] },\n    ];\n    if (!_.isEmpty(readyList)) {\n        for (let item of readyList) {\n            let ready_days =\n                item.squeeze && item.squeeze.days && item.squeeze.days[0];\n            let i = 0;\n            if (ready_days === 1) i = 0;\n            else if (ready_days === 2) i = 1;\n            else if (ready_days === 3) i = 2;\n            else if (ready_days > 3 && ready_days <= 5) i = 3;\n            else if (ready_days > 5 && ready_days <= 8) i = 4;\n            else if (ready_days > 8 && ready_days <= 13) i = 5;\n            else i = 6;\n\n            days[i].data.push(item.tsCode);\n        }\n        let i = 0;\n        while (i < days.length) {\n            if (days[i] && days[i].data && days[i].data.length > 0) {\n                i++;\n            } else {\n                days.splice(i, 1);\n            }\n        }\n        reports.push({ label: SQUEEZE.states.READY, data: days });\n    }\n\n    let buyList = results && results[SQUEEZE.states.BUY];\n    let bdays = [\n        { label: \"1天\", data: [] },\n        { label: \"2天\", data: [] },\n        { label: \"3天\", data: [] },\n        { label: \"4~5天\", data: [] },\n        { label: \"6~8天\", data: [] },\n        { label: \"8~13天\", data: [] },\n        { label: \"多于13天\", data: [] },\n    ];\n    if (!_.isEmpty(buyList)) {\n        for (let item of buyList) {\n            let buy_days =\n                item.squeeze && item.squeeze.days && item.squeeze.days[1];\n            let i = 0;\n            if (buy_days === 1) i = 0;\n            else if (buy_days === 2) i = 1;\n            else if (buy_days === 3) i = 2;\n            else if (buy_days > 3 && buy_days <= 5) i = 3;\n            else if (buy_days > 5 && buy_days <= 8) i = 4;\n            else if (buy_days > 8 && buy_days <= 13) i = 5;\n            else i = 7;\n\n            bdays[i].data.push(item.tsCode);\n            // if (bdays[i]) {\n            // } else {\n            //     bdays[i] = [item.tsCode];\n            // }\n        }\n        let i = 0;\n        while (i < bdays.length) {\n            if (bdays[i] && bdays[i].data && bdays[i].data.length > 0) {\n                i++;\n            } else {\n                bdays.splice(i, 1);\n            }\n        }\n        reports.push({ label: SQUEEZE.states.BUY, data: bdays });\n    }\n\n    // let reports = {\n    //     // updateTime: moment().toISOString(),\n    //     // squeeze: {\n    //     [SQUEEZE.states.READY]: days,\n    //     [SQUEEZE.states.BUY]: bdays,\n    //     // },\n    // };\n\n    return reports;\n}\n\nconst squeeze = {\n    name: \"挤牌\",\n    label: RULE_NAME,\n\n    description: \"挤牌模型\",\n    methodTypes: {},\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n    createReports,\n};\n\nexport default squeeze;\n","/**\n * 推进器交易，波段\n *\n */\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport utils from \"../utils\";\nimport trans from \"../transaction\";\nimport debugpkg from \"debug\";\nimport { getDataRoot } from \"@wt/lib-wtda-query\";\n\nimport MA from \"../indicators/ma\";\n\nconst debug = debugpkg(\"rules:swing\");\n\nconst RULE_NAME = \"swing\";\nconst SWING_DATA = Symbol(\"SWING_DATA\");\nconst SWING_CONTEXT = Symbol(\"SWING_CONTEXT\");\n\nfunction calculateSwing(\n    stockData,\n    {\n        n = 8,\n        m = 21,\n        l = 50,\n        earn1 = 0.04,\n        earn2 = 0.08,\n        loss = 0.04,\n        digits = 3,\n    } = {}\n) {\n    if (_.isNil(stockData)) return;\n    let type = \"ema\";\n    let source = \"close\";\n    debug(`swing options: n=${n} m=${m} l=${l}`);\n    if (_.isNil(stockData[SWING_DATA])) {\n        let ma1 = MA.calculate(stockData, {\n            n,\n            source,\n            type,\n            digits,\n        });\n        debug(`%o`, ma1);\n        let ma2 = MA.calculate(stockData, {\n            n: m,\n            source,\n            type,\n            digits,\n        });\n        debug(`%o`, ma2);\n        let ma3 = MA.calculate(stockData, {\n            n: l,\n            source,\n            type,\n            digits,\n        });\n\n        let swingData = [];\n        let started = false;\n        let currentState;\n        for (let index = 0; index < stockData.length; index++) {\n            // 从第一天开始检查\n\n            // 响应的状态持续值\n            let state = -1;\n            let lossState = 0;\n            let target = 0;\n            let ruleTarget = 0;\n            let lossTarget = 0;\n            let trans = [];\n            let ready_days = 0;\n            let pullback_days = 0;\n            let times = (currentState && currentState.times) || 0;\n            let data = stockData[index];\n\n            if (index === 0 || index < Math.max(n, m) || !started) {\n                // 第一天为特殊定义，确认初始值，内容为状态定义，为后续下一天判断提供依据\n                // newState = {\n                //     state: -1, // 状态，-1 反向状态；0 区间等待回撤；1 回撤已交易，等待目标或止损；9 止损/初始，等待重新进入正常等待回撤区间（超过ma1）\n                //     lossState: -1, // 止损状态，1 指定止损，交易后，按照交易价格 min(止损比例，ma2）；2 跟随止损（ma2）\n                //     targets: [], // [0] 目标价格 [1] 止损价格 [2] 止损规则价格\n                //     trans: [], // 交易，{type: BUY|SELL, price}\n                //     days: [], // [0] 进入非-1的持续天数, [1] 上一次回撤后的持续天数\n                //     times, // 交易发生次数\n                // };\n                // 这里要找到适当的ma1穿过ma2的时间点才能启动\n                if (\n                    index > 0 &&\n                    index >= Math.max(n, m) - 1 &&\n                    ma1[index] &&\n                    ma2[index] &&\n                    ma1[index] < ma2[index]\n                ) {\n                    started = true;\n                }\n            } else {\n                if (ma1[index] >= ma2[index]) {\n                    // 在ma1 >= ma2正确的曲线范围内\n                    state = currentState.state;\n                    lossState = currentState.lossState;\n                    [target, lossTarget, ruleTarget] = currentState.targets;\n                    [ready_days, pullback_days] = currentState.days;\n                    if (pullback_days > 0) {\n                        pullback_days++;\n                    }\n                    if (ready_days > 0) {\n                        ready_days++;\n                    }\n                    times = currentState.times;\n\n                    // 今日穿墙\n                    if (currentState.state === -1) {\n                        // 当前非符合条件状态，查看今天\n                        if (data.open >= ma1[index]) {\n                            debug(`** ${data.trade_date} 进入等待回调区间`);\n                            state = 0;\n                        } else {\n                            debug(\n                                `** ${data.trade_date} 进入初始状态，等待进入多头区间`\n                            );\n                            state = 9;\n                        }\n                        lossState = 0;\n                        ready_days = 1;\n                        pullback_days = 0;\n                        times = 0;\n\n                        target = 0;\n                        lossTarget = 0;\n                        ruleTarget = 0;\n                    }\n\n                    // 止损/初始后等待进入正常回调区间\n                    if (currentState.state === 9) {\n                        if (data.high >= ma1[index]) {\n                            debug(` ** ${data.trade_date} 进入等待回调区间`);\n                            state = 0;\n                        }\n                    }\n\n                    // 交易跟踪，检查止损目标是否需要调整\n                    if (\n                        lossState === 1 &&\n                        (currentState.state === 1 || state === 1) &&\n                        data.high >= ruleTarget\n                    ) {\n                        debug(` ** ${data.trade_date} 达到目标1，调整止损策略`);\n                        lossState = 2;\n                    }\n\n                    // 交易跟踪，止损\n                    if (\n                        currentState.state === 1 &&\n                        ((lossState === 1 && data.low <= lossTarget) ||\n                            (lossState === 2 && data.low <= ma2[index]))\n                    ) {\n                        // 达到止损\n                        state = 9;\n                        // 根据当前止损类型确定止损价格，需要注意当天价格是否在范围内\n                        let price = lossState === 1 ? lossTarget : ma2[index];\n                        price = Math.min(price, data.high);\n                        trans.push({ type: \"SELL\", price });\n                        debug(\n                            `** ${data.trade_date} 达到止损价位，交易: ${price}`\n                        );\n\n                        lossTarget = 0;\n                        target = 0;\n                        ruleTarget = 0;\n                    } else if (\n                        currentState.state === 1 &&\n                        data.high >= target &&\n                        target > 0\n                    ) {\n                        // 交易跟踪，到达预期价位成交\n                        // 目标价位达到\n                        let price = currentState.targets[0];\n                        price = Math.max(data.low, price);\n                        trans.push({ type: \"SELL\", price });\n\n                        lossState = 0;\n                        lossTarget = 0;\n                        target = 0;\n                        ruleTarget = 0;\n                        state = 0;\n                        debug(\n                            `** ${data.trade_date} 达到目标价位，交易: ${price}`\n                        );\n                    }\n\n                    // 等待回调\n                    if (currentState.state === 0 || state === 0) {\n                        // 检查是否回调到ma1\n                        if (ma1[index] >= data.low) {\n                            state = 1;\n                            let price = ma1[index];\n                            trans.push({ type: \"BUY\", price });\n                            times++;\n                            lossState = 1;\n                            lossTarget = Math.min(\n                                price * (1 - loss),\n                                ma2[index]\n                            );\n\n                            target = price * (1 + earn2);\n                            ruleTarget = price * (1 + earn1);\n                            pullback_days = 1;\n                            debug(\n                                `** ${data.trade_date} 回调发生，交易：${price}, 目标 ${target}, 止损 ${lossTarget}, ${ruleTarget}; [${ma1[index]} ,${ma2[index]}, ${data.open}, ${data.high}, ${data.low}, ${data.close}]`\n                            );\n                        }\n                    }\n\n                    // 对于今日调整到初始状态的，最后检查是否进入回调等待阶段\n                    if (state === 9) {\n                        if (data.close >= ma1[index]) {\n                            debug(\n                                ` ** ${data.trade_date} 收盘进入等待回调区间`\n                            );\n                            state = 0;\n                        }\n                    }\n                } else {\n                    debug(` ** ${data.trade_date} 进入空头阶段，检查平仓`);\n                    // 价格已经走出交易区间，如果有头寸，平仓结束\n                    if (currentState.state === 1) {\n                        state = -1;\n                        let price = data.close;\n                        trans.push({ type: \"SELL\", price });\n                        debug(\n                            `** ${data.trade_date} 进入空头，完成平仓： ${price}`\n                        );\n                    }\n\n                    state = -1;\n                    ready_days = 0;\n                    pullback_days = 0;\n                }\n            }\n\n            swingData[index] = {\n                state,\n                lossState,\n                targets: [target, lossTarget, ruleTarget],\n                trans,\n                days: [ready_days, pullback_days],\n                times,\n            };\n            currentState = swingData[index];\n        }\n\n        stockData[SWING_DATA] = [swingData, ma1, ma2, ma3];\n    }\n}\n\nfunction checkSwing(index, stockData, options, tsCode) {\n    let opt = options && options.swing;\n    calculateSwing(stockData, opt);\n\n    let swingData = stockData[SWING_DATA][0];\n    if (\n        swingData &&\n        _.isArray(swingData) &&\n        index < swingData.length &&\n        index >= 0\n    ) {\n        let data = swingData[index];\n        if (data.state >= 0) {\n            let state = data.state;\n            let memo;\n            if (state === 0) {\n                memo = `波段：等待回调，目标 ¥${utils.toFixed(\n                    data.targets[0],\n                    2\n                )}，持续${data.days[0]}天`;\n            } else if (state === 1) {\n                memo = `波段：已买入，目标价位 ¥${utils.toFixed(\n                    data.targets[0],\n                    2\n                )}， ${\n                    data.lossState === 1 ? \"初始止损\" : \"跟随止损\"\n                } ¥${utils.toFixed(data.targets[1], 2)}}`;\n            } else if (state === 9) {\n                memo = `波段：发生止损，等待下一次回调，目标 ${utils.toFixed(\n                    data.targets[0],\n                    2\n                )}`;\n            }\n\n            return {\n                tsCode,\n                dataIndex: index,\n                date: stockData[index].trade_date,\n                tradeType: \"signal\",\n                hasSignals: true,\n                signal:\n                    state === 0\n                        ? \"READY\"\n                        : state === 1\n                        ? \"BUY\"\n                        : state === 9\n                        ? \"PULLBACK\"\n                        : \"NA\",\n                type: \"swing\",\n                swing: {\n                    days: data.days,\n                    times: data.times,\n                    state: data.state,\n                    lossState: data.lossState,\n                    targets: data.targets,\n                },\n                memo,\n            };\n        }\n    }\n\n    // let range = (opt && opt.range) || 8;\n    // let earn1 = (opt && opt.earn1) || 0.04;\n    // let earn2 = (opt && opt.earn2) || 0.08;\n    // let loss = (opt && opt.loss) || 0.04;\n\n    // if (\n    //     stockData &&\n    //     _.isArray(stockData) &&\n    //     index < stockData.length &&\n    //     index >= 0\n    // ) {\n    //     let tradeDate = stockData[index].trade_date;\n    //     // 找到ma1<=ma2 && ma1>ma2的交叉日，这是READY状态；注意READY状态不能太远，考虑仅查找最多8天\n    //     // READY后，如果 ma1 >= daily.low，则发生“回撤”，进入BUY状态，设定目标\n    //     let ma1 = data[0];\n    //     let ma2 = data[1];\n    //     if (ma1[index] <= ma2[index]) return;\n\n    //     let start = index;\n    //     let ready_days = 1;\n    //     for (let i = 0; i < range; i++) {\n    //         if (ma1[index - i - 1] <= ma2[index - i - 1]) {\n    //             // index-i 是交叉发生点\n    //             start = index - i;\n    //             ready_days = i + 1;\n    //             break;\n    //         }\n    //     }\n\n    //     let pullback_days = 0;\n    //     let times = 0;\n    //     let state = 0;\n    //     let lossState = 0;\n\n    //     let target = 0;\n    //     let ruleTarget = 0;\n    //     let maxLoss = 0;\n    //     for (let i = index - ready_days + 1; i <= index; i++) {\n    //         // 当天开始是交易状态，首先完成交易\n    //         if (state === 1) {\n    //             // 交易过程状态，等待止损或者改变条件\n    //             if (\n    //                 (lossState === 1 && maxLoss >= tradeDate[i].high) ||\n    //                 (lossState === 2 && ma2[i] >= tradeDate[i].high)\n    //             ) {\n    //                 // 触发止损\n    //                 state = 9;\n    //             } else if (lossState === 1 && ruleTarget <= tradeDate[i].high) {\n    //                 // 止损规则目标达成，这时调整止损规则到跟随ma2\n    //                 lossState = 2;\n    //             } else if (target <= tradeDate[i].high) {\n    //                 // 达到\n    //                 state = 0;\n    //             }\n    //         }\n\n    //         // 状态为等待回调，确定是否可以交易，每次交易表示一个周期增加\n    //         if (state === 0 && ma1[i] >= tradeDate[i].low) {\n    //             // 等待机会并且触发\n    //             // 触发回调\n    //             target1 = ma1[i] * (1 + earn1);\n    //             target2 = ma1[i] * (1 + earn2);\n\n    //             // 止损初期采用固定比例和ma2价格低的那个\n    //             maxLoss = Math.min(ma1[i] * (1 - loss), ma2[i]);\n    //             lossState = 1;\n\n    //             if (pullback_days <= 0) {\n    //                 pullback_days = i + 1;\n    //             }\n\n    //             times++;\n    //             state = 1;\n    //             pullback_days = index - i + 1;\n    //         }\n\n    //         if (state === 9 && tradeDate[i].close > ma1[i]) {\n    //             // 价格重新进入等待回调状态\n    //             state = 0;\n    //         }\n    //     }\n\n    //     let signal = state === 0 ? \"READY\" : state === 1 ? \"BUY\" : \"LOSS\";\n    //     let memo = \"\";\n    //     let targets = [\"--\", \"--\"];\n    //     if (state === 1) {\n    //         targets[0] = utils.toFixed(target1, 2);\n    //         if (lossState === 1) {\n    //             targets[1] = utils.toFixed(maxLoss, 2);\n    //         } else if (lossState === 2) {\n    //             target[1] = utils.toFixed(ma2[index], 2);\n    //         }\n    //     } else if (state === 0 || state === 9) {\n    //         targets[0] = utils.toFixed(ma1[index], 2);\n    //     }\n\n    //     if (state === 0) {\n    //         memo = `波段：等待回调，目标 ¥${targets[0]}，持续${ready_days}天`;\n    //     } else if (state === 1) {\n    //         memo = `波段：已买入，目标价位 ¥${targets[0]}， ${\n    //             lossState === 1 ? \"初始止损\" : \"跟随止损\"\n    //         } ¥${targets[1]}}`;\n    //     } else if (state === 9) {\n    //         memo = `波段：发生止损，等待下一次回调，目标 ${targets[0]}`;\n    //     }\n\n    //     return {\n    //         tsCode,\n    //         dataIndex: index,\n    //         date: tradeDate,\n    //         tradeType: \"signal\",\n    //         hasSignals: true,\n    //         signal,\n    //         type: \"swing\",\n    //         swing: {\n    //             days: [ready_days, pullback_days],\n    //             times,\n    //             state,\n    //             lossState,\n    //             targets,\n    //         },\n    //         memo,\n    //     };\n    // }\n}\n\nfunction check(index, stockData, options, tsCode) {\n    let ret = checkSwing(index, stockData, options, tsCode);\n    // console.log(`检查${index}波段结果：%o`, ret);\n    if (!ret) return;\n    // 只有等待回调的阶段需要进入返回列表\n    if (ret.swing && (ret.swing.state === 0 || ret.swing.state === 9)) {\n        return ret;\n    }\n}\n\n// function readContext(index, stockData) {\n//     if (!stockData || !_.isArray(stockData)) return;\n//     if (index < stockData.length && index >= 0) {\n//         let contexts = stockData[SWING_CONTEXT];\n//         if (contexts && _.isArray(contexts)) {\n//             return contexts[index];\n//         }\n//     }\n// }\n\n// function saveContext(index, context, stockData) {\n//     if (!stockData && !_.isArray(stockData)) {\n//         return;\n//     }\n//     if (index < stockData.length && index >= 0) {\n//         let contexts = stockData[SWING_CONTEXT];\n//         if (!contexts) {\n//             stockData[SWING_CONTEXT] = [];\n//             contexts = stockData[SWING_CONTEXT];\n//         }\n//         contexts[index] = context;\n//     }\n// }\n\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    debug(`检查波段买入：${index}, ${balance}`);\n    if (balance <= 0) return;\n\n    calculateSwing(stockData, options && options.swing);\n\n    let swingData = stockData[SWING_DATA] && stockData[SWING_DATA][0];\n    if (\n        swingData &&\n        _.isArray(swingData) &&\n        index < swingData.length &&\n        index >= 0\n    ) {\n        let data = swingData[index];\n        debug(`swing data 买入检查: ${index}, %o`, data);\n        if (!_.isEmpty(data.trans)) {\n            let currentData = stockData[index];\n            let tradeDate = currentData.trade_date;\n            for (let tran of data.trans) {\n                if (tran.type === \"BUY\") {\n                    let targetPrice = tran.price;\n                    return trans.createBuyTransaction(\n                        stockInfo,\n                        tradeDate,\n                        index,\n                        balance,\n                        targetPrice,\n                        RULE_NAME,\n                        `波段买入 ${targetPrice.toFixed(2)}`\n                    );\n                }\n            }\n        }\n    }\n}\n\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    debug(`检查波段卖出：${index}, ${stock.count}`);\n    if (_.isNil(stock) || stock.count <= 0) return;\n\n    calculateSwing(stockData, options && options.swing);\n\n    let swingData = stockData[SWING_DATA] && stockData[SWING_DATA][0];\n    if (\n        swingData &&\n        _.isArray(swingData) &&\n        index < swingData.length &&\n        index >= 0\n    ) {\n        let data = swingData[index];\n        debug(`swing data 卖出检查: ${index}, %o`, data);\n        if (!_.isEmpty(data.trans)) {\n            let currentData = stockData[index];\n            let tradeDate = currentData.trade_date;\n            for (let tran of data.trans) {\n                if (tran.type === \"SELL\") {\n                    let targetPrice = tran.price;\n                    return trans.createSellTransaction(\n                        stockInfo,\n                        tradeDate,\n                        index,\n                        stock.count,\n                        targetPrice,\n                        RULE_NAME,\n                        `波段卖出 ${targetPrice.toFixed(2)}`\n                    );\n                }\n            }\n        }\n    }\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    let opt = options && options.swing;\n    return `\n模型 ${swing.name}[${swing.label}] 参数：\n均线1: ${opt.n},  均线2: ${opt.m}\n目标价位：${opt.earn2 * 100}%\n止损价位：${opt.loss * 100}%\n止损条件价位：${opt.earn1 * 100}%\n`;\n}\n\nasync function createReports(results, options) {\n    if (_.isNil(results)) return;\n\n    let reports = [];\n\n    let readyList = results && results[\"READY\"];\n    let days = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(readyList)) {\n        for (let item of readyList) {\n            days[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"READY\", data: days });\n    }\n\n    let buyList = results && results[\"PULLBACK\"];\n    let bdays = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(buyList)) {\n        for (let item of buyList) {\n            bdays[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"PULLBACK\", data: bdays });\n    }\n\n    // let reports = {\n    //     READY: days,\n    //     PULLBACK: bdays,\n    // };\n\n    return reports;\n}\n\nconst swing = {\n    name: \"波段交易\",\n    label: RULE_NAME,\n\n    description: \"波段选择\",\n    methodTypes: {},\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n    createReports,\n};\n\nexport default swing;\n","/**\n * HOLP: High of Low Period\n *\n * 这是一个反转操作方式，需要严格执行规则\n *  1. 首先是启动点为近25天（周期）的价格新低，最少是17天（周期）\n *     这应该是一个下跌趋势，可以考虑通过检查最近20天内的阶段高点和阶段地点，然后看中间的间隔\n *  2. 最近的最低价K线位置确定，记录最高价（突破启动价位）和最低价（初始止损）\n *  3. 进入交易后，如果交易执行超过3天（周期），则初始止损调整为2根K线跟进止损（前面第二根K线最低价止损）\n *  4. 如果过程中发生回调，假如当日没有发生止损，但是2K线跟进止损会触发，则保持止损价位不变，看走势止损或者可以恢复2K线止损继续\n */\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"rules:holp\");\n\n/**\n * 基准参数，用于测量正常买入卖出情况下的基准效果\n * 采用的买入策略为开盘买入，第二天收盘卖出；或者止损平仓\n */\nconst RULE_NAME = \"HOLP\";\n\nfunction check(index, stockData, options, tsCode) {\n    // 从index位置查找前面25个数据中的最大和最小位置，确定趋势\n    if (\n        _.isNil(stockData) ||\n        _.isEmpty(stockData) ||\n        stockData.length < 20 ||\n        index < 20\n    ) {\n        return;\n    }\n\n    let min = stockData[index].low;\n    let minIndex = index;\n    let max = stockData[index].high;\n    let maxIndex = index;\n    for (let i = 0; i < 25; i++) {\n        if (index - i - 1 < 0) break;\n        if (stockData[index - i - 1].low <= min) {\n            min = stockData[index].low;\n            minIndex = index - i - 1;\n        }\n        if (stockData[index - i - 1].high >= max) {\n            max = stockData[index - i - 1].high;\n            maxIndex = index - i - 1;\n        }\n    }\n    debug(`最低 ${min} - ${minIndex}, 最高 ${max} - ${maxIndex}`);\n\n    let tradeDate = stockData[index].trade_date;\n    debug(`${tradeDate} 之前新低位置 ${stockData[minIndex].trade_date}`);\n    if (index - minIndex <= 3 && minIndex - maxIndex >= 17) {\n        // 符合初步条件，下面验证是否已经触发交易\n        let readyIndex = minIndex;\n        let data = stockData[readyIndex];\n        let state = 0;\n        let lossState = 0;\n        let startPrice = data.high;\n        let lossTarget = data.low;\n        let startDate;\n        let startIndex = -1;\n        let tranPrice;\n\n        for (let i = readyIndex + 1; i <= index; i++) {\n            let daily = stockData[i];\n            if (state === 0 && daily.high >= startPrice) {\n                // 记录启动日\n                state = 1;\n                lossState = 0;\n                startDate = daily.trade_date;\n                startIndex = i;\n                tranPrice = daily.close;\n            } else if (state === 1) {\n                // 检查是否调整止损状态\n            }\n        }\n        let days = [\n            index - readyIndex + 1,\n            state === 0 ? 0 : index - startIndex + 1,\n        ];\n\n        let stateMemo;\n        if (state === 0) {\n            stateMemo = `还未突破目标价格${startPrice}，等待交易`;\n        } else if (state === 1) {\n            stateMemo = `已经进入交易${startDate}，交易持续${days[1]}天`;\n        }\n        return {\n            tsCode,\n            dataIndex: index,\n            date: tradeDate,\n            tradeType: \"signal\",\n            hasSignals: true,\n            signal: state === 0 ? \"READY\" : \"BUY\",\n            type: \"holp\",\n            holp: {\n                state,\n                lossState,\n                days,\n                targets: [startPrice, lossTarget],\n                tran: [startDate, tranPrice],\n            },\n            memo: `HOLP信号，[${data.trade_date}最低点，持续${days[0]}天，${stateMemo}]`,\n        };\n    }\n}\n\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    debug(`检查HOLP买入：${index}, ${balance}`);\n    if (balance <= 0) return;\n}\n\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isNil(stock) || stock.count <= 0) return;\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    let opt = options && options.holp;\n    // let buy = opt && options.squeeze.buy;\n    // let sell = opt && options.squeeze.sell;\n    return `\n模型 ${holp.name}[${holp.label}] 参数：无\n`;\n}\n\nasync function createReports(results, options) {\n    if (_.isNil(results)) return;\n\n    let reports = [];\n    let readyList = results && results[\"READY\"];\n    let days = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(readyList)) {\n        for (let item of readyList) {\n            days[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"READY\", data: days });\n    }\n\n    let buyList = results && results[\"BUY\"];\n    let bdays = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(buyList)) {\n        for (let item of buyList) {\n            bdays[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"BUY\", data: bdays });\n    }\n\n    // let reports = {\n    //     READY: days,\n    //     BUY: bdays,\n    // };\n\n    return reports;\n}\n\nconst holp = {\n    name: \"低点反转\",\n    label: RULE_NAME,\n\n    description: \"HOLP低点反转\",\n    methodTypes: {},\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n    createReports,\n};\n\nexport default holp;\n","/**\n * RSI 指标，相对强弱指标\n *\n * 参数\n *  n: 表示平均天数\n *  digits: 保留小数位数\n *\n * RSI = 100-[1/1+（avg(gain)/avg(loss)]\n */\n\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\n/**\n * 计算RSI指标\n * @param {Array} tradeData 数据数组\n * @param {*} options 参数配置，RSI包含n属性\n */\nfunction rsi(tradeData, { n = 4, digits = 3 } = {}) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        _.isEmpty(tradeData) ||\n        !_.isArray(tradeData) ||\n        tradeData.length <= 0\n    ) {\n        return;\n    }\n\n    let change;\n    // let gain = [];\n    // let loss = [];\n    let avgGain = [];\n    let avgLoss = [];\n    let ret = [];\n    if (!_.isNil(tradeData) && !_.isEmpty(tradeData)) {\n        let a = 1.0 / n;\n        let sumGain = 0;\n        let sumLoss = 0;\n        for (let i = 0; i < tradeData.length; i++) {\n            if (i <= n) {\n                avgGain[i] = 0;\n                avgLoss[i] = 0;\n            }\n            change = tradeData[i].close - tradeData[i].pre_close;\n            let gain = change >= 0 ? change : 0.0;\n            let loss = change <= 0 ? -change : 0.0;\n\n            if (i <= n - 1) {\n                sumGain += gain;\n                sumLoss += loss;\n                if (i === n - 1) {\n                    avgGain[i] = sumGain / n;\n                    avgLoss[i] = sumLoss / n;\n                    ret[i] = 100 - 100 / (1 + avgGain[i] / avgLoss[i]);\n                }\n            } else {\n                avgGain[i] = a * gain + a * (n - 1) * avgGain[i - 1];\n                avgLoss[i] = a * loss + a * (n - 1) * avgLoss[i - 1];\n                ret[i] = 100 - 100 / (1 + avgGain[i] / avgLoss[i]);\n            }\n\n            // console.log(\n            //     `${tradeData[i].trade_date}, ${tradeData[i].close}, ${\n            //         avgGain[i]\n            //     }, ${avgLoss[i]}, ${ret[i] && ret[i].toFixed(2)}`\n            // );\n        }\n        // let avgGain = utils.ma(gain, n, null, \"ma\", digits);\n        // let avgLoss = utils.ma(loss, n, null, \"ma\", digits);\n\n        // return avgLoss.map((loss, index) => {\n        //     let ret = 0;\n        //     if (avgLoss[index] === 0) {\n        //         ret = 100.0;\n        //     } else {\n        //         ret = 100 - 100 / (1 + avgGain[index] / avgLoss[index]);\n        //     }\n        //     console.log(\n        //         `${tradeData[index].trade_date}, ${tradeData[index].close}, ${avgGain[index]}, ${avgLoss[index]}`\n        //     );\n        //     return ret;\n        // });\n    }\n    return ret;\n}\n\nexport default {\n    name: \"RSI\",\n    label: \"相对强弱指标\",\n    description: \"用于表达价格的超买超卖情况\",\n    calculate: rsi,\n};\n","import _ from \"lodash\";\nimport engine from \"../transaction-engine\";\nimport trans from \"../transaction\";\nimport RSI from \"../indicators/rsi\";\nimport MA from \"../indicators/ma\";\n\nimport debugpkg from \"debug\";\nconst debug = debugpkg(\"rules:rsi\");\n\nconst OPTIONS_NAME = \"rsi\";\nconst RULE_NAME = \"rsi\";\nconst RSI_DATA = Symbol(\"RSI_DATA\");\nconst MA_DATA = Symbol(\"MA_DATA\");\n\nfunction calculateData(stockData, options) {\n    if (_.isNil(stockData)) return;\n\n    if (_.isNil(stockData[RSI_DATA])) {\n        stockData[RSI_DATA] = RSI.calculate(stockData, {\n            n: options.rsi.n,\n            digits: options.rsi.digits,\n        });\n    }\n    if (_.isNil(stockData[MA_DATA])) {\n        stockData[MA_DATA] = MA.calculate(stockData, {\n            n: options.rsi.ma,\n            source: \"close\",\n            digits: options.rsi.digits,\n            type: \"ma\",\n        });\n    }\n}\n\nfunction check(index, stockData, options, tsCode) {\n    // let sdata = RSI.calculate(stockData, options.rsi);\n    calculateData(stockData, options);\n\n    if (\n        stockData &&\n        _.isArray(stockData) &&\n        index < stockData.length &&\n        index >= 0\n    ) {\n        let tradeDate = stockData[index].trade_date;\n        let rsiData = stockData[RSI_DATA];\n\n        if (checkBuyCondition(index, stockData, options)) {\n            // 买入信号\n            return {\n                tsCode,\n                dataIndex: index,\n                date: tradeDate,\n                tradeType: \"buy\",\n                hasSignals: true,\n                signal: \"BUY\",\n                type: \"rsi\",\n                memo: `RSI恐慌突破，买入 [${\n                    stockData[index].trade_date\n                }] ${rsiData[index].toFixed(2)}`,\n            };\n        }\n\n        if (checkSellCondition(index, stockData, options)) {\n            // 卖出信号\n            return {\n                tsCode,\n                dataIndex: index,\n                date: tradeDate,\n                hasSignals: true,\n                tradeType: \"sell\",\n                signal: \"SELL\",\n                type: \"rsi\",\n                memo: `RSI恐慌上穿，卖出 [${\n                    stockData[index].trade_date\n                }] ${rsiData[index].toFixed(2)}`,\n            };\n        }\n    }\n}\n\nfunction checkBuyCondition(index, stockData, options) {\n    let rsioptions = options && options[OPTIONS_NAME];\n    // 平均的计算日数\n    let n = rsioptions && rsioptions.n;\n\n    if (n < 1 || n - 1 > index) return false;\n    let rsiData = stockData[RSI_DATA];\n    let maData = stockData[MA_DATA];\n    let currentData = stockData[index];\n\n    // 首先需要ma日均线低于当前价格，说明走势趋向正确\n    if (maData && maData[index] && maData[index] > currentData.close)\n        return false;\n\n    // 判断rsi下穿\n    let long = rsioptions && rsioptions.long;\n    return (\n        rsiData &&\n        rsiData[index - 1] &&\n        rsiData[index] &&\n        rsiData[index - 1] >= long &&\n        rsiData[index] < long\n    );\n}\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {*} tradeDate 交易日期\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    calculateData(stockData, options);\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    let rsioptions = options && options[OPTIONS_NAME];\n    let long = rsioptions && rsioptions.long;\n    let currentData = stockData[index];\n    let targetPrice = currentData.close;\n    let tradeDate = stockData[index].trade_date;\n    let rsiData = stockData[RSI_DATA];\n    if (checkBuyCondition(index, stockData, options)) {\n        debug(\n            `买入条件检查${tradeDate}: ${targetPrice.toFixed(2)}[昨日 rsi: ${\n                rsiData[index - 1]\n            }, 今日rsi : ${rsiData[index]}, 穿越 ${long.toFixed(2)}\n            }]`\n        );\n        return trans.createBuyTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            balance,\n            targetPrice,\n            \"rsi\",\n            `RSI恐慌突破买入 ${targetPrice.toFixed(2)}, ${rsiData[\n                index\n            ].toFixed(2)}`\n        );\n    }\n\n    // let rsioptions = options && options[OPTIONS_NAME];\n    // // 平均的计算日数\n    // let n = rsioptions && rsioptions.n;\n\n    // if (n < 1 || n - 1 > index) return;\n    // let rsiData = stockData[RSI_DATA];\n    // let maData = stockData[MA_DATA];\n    // let currentData = stockData[index];\n    // let tradeDate = stockData[index].trade_date;\n\n    // // 首先需要ma日均线低于当前价格，说明走势趋向正确\n    // if (maData && maData[index] && maData[index] > currentData.close) return;\n\n    // // 判断rsi下穿\n    // let long = rsioptions && rsioptions.long;\n    // let targetPrice = currentData.close;\n    // if (\n    //     rsiData &&\n    //     rsiData[index - 1] &&\n    //     rsiData[index] &&\n    //     rsiData[index - 1] >= long &&\n    //     rsiData[index] < long\n    // ) {\n    // }\n}\n\nfunction checkSellCondition(index, stockData, options) {\n    let rsioptions = options && options[OPTIONS_NAME];\n    // 平均的计算日数\n    let n = rsioptions && rsioptions.n;\n\n    if (n < 1 || n - 1 > index) return false;\n    let rsiData = stockData[RSI_DATA];\n    let maData = stockData[MA_DATA];\n    let currentData = stockData[index];\n\n    // 首先需要ma日均线低于当前价格，说明走势趋向正确\n    if (maData && maData[index] && maData[index] > currentData.close)\n        return false;\n\n    // 判断rsi下穿\n    let short = rsioptions && rsioptions.short;\n    return (\n        rsiData &&\n        rsiData[index - 1] &&\n        rsiData[index] &&\n        rsiData[index - 1] <= short &&\n        rsiData[index] > short\n    );\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    if (_.isEmpty(stock) || stock.count <= 0) return;\n\n    let rsioptions = options && options[OPTIONS_NAME];\n    let short = rsioptions && rsioptions.short;\n    let currentData = stockData[index];\n    let tradeDate = currentData.trade_date;\n    let targetPrice = currentData.close;\n    let rsiData = stockData[RSI_DATA];\n\n    if (checkSellCondition(index, stockData, options)) {\n        debug(\n            `卖出条件检查${tradeDate}: ${targetPrice.toFixed(2)}[昨日 rsi: ${\n                rsiData[index - 1]\n            }, 今日rsi : ${rsiData[index]}, 上穿 ${short.toFixed(2)}\n            }]`\n        );\n        return trans.createSellTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            stock.count,\n            targetPrice,\n            \"rsi\",\n            `RSI恐慌卖出 ${targetPrice.toFixed(2)}, ${rsiData[index].toFixed(\n                2\n            )}`\n        );\n    }\n\n    // let rsioptions = options && options[OPTIONS_NAME];\n    // // 平均的计算日数\n    // let n = rsioptions && rsioptions.n;\n\n    // // 判断rsi下穿\n    // let short = rsioptions && rsioptions.short;\n    // let targetPrice = currentData.close;\n    // if (\n    //     rsiData &&\n    //     rsiData[index - 1] &&\n    //     rsiData[index] &&\n    //     rsiData[index - 1] <= short &&\n    //     rsiData[index] > short\n    // ) {\n    //     debug(\n    //         `卖出条件检查${tradeDate}: ${targetPrice.toFixed(2)}[昨日 rsi: ${\n    //             rsiData[index - 1]\n    //         }, 今日rsi : ${rsiData[index]}, 上穿 ${short.toFixed(2)}\n    //         }]`\n    //     );\n    //     return engine.createSellTransaction(\n    //         stockInfo,\n    //         tradeDate,\n    //         index,\n    //         stock.count,\n    //         targetPrice,\n    //         \"rsi\",\n    //         `RSI恐慌卖出 ${targetPrice.toFixed(2)}`\n    //     );\n    // }\n}\n\n/**\n * 将搜索得到的列表生成分析报表\n *\n * @param {*} results 搜索的匹配列表\n * @param {*} options 匹配使用的参数\n */\nasync function createReports(results, options) {\n    if (_.isNil(results)) return;\n\n    let reports = [];\n\n    let buyList = results && results[\"BUY\"];\n    let bdays = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(buyList)) {\n        for (let item of buyList) {\n            bdays[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"买入\", data: bdays });\n    }\n\n    let sellList = results && results[\"SELL\"];\n    let sdays = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(sellList)) {\n        for (let item of sellList) {\n            sdays[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"卖出\", data: sdays });\n    }\n\n    return reports;\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${RSI_PANIC.name}[${RSI_PANIC.label}] 参数：\nRSI平均周期 [${options.rsi.n}]\n价格上涨均线天数 [${options.rsi.ma}]\n\nRSI突破买入下限: ${options.rsi.long}%\nRSI突破卖出上限: ${options.rsi.short}%\n`;\n}\n\nconst RSI_PANIC = {\n    name: \"RSI恐慌\",\n    label: RULE_NAME,\n\n    description: \"RSI恐慌买卖\",\n    methodTypes: {},\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n    createReports,\n};\n\nexport default RSI_PANIC;\n","/**\n * WVF指标，Williams VIX Fix\n *\n * 参数\n *  n: 表示回看天数\n *  digits: 保留小数位数\n *\n * RSI = 100-[1/1+（avg(gain)/avg(loss)]\n */\n\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\n/**\n * 计算WVF指标\n * @param {Array} tradeData 数据数组\n * @param {*} options 参数配置，RSI包含n属性\n */\nfunction wvf(tradeData, { n = 4, digits = 3 } = {}) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        _.isEmpty(tradeData) ||\n        !_.isArray(tradeData) ||\n        tradeData.length <= 0\n    ) {\n        return;\n    }\n\n    // wvf = ((highest(close, n)-low)/(highest(close, n)))*100\n    let wvf = [];\n    if (!_.isNil(tradeData) && !_.isEmpty(tradeData)) {\n        let highest = 0.0;\n        for (let i = 0; i < tradeData.length; i++) {\n            if (i < n - 1) {\n                continue;\n            }\n\n            highest = 0.0;\n            for (let j = 0; j < n; j++) {\n                let close = tradeData[i - j].close;\n                highest = highest >= close ? highest : close;\n            }\n            wvf[i] = (100.0 * (highest - tradeData[i].low)) / highest;\n        }\n    }\n    return wvf;\n}\n\nexport default {\n    name: \"WVF\",\n    label: \"VIX Fix\",\n    description: \"用于计算市场恐慌程度\",\n    calculate: wvf,\n};\n","import _ from \"lodash\";\nimport trans from \"../transaction\";\nimport WVF from \"../indicators/wvf\";\n\nimport debugpkg from \"debug\";\nimport utils from \"../utils\";\nconst debug = debugpkg(\"rules:vixfix\");\n\nconst OPTIONS_NAME = \"vixfix\";\nconst RULE_NAME = \"vixfix\";\nconst WVF_DATA = Symbol(\"WVF_DATA\");\n// const MA_DATA = Symbol(\"MA_DATA\");\n\n/**\n * VIX Fix中需要计算WVF，对应的布林带，对应的\n * @param {*} stockData\n * @param {*} options 配置参数\n */\nfunction calculateData(stockData, options) {\n    if (_.isNil(stockData)) return;\n\n    if (_.isNil(stockData[WVF_DATA])) {\n        let wvf = WVF.calculate(stockData, {\n            n: options.vixfix.n,\n            digits: options.vixfix.digits,\n        });\n\n        let boll = utils.boll(\n            wvf,\n            options.vixfix.bn,\n            options.vixfix.multi,\n            null,\n            options.vixfix.digits\n        );\n\n        stockData[WVF_DATA] = [wvf, boll];\n    }\n}\n\nfunction check(index, stockData, options, tsCode) {\n    calculateData(stockData, options);\n\n    if (\n        stockData &&\n        _.isArray(stockData) &&\n        index < stockData.length &&\n        index >= 0\n    ) {\n        let tradeDate = stockData[index].trade_date;\n        let [wvfData, bollData] = stockData[WVF_DATA];\n\n        if (checkBuyCondition(index, stockData, options)) {\n            // 买入信号\n            return {\n                tsCode,\n                dataIndex: index,\n                date: tradeDate,\n                tradeType: \"buy\",\n                hasSignals: true,\n                signal: \"BUY\",\n                type: \"WVF\",\n                memo: `WVF恐慌买入 [${stockData[index].trade_date}] ${wvfData[\n                    index\n                ].toFixed(2)}`,\n            };\n        }\n\n        if (checkSellCondition(index, stockData, options)) {\n            // 卖出信号\n            return {\n                tsCode,\n                dataIndex: index,\n                date: tradeDate,\n                hasSignals: true,\n                tradeType: \"sell\",\n                signal: \"SELL\",\n                type: \"WVF\",\n                memo: `WVF恐慌卖出 [${stockData[index].trade_date}] ${wvfData[\n                    index\n                ].toFixed(2)}`,\n            };\n        }\n    }\n}\n\nfunction checkBuyCondition(index, stockData, options) {\n    let wvfoptions = options && options[OPTIONS_NAME];\n    // 检查WVF最大值的回看天数\n    let lbn = (wvfoptions && wvfoptions.lbn) || 50;\n    let ph = (wvfoptions && wvfoptions.ph) || 0.9; // 默认90%\n\n    if (lbn < 1 || lbn > index) return false;\n    let [wvfData, bollData] = stockData[WVF_DATA];\n\n    // let currentData = stockData[index];\n\n    // 买入条件主要是 wvf 超过 boll上限；或者wvf超过最近一段时间最高wvf的ph倍\n    if (wvfData[index] >= bollData[index][1]) return true;\n    let rangeHigh = utils.highest(wvfData, index, lbn + 1, null) * ph;\n    if (wvfData[index] >= rangeHigh) return true;\n\n    return false;\n}\n\n/**\n * 检查买入条件\n * @param {*} stockInfo 股票信息\n * @param {double} balance 账户余额\n * @param {*} tradeDate 交易日期\n * @param {int} index 交易日数据索引位置\n * @param {*} stockData 数据\n * @param {*} options 算法参数\n */\nfunction checkBuyTransaction(stockInfo, balance, index, stockData, options) {\n    if (balance <= 0) return;\n    calculateData(stockData, options);\n    // debug(`买入检查: ${balance}, ${tradeDate}, %o, ${index}`, stockData);\n\n    // let wvfoptions = options && options[OPTIONS_NAME];\n    let currentData = stockData[index];\n    let targetPrice = currentData.close;\n    let tradeDate = stockData[index].trade_date;\n    let [wvfData, bollData] = stockData[WVF_DATA];\n    if (checkBuyCondition(index, stockData, options)) {\n        debug(\n            `买入条件检查${tradeDate}: ${targetPrice.toFixed(\n                2\n            )} [WVF: ${wvfData[index].toFixed(2)}, boll上限 ${bollData[\n                index\n            ][1].toFixed(2)}]`\n        );\n        return trans.createBuyTransaction(\n            stockInfo,\n            tradeDate,\n            index,\n            balance,\n            targetPrice,\n            \"WVF\",\n            `WVF恐慌买入 ${targetPrice.toFixed(2)}, ${wvfData[index].toFixed(\n                2\n            )}`\n        );\n    }\n}\n\nfunction checkSellCondition(index, stockData, options) {\n    return false;\n}\n\n/**\n * 检查是否可以生成卖出交易，如果可以卖出，产生卖出交易记录\n *\n * @param {*} info 股票信息\n * @param {*} stock 持仓信息\n * @param {*} index 今日数据索引位置\n * @param {*} stockData 日线数据\n * @param {*} options 算法参数\n */\nfunction checkSellTransaction(stockInfo, stock, index, stockData, options) {\n    // if (_.isEmpty(stock) || stock.count <= 0) return;\n    // if (checkSellCondition(index, stockData, options)) {\n    //     debug(\n    //         `卖出条件检查${tradeDate}: ${targetPrice.toFixed(2)}[昨日 rsi: ${\n    //             rsiData[index - 1]\n    //         }, 今日rsi : ${rsiData[index]}, 上穿 ${short.toFixed(2)}\n    //         }]`\n    //     );\n    //     return trans.createSellTransaction(\n    //         stockInfo,\n    //         tradeDate,\n    //         index,\n    //         stock.count,\n    //         targetPrice,\n    //         \"WVF\",\n    //         `WVF恐慌卖出 ${targetPrice.toFixed(2)}, ${rsiData[index].toFixed(\n    //             2\n    //         )}`\n    //     );\n    // }\n}\n\n/**\n * 将搜索得到的列表生成分析报表\n *\n * @param {*} results 搜索的匹配列表\n * @param {*} options 匹配使用的参数\n */\nasync function createReports(results, options) {\n    if (_.isNil(results)) return;\n\n    let reports = [];\n\n    let buyList = results && results[\"BUY\"];\n    let bdays = [{ label: \"全部\", data: [] }];\n    if (!_.isEmpty(buyList)) {\n        for (let item of buyList) {\n            bdays[0].data.push(item.tsCode);\n        }\n        reports.push({ label: \"买入\", data: bdays });\n    }\n\n    return reports;\n}\n\n/**\n * 返回参数配置的显示信息\n * @param {*}} opions 参数配置\n */\nfunction showOptions(options) {\n    return `\n模型 ${WVF_PANIC.name}[${WVF_PANIC.label}] 参数：\nWVF计算周期 [${options.vixfix.n}]\n\nWVF布林带参数 [天数: ${options.vixfix.bn}, 倍数: ${options.vixfix.multi} ]\n\nWVF交易值检查 [周期: ${options.vixfix.lbn}, 最大值倍数: ${\n        options.vixfix.ph * 100\n    }%]\n`;\n}\n\nconst WVF_PANIC = {\n    name: \"WVF恐慌\",\n    label: RULE_NAME,\n\n    description: \"WVF恐慌买卖\",\n    methodTypes: {},\n    checkBuyTransaction,\n    checkSellTransaction,\n    check,\n    showOptions,\n    createReports,\n};\n\nexport default WVF_PANIC;\n","/**\n * 基本动量指标\n *\n * 参数：\n *  n: 短期平均天数\n *  m: 长期平均天数\n *  source: hl, ohlc\n */\n\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\nfunction ao(tradeData, options) {\n    utils.checkTradeData(tradeData);\n\n    if (\n        !_.isEmpty(tradeData) &&\n        _.isArray(tradeData) &&\n        tradeData.length > 0 &&\n        options &&\n        options.n >= 1 &&\n        options.m >= 1\n    ) {\n        let source =\n            options && options.source === \"ohlc\" ? utils.ohlc : utils.hl;\n        let digits = options.digits || 3;\n\n        let ma1 = utils.ma(tradeData, options.n, source, \"ma\", digits);\n        let ma2 = utils.ma(tradeData, options.m, source, \"ma\", digits);\n\n        let momentum = tradeData.map((item, i, all) => {\n            if (i >= options.n && i > options.m) {\n                return utils.toFixed(ma1[i] - ma2[i], digits);\n            } else {\n                return 0;\n            }\n        });\n        return momentum;\n    }\n}\n\nexport default {\n    name: \"AO\",\n    label: \"动量震动指标\",\n    description: \"比尔威廉姆斯动量振荡器指标\",\n    calculate: ao,\n};\n","/**\n * TTM Trend\n * 暂未完成，这个部分书上的描述并不清晰，对于如何比较前六个柱价格和当前柱的关系无法准确确定\n *\n * 摘抄：\n * 这项技术将前6根柱状线价格做平均。如果前面6根柱状线的平均价格位于交易区间的上半部分，\n * 则把当前柱状线涂成蓝色，代表偏向看涨和稳定的买方压力。然而，如果前面6根柱状线的平均\n * 价格位于交易区间的下半部分，那么当前柱状线将被涂成红色，代表偏向看跌和稳定的卖方压力。\n *\n * 参数\n *  n: 6 过去的天数\n *  type: TTM | HA\n */\nimport _ from \"lodash\";\nimport utils from \"../utils\";\n\n/**\n * 计算每日的趋势情况，返回值设置为涨或跌，用1和0表示\n * @param {*} tradeData 所有数据\n * @param {*} options 参数，n 平均周期, type 平均类型, digits 保留小数位数\n */\nfunction ttmtrend(tradeData, { n = 6, type = \"TTM\" } = {}) {\n    utils.checkTradeData(tradeData);\n\n    let trends = [];\n    // TTM暂未实现，只能给出HA结果！\n    type = \"HA\";\n    if (!_.isNil(tradeData) && !_.isEmpty(tradeData)) {\n        for (let i = 0; i < tradeData.length; i++) {\n            let data = tradeData[i];\n            let up = data.close >= data.open;\n\n            let trend;\n            if (type === \"TTM\") {\n                if (i === 0) {\n                    trend =\n                        (tradeData[0].open + tradeData[0].close) / 2 >=\n                        (tradeData[0].high + tradeData[0].low) / 2\n                            ? 1\n                            : 0;\n                } else {\n                    // let hl = (data.high + data.low) / 2;\n                    let avg = 0;\n                    let high = 0;\n                    let low = Number.MAX_VALUE;\n                    let len = 0;\n                    for (let j = 0; j < n; j++) {\n                        if (i - j - 1 >= 0) {\n                            let ld = tradeData[i - j - 1];\n                            avg += (ld.open + ld.close) / 2;\n                            high = Math.max(high, ld.high);\n                            low = Math.min(low, ld.low);\n                            len++;\n                        } else {\n                            break;\n                        }\n                    }\n                    avg = avg / len / 2;\n                    let hl = (high + low) / 2;\n                    trend = hl >= avg;\n                }\n            } else if (type === \"HA\") {\n                // HA pattern\n                if (i > 0) {\n                    let o =\n                        (tradeData[i - 1].open + tradeData[i - 1].close) / 2;\n                    let c =\n                        (tradeData[i].open +\n                            tradeData[i].high +\n                            tradeData[i].low +\n                            tradeData[i].close) /\n                        4;\n                    //up = c >= o;\n                    // 1/0表示正常升降，3/2表示修改升降\n                    trend = c >= o;\n                }\n                //trends[i] = up;\n            }\n\n            if (up) {\n                trends[i] = trend ? 1 : 2;\n            } else {\n                trends[i] = trend ? 3 : 0;\n            }\n        }\n    }\n\n    return trends;\n}\n\nexport default {\n    name: \"TTM趋势\",\n    label: \"TTMTrend\",\n    description: \"将前几日的市场情况纳入到对今日趋势的判断中\",\n    calculate: ttmtrend,\n};\n","/**\n * 抢帽子警报，内容非常简单，连续三个收盘价涨/跌作为警报，警报放在第一根线（3个连续的第一个）\n */\n\nimport _ from \"lodash\";\n\nconst REST = \"--\";\nconst BUY_READY = \"BUY_READY\";\nconst SELL_READY = \"SELL_READY\";\nconst BUY = \"BUY\";\nconst SELL = \"SELL\";\n\nfunction scalper(tradeData) {\n    let retData = [];\n    if (!_.isNil(tradeData) && !_.isEmpty(tradeData)) {\n        let currentState = REST;\n        for (let i = 0; i < tradeData.length; i++) {\n            if (i < 2) {\n                retData[i] = [\n                    tradeData[i].trade_date,\n                    REST,\n                    tradeData[i].close,\n                ];\n            } else {\n                let data = tradeData[i];\n                let data1 = tradeData[i - 1];\n                let data2 = tradeData[i - 2];\n                if (\n                    currentState !== BUY &&\n                    data.close > data1.close &&\n                    data1.close > data2.close\n                ) {\n                    // UP\n                    retData[i - 2] = [data2.trade_date, BUY_READY, data2.low];\n                    retData[i - 1] = [data1.trade_date, BUY, data2.close];\n                    retData[i] = [data.trade_date, BUY, data.close];\n                    currentState = BUY;\n                } else if (\n                    currentState !== SELL &&\n                    data.close < data1.close &&\n                    data1.close < data2.close\n                ) {\n                    retData[i - 2] = [data2.trade_date, SELL_READY, data2.high];\n                    retData[i - 1] = [data1.trade_date, SELL, data2.close];\n                    retData[i] = [data.trade_date, SELL, data.close];\n                    currentState = SELL;\n                } else {\n                    retData[i] = [data.trade_date, currentState, data.close];\n                }\n            }\n        }\n    }\n\n    return retData;\n}\n\nexport default {\n    name: \"Scalper\",\n    label: \"抢帽子\",\n    description: \"抢帽子警报\",\n    calculate: scalper,\n    states: {\n        REST,\n        BUY_READY,\n        SELL_READY,\n        BUY,\n        SELL,\n    },\n};\n","/**\n * 自选列表\n */\nconst { getDataRoot } = require(\"@wt/lib-wtda-query\");\nconst _ = require(\"lodash\");\nconst moment = require(\"moment\");\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst fp = fs.promises;\n\nasync function readFavorites() {\n    let retData = {\n        updateTime: null,\n        favorites: [],\n        // 下面考虑放个字段说明\n    };\n\n    try {\n        let dataFile = getFavoritesFile();\n        try {\n            retData = JSON.parse(await fp.readFile(dataFile, \"utf-8\"));\n        } catch (error) {\n            // 文件不存在，不考虑其它错误\n            if (!(error && error.code === \"ENOENT\")) {\n                console.error(\n                    `读取自选文件${dataFile}时发生错误：${error}, %o`,\n                    error\n                );\n            } else {\n                console.error(`读取自选文件${dataFile}不存在，%o`, error);\n            }\n        }\n    } catch (error) {\n        console.error(`从本地读取自选数据发生错误 ${error}`);\n    }\n    return retData;\n}\n\nfunction getFavoritesFile() {\n    return path.join(getDataRoot(), \"favorites.json\");\n}\n\nasync function removeFavorites(tsCodes) {\n    let retData = await readFavorites();\n    if (_.isEmpty(tsCodes)) return retData;\n\n    let newCodes = [];\n    if (_.isArray(tsCodes)) {\n        if (tsCodes.length <= 0) return retData;\n        newCodes = tsCodes;\n    } else {\n        newCodes.push(tsCodes);\n    }\n\n    if (_.isEmpty(retData)) {\n        retData = { updateTime: null, favorites: [] };\n    }\n\n    if (_.isEmpty(retData.favorites) || !_.isArray(retData.favorites)) {\n        retData.favorites = [];\n    }\n\n    for (let newCode of newCodes) {\n        for (let i in retData.favorites) {\n            if (retData.favorites[i] === newCode) {\n                retData.favorites.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    retData.updateTime = moment().toISOString();\n    await saveFavorites(retData);\n    return retData;\n}\n\nasync function addFavorites(tsCodes) {\n    let retData = await readFavorites();\n    if (_.isEmpty(tsCodes)) return retData;\n\n    let newCodes = [];\n    if (_.isArray(tsCodes)) {\n        if (tsCodes.length <= 0) return retData;\n        newCodes = tsCodes;\n    } else {\n        newCodes.push(tsCodes);\n    }\n\n    if (_.isEmpty(retData)) {\n        retData = { updateTime: null, favorites: [] };\n    }\n\n    if (_.isEmpty(retData.favorites) || !_.isArray(retData.favorites)) {\n        retData.favorites = [];\n    }\n\n    for (let newCode of newCodes) {\n        let found = false;\n        for (let code of retData.favorites) {\n            if (code === newCode) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) retData.favorites.push(newCode);\n    }\n\n    retData.updateTime = moment().toISOString();\n    await saveFavorites(retData);\n    return retData;\n}\n\nasync function saveFavorites(data) {\n    try {\n        let jsonStr = JSON.stringify(data);\n        let favoritesPath = getFavoritesFile();\n\n        await fp.writeFile(favoritesPath, jsonStr, { encoding: \"utf-8\" });\n    } catch (error) {\n        throw new Error(\"保存列表数据时出现错误，请检查后重新执行：\" + error);\n    }\n}\n\nexport default { addFavorites, removeFavorites, readFavorites };\n","// const simulate = require(\"./simulator\");\nimport simulate from \"./simulator\";\nimport search from \"./search\";\nimport engine from \"./transaction-engine\";\nimport * as reports from \"./reports\";\n\nimport benchmark from \"./rules/benchmark-basic\";\nimport mmb from \"./rules/momentum-breakthrough\";\nimport stoploss from \"./rules/stoploss\";\nimport outsideday from \"./rules/outsideday\";\nimport opensell from \"./rules/opensell\";\nimport smashday from \"./rules/smashday\";\nimport squeeze from \"./rules/squeeze\";\nimport swing from \"./rules/swing\";\nimport holp from \"./rules/holp\";\nimport rsi from \"./rules/rsi-panic\";\nimport vixfix from \"./rules/vixfix\";\n\nimport MA from \"./indicators/ma\";\nimport ATR from \"./indicators/atr\";\nimport KC from \"./indicators/keltner-channel\";\nimport BOLL from \"./indicators/boll\";\nimport MTM from \"./indicators/mtm\";\nimport AO from \"./indicators/ao\";\nimport SQUEEZE from \"./indicators/squeeze\";\nimport TTMWave from \"./indicators/ttmwave\";\nimport TTMTrend from \"./indicators/ttmtrend\";\nimport Scalper from \"./indicators/scalper\";\nimport RSI from \"./indicators/rsi\";\nimport WVF from \"./indicators/wvf\";\nimport utils from \"./utils\";\n\nimport favorites from \"./favorites\";\n\nconst indicators = {\n    MA,\n    ATR,\n    KC,\n    BOLL,\n    MTM,\n    AO,\n    SQUEEZE,\n    TTMWave,\n    TTMTrend,\n    Scalper,\n    RSI,\n    WVF,\n};\n\nconst rules = {\n    mmb,\n    stoploss,\n    benchmark,\n    outsideday,\n    opensell,\n    smashday,\n    squeeze,\n    swing,\n    holp,\n    rsi,\n    vixfix,\n};\n\nexport {\n    simulate,\n    search,\n    engine,\n    rules,\n    reports,\n    indicators,\n    utils,\n    favorites,\n};\n"],"names":["ORGANIZED","Symbol","ADJUSTED","checkTradeData","data","digits","_","isEmpty","isArray","checkOrder","reverse","prevadj_factor","calculatePrevAdjPrice","dailyData","length","forEach","item","origin","open","close","high","low","pre_close","change","toFixed","readData","prop","isFunction","isString","num","Number","array","isObject","has","trade_date","average","index","n","Array","desc","step","lastIndex","i","count","sum","highest","tmp","Math","max","lowest","min","ma","type","sma","ema","ret","tr","abs","ohlc","hl","boll","multi","std","stdev","up","down","d","j","sqrt","formatFxstr","toLocaleString","debug","debugpkg","executeTransaction","stockData","capitalData","options","translog","tradeDate","stockInfo","info","sellRules","rules","sell","buyRules","buy","stocks","stockId","stock","sold","rule","name","checkSellTransaction","transeq","executeCapitalSettlement","utils","price","total","commission","fee","duty","memo","fixCash","cash","balance","initBalance","checkBuyTransaction","_transeq","ts_code","push","splice","settledlog","date","profit","income","transactions","createSellTransaction","tradeDateIndex","methodType","calculateTransactionFee","dateIndex","amount","createBuyTransaction","parseInt","exchange","parseCapitalReports","count_win","total_win","count_loss","total_loss","total_profit","total_fee","max_profit","max_loss","average_profit","average_win","average_loss","max_wintimes","max_losstimes","max_windays","max_lossdays","average_windays","average_lossdays","selltypes","ror_win","ror_loss","ror","tmp_cost","tmp_cost_win","tmp_cost_loss","currentType","tmp_times","tmp_windays","tmp_lossdays","log","days","selltype","times","win_times","loss_times","showCapitalReports","stockvalue","capitalResult","showTransactions","logTransaction","holdlog","parseWorkdayReports","results","day","win_ratio","win","loss_ratio","loss","ratio_winloss","max_win","trans","moment","res","showWorkdayReports","reports","grid","CG","CGS","Style","columns","id","align","rows","report","workday","red","win_average","green","loss_average","cyan","profit_average","option","render","console","showOptionsInfo","buys","usedRules","label","sells","rules_desc","showOptions","startDate","simulate","stockListData","readStockList","stockList","filterStockList","stockItem","readStockData","stockDataNames","daily","updateTime","format","filterStockData","currentDate","isAfter","engine","showTrans","showWorkdays","selectedStocks","map","tsCode","filter","findIndex","slice","path","require","fs","fp","promises","match","search","allSignals","prepareStockData","matched","check","hasSignals","foundSignals","tradeType","signal","toISOString","dupList","needDupList","ruleData","createReports","stateList","codeList","code","dupReports","unshift","saveReports","getReportsFile","join","getDataRoot","jsonStr","JSON","stringify","filePath","writeFile","encoding","error","Error","readReports","retData","dataFile","parse","readFile","all","RULE_NAME","currentData","targetPrice","bmoptions","priceType","sellPrice","benchmark","description","methodTypes","OPTIONS_NAME","checkMMBBuyTransaction","mmboptions","N","P","mmbType","checkMMBSellTransaction","nommb1","nommb2","L","mmb","mmb1","mmb2","checkStoplossTransaction","S","lossPrice","stoploss","data2","data1","outsideday","opensell","smashday","dataIndex","validDays","smashType","smash1","smash2","tradeData","source","calculate","atr","keltner","MA","type1","ATR","type2","m","mtm","momentum","subtract","array1","array2","ttmwave","la","useb","mb","lb","usec","mc","lc","fastMA1","slowMA1","macd1","signal1","hist1","fastMA2","slowMA2","macd2","signal2","hist2","fastMA3","slowMA3","macd3","signal3","hist3","fastMA4","slowMA4","macd4","signal4","hist4","fastMA5","slowMA5","macd5","signal5","hist5","fastMA6","slowMA6","macd6","signal6","hist6","READY","REST","BUY","SELL","squeeze","km","bm","mt","mn","mm","tn","tm","tl","kcData","KC","bollData","BOLL","mtmData","MTM","waveData","TTMWave","mmData","currentState","states","ready","mmUp","nextState","SQUEEZE_DATA","TTMWAVE_DATA","checkTTM","upTrend","downTrend","ups","downs","sdata","SQUEEZE","need_condition_days","needCond","condition_days","cond","checkDays","trends","needSell","trade_days","state","ready_days","calculateSqueeze","isNil","squeeze_today","squeeze_lday","opt","readyList","buyList","bdays","buy_days","SWING_DATA","calculateSwing","l","earn1","earn2","ma1","ma2","ma3","swingData","started","lossState","target","ruleTarget","lossTarget","pullback_days","targets","checkSwing","swing","tran","minIndex","maxIndex","readyIndex","startPrice","startIndex","tranPrice","stateMemo","holp","rsi","avgGain","avgLoss","a","sumGain","sumLoss","gain","RSI_DATA","MA_DATA","calculateData","RSI","rsiData","checkBuyCondition","checkSellCondition","rsioptions","maData","long","short","sellList","sdays","RSI_PANIC","wvf","WVF_DATA","WVF","vixfix","bn","wvfData","wvfoptions","lbn","ph","rangeHigh","WVF_PANIC","ao","ttmtrend","trend","avg","MAX_VALUE","len","ld","o","c","BUY_READY","SELL_READY","scalper","readFavorites","favorites","getFavoritesFile","removeFavorites","tsCodes","newCodes","newCode","saveFavorites","addFavorites","found","favoritesPath","indicators","AO","TTMTrend","Scalper"],"mappings":"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"}